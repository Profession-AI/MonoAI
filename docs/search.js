window.pdocSearch = (function(){
/** elasticlunr - http://weixsong.github.io * Copyright (C) 2017 Oliver Nightingale * Copyright (C) 2017 Wei Song * MIT Licensed */!function(){function e(e){if(null===e||"object"!=typeof e)return e;var t=e.constructor();for(var n in e)e.hasOwnProperty(n)&&(t[n]=e[n]);return t}var t=function(e){var n=new t.Index;return n.pipeline.add(t.trimmer,t.stopWordFilter,t.stemmer),e&&e.call(n,n),n};t.version="0.9.5",lunr=t,t.utils={},t.utils.warn=function(e){return function(t){e.console&&console.warn&&console.warn(t)}}(this),t.utils.toString=function(e){return void 0===e||null===e?"":e.toString()},t.EventEmitter=function(){this.events={}},t.EventEmitter.prototype.addListener=function(){var e=Array.prototype.slice.call(arguments),t=e.pop(),n=e;if("function"!=typeof t)throw new TypeError("last argument must be a function");n.forEach(function(e){this.hasHandler(e)||(this.events[e]=[]),this.events[e].push(t)},this)},t.EventEmitter.prototype.removeListener=function(e,t){if(this.hasHandler(e)){var n=this.events[e].indexOf(t);-1!==n&&(this.events[e].splice(n,1),0==this.events[e].length&&delete this.events[e])}},t.EventEmitter.prototype.emit=function(e){if(this.hasHandler(e)){var t=Array.prototype.slice.call(arguments,1);this.events[e].forEach(function(e){e.apply(void 0,t)},this)}},t.EventEmitter.prototype.hasHandler=function(e){return e in this.events},t.tokenizer=function(e){if(!arguments.length||null===e||void 0===e)return[];if(Array.isArray(e)){var n=e.filter(function(e){return null===e||void 0===e?!1:!0});n=n.map(function(e){return t.utils.toString(e).toLowerCase()});var i=[];return n.forEach(function(e){var n=e.split(t.tokenizer.seperator);i=i.concat(n)},this),i}return e.toString().trim().toLowerCase().split(t.tokenizer.seperator)},t.tokenizer.defaultSeperator=/[\s\-]+/,t.tokenizer.seperator=t.tokenizer.defaultSeperator,t.tokenizer.setSeperator=function(e){null!==e&&void 0!==e&&"object"==typeof e&&(t.tokenizer.seperator=e)},t.tokenizer.resetSeperator=function(){t.tokenizer.seperator=t.tokenizer.defaultSeperator},t.tokenizer.getSeperator=function(){return t.tokenizer.seperator},t.Pipeline=function(){this._queue=[]},t.Pipeline.registeredFunctions={},t.Pipeline.registerFunction=function(e,n){n in t.Pipeline.registeredFunctions&&t.utils.warn("Overwriting existing registered function: "+n),e.label=n,t.Pipeline.registeredFunctions[n]=e},t.Pipeline.getRegisteredFunction=function(e){return e in t.Pipeline.registeredFunctions!=!0?null:t.Pipeline.registeredFunctions[e]},t.Pipeline.warnIfFunctionNotRegistered=function(e){var n=e.label&&e.label in this.registeredFunctions;n||t.utils.warn("Function is not registered with pipeline. This may cause problems when serialising the index.\n",e)},t.Pipeline.load=function(e){var n=new t.Pipeline;return e.forEach(function(e){var i=t.Pipeline.getRegisteredFunction(e);if(!i)throw new Error("Cannot load un-registered function: "+e);n.add(i)}),n},t.Pipeline.prototype.add=function(){var e=Array.prototype.slice.call(arguments);e.forEach(function(e){t.Pipeline.warnIfFunctionNotRegistered(e),this._queue.push(e)},this)},t.Pipeline.prototype.after=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i+1,0,n)},t.Pipeline.prototype.before=function(e,n){t.Pipeline.warnIfFunctionNotRegistered(n);var i=this._queue.indexOf(e);if(-1===i)throw new Error("Cannot find existingFn");this._queue.splice(i,0,n)},t.Pipeline.prototype.remove=function(e){var t=this._queue.indexOf(e);-1!==t&&this._queue.splice(t,1)},t.Pipeline.prototype.run=function(e){for(var t=[],n=e.length,i=this._queue.length,o=0;n>o;o++){for(var r=e[o],s=0;i>s&&(r=this._queue[s](r,o,e),void 0!==r&&null!==r);s++);void 0!==r&&null!==r&&t.push(r)}return t},t.Pipeline.prototype.reset=function(){this._queue=[]},t.Pipeline.prototype.get=function(){return this._queue},t.Pipeline.prototype.toJSON=function(){return this._queue.map(function(e){return t.Pipeline.warnIfFunctionNotRegistered(e),e.label})},t.Index=function(){this._fields=[],this._ref="id",this.pipeline=new t.Pipeline,this.documentStore=new t.DocumentStore,this.index={},this.eventEmitter=new t.EventEmitter,this._idfCache={},this.on("add","remove","update",function(){this._idfCache={}}.bind(this))},t.Index.prototype.on=function(){var e=Array.prototype.slice.call(arguments);return this.eventEmitter.addListener.apply(this.eventEmitter,e)},t.Index.prototype.off=function(e,t){return this.eventEmitter.removeListener(e,t)},t.Index.load=function(e){e.version!==t.version&&t.utils.warn("version mismatch: current "+t.version+" importing "+e.version);var n=new this;n._fields=e.fields,n._ref=e.ref,n.documentStore=t.DocumentStore.load(e.documentStore),n.pipeline=t.Pipeline.load(e.pipeline),n.index={};for(var i in e.index)n.index[i]=t.InvertedIndex.load(e.index[i]);return n},t.Index.prototype.addField=function(e){return this._fields.push(e),this.index[e]=new t.InvertedIndex,this},t.Index.prototype.setRef=function(e){return this._ref=e,this},t.Index.prototype.saveDocument=function(e){return this.documentStore=new t.DocumentStore(e),this},t.Index.prototype.addDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.addDoc(i,e),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));this.documentStore.addFieldLength(i,n,o.length);var r={};o.forEach(function(e){e in r?r[e]+=1:r[e]=1},this);for(var s in r){var u=r[s];u=Math.sqrt(u),this.index[n].addToken(s,{ref:i,tf:u})}},this),n&&this.eventEmitter.emit("add",e,this)}},t.Index.prototype.removeDocByRef=function(e){if(e&&this.documentStore.isDocStored()!==!1&&this.documentStore.hasDoc(e)){var t=this.documentStore.getDoc(e);this.removeDoc(t,!1)}},t.Index.prototype.removeDoc=function(e,n){if(e){var n=void 0===n?!0:n,i=e[this._ref];this.documentStore.hasDoc(i)&&(this.documentStore.removeDoc(i),this._fields.forEach(function(n){var o=this.pipeline.run(t.tokenizer(e[n]));o.forEach(function(e){this.index[n].removeToken(e,i)},this)},this),n&&this.eventEmitter.emit("remove",e,this))}},t.Index.prototype.updateDoc=function(e,t){var t=void 0===t?!0:t;this.removeDocByRef(e[this._ref],!1),this.addDoc(e,!1),t&&this.eventEmitter.emit("update",e,this)},t.Index.prototype.idf=function(e,t){var n="@"+t+"/"+e;if(Object.prototype.hasOwnProperty.call(this._idfCache,n))return this._idfCache[n];var i=this.index[t].getDocFreq(e),o=1+Math.log(this.documentStore.length/(i+1));return this._idfCache[n]=o,o},t.Index.prototype.getFields=function(){return this._fields.slice()},t.Index.prototype.search=function(e,n){if(!e)return[];e="string"==typeof e?{any:e}:JSON.parse(JSON.stringify(e));var i=null;null!=n&&(i=JSON.stringify(n));for(var o=new t.Configuration(i,this.getFields()).get(),r={},s=Object.keys(e),u=0;u<s.length;u++){var a=s[u];r[a]=this.pipeline.run(t.tokenizer(e[a]))}var l={};for(var c in o){var d=r[c]||r.any;if(d){var f=this.fieldSearch(d,c,o),h=o[c].boost;for(var p in f)f[p]=f[p]*h;for(var p in f)p in l?l[p]+=f[p]:l[p]=f[p]}}var v,g=[];for(var p in l)v={ref:p,score:l[p]},this.documentStore.hasDoc(p)&&(v.doc=this.documentStore.getDoc(p)),g.push(v);return g.sort(function(e,t){return t.score-e.score}),g},t.Index.prototype.fieldSearch=function(e,t,n){var i=n[t].bool,o=n[t].expand,r=n[t].boost,s=null,u={};return 0!==r?(e.forEach(function(e){var n=[e];1==o&&(n=this.index[t].expandToken(e));var r={};n.forEach(function(n){var o=this.index[t].getDocs(n),a=this.idf(n,t);if(s&&"AND"==i){var l={};for(var c in s)c in o&&(l[c]=o[c]);o=l}n==e&&this.fieldSearchStats(u,n,o);for(var c in o){var d=this.index[t].getTermFrequency(n,c),f=this.documentStore.getFieldLength(c,t),h=1;0!=f&&(h=1/Math.sqrt(f));var p=1;n!=e&&(p=.15*(1-(n.length-e.length)/n.length));var v=d*a*h*p;c in r?r[c]+=v:r[c]=v}},this),s=this.mergeScores(s,r,i)},this),s=this.coordNorm(s,u,e.length)):void 0},t.Index.prototype.mergeScores=function(e,t,n){if(!e)return t;if("AND"==n){var i={};for(var o in t)o in e&&(i[o]=e[o]+t[o]);return i}for(var o in t)o in e?e[o]+=t[o]:e[o]=t[o];return e},t.Index.prototype.fieldSearchStats=function(e,t,n){for(var i in n)i in e?e[i].push(t):e[i]=[t]},t.Index.prototype.coordNorm=function(e,t,n){for(var i in e)if(i in t){var o=t[i].length;e[i]=e[i]*o/n}return e},t.Index.prototype.toJSON=function(){var e={};return this._fields.forEach(function(t){e[t]=this.index[t].toJSON()},this),{version:t.version,fields:this._fields,ref:this._ref,documentStore:this.documentStore.toJSON(),index:e,pipeline:this.pipeline.toJSON()}},t.Index.prototype.use=function(e){var t=Array.prototype.slice.call(arguments,1);t.unshift(this),e.apply(this,t)},t.DocumentStore=function(e){this._save=null===e||void 0===e?!0:e,this.docs={},this.docInfo={},this.length=0},t.DocumentStore.load=function(e){var t=new this;return t.length=e.length,t.docs=e.docs,t.docInfo=e.docInfo,t._save=e.save,t},t.DocumentStore.prototype.isDocStored=function(){return this._save},t.DocumentStore.prototype.addDoc=function(t,n){this.hasDoc(t)||this.length++,this.docs[t]=this._save===!0?e(n):null},t.DocumentStore.prototype.getDoc=function(e){return this.hasDoc(e)===!1?null:this.docs[e]},t.DocumentStore.prototype.hasDoc=function(e){return e in this.docs},t.DocumentStore.prototype.removeDoc=function(e){this.hasDoc(e)&&(delete this.docs[e],delete this.docInfo[e],this.length--)},t.DocumentStore.prototype.addFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&(this.docInfo[e]||(this.docInfo[e]={}),this.docInfo[e][t]=n)},t.DocumentStore.prototype.updateFieldLength=function(e,t,n){null!==e&&void 0!==e&&0!=this.hasDoc(e)&&this.addFieldLength(e,t,n)},t.DocumentStore.prototype.getFieldLength=function(e,t){return null===e||void 0===e?0:e in this.docs&&t in this.docInfo[e]?this.docInfo[e][t]:0},t.DocumentStore.prototype.toJSON=function(){return{docs:this.docs,docInfo:this.docInfo,length:this.length,save:this._save}},t.stemmer=function(){var e={ational:"ate",tional:"tion",enci:"ence",anci:"ance",izer:"ize",bli:"ble",alli:"al",entli:"ent",eli:"e",ousli:"ous",ization:"ize",ation:"ate",ator:"ate",alism:"al",iveness:"ive",fulness:"ful",ousness:"ous",aliti:"al",iviti:"ive",biliti:"ble",logi:"log"},t={icate:"ic",ative:"",alize:"al",iciti:"ic",ical:"ic",ful:"",ness:""},n="[^aeiou]",i="[aeiouy]",o=n+"[^aeiouy]*",r=i+"[aeiou]*",s="^("+o+")?"+r+o,u="^("+o+")?"+r+o+"("+r+")?$",a="^("+o+")?"+r+o+r+o,l="^("+o+")?"+i,c=new RegExp(s),d=new RegExp(a),f=new RegExp(u),h=new RegExp(l),p=/^(.+?)(ss|i)es$/,v=/^(.+?)([^s])s$/,g=/^(.+?)eed$/,m=/^(.+?)(ed|ing)$/,y=/.$/,S=/(at|bl|iz)$/,x=new RegExp("([^aeiouylsz])\\1$"),w=new RegExp("^"+o+i+"[^aeiouwxy]$"),I=/^(.+?[^aeiou])y$/,b=/^(.+?)(ational|tional|enci|anci|izer|bli|alli|entli|eli|ousli|ization|ation|ator|alism|iveness|fulness|ousness|aliti|iviti|biliti|logi)$/,E=/^(.+?)(icate|ative|alize|iciti|ical|ful|ness)$/,D=/^(.+?)(al|ance|ence|er|ic|able|ible|ant|ement|ment|ent|ou|ism|ate|iti|ous|ive|ize)$/,F=/^(.+?)(s|t)(ion)$/,_=/^(.+?)e$/,P=/ll$/,k=new RegExp("^"+o+i+"[^aeiouwxy]$"),z=function(n){var i,o,r,s,u,a,l;if(n.length<3)return n;if(r=n.substr(0,1),"y"==r&&(n=r.toUpperCase()+n.substr(1)),s=p,u=v,s.test(n)?n=n.replace(s,"$1$2"):u.test(n)&&(n=n.replace(u,"$1$2")),s=g,u=m,s.test(n)){var z=s.exec(n);s=c,s.test(z[1])&&(s=y,n=n.replace(s,""))}else if(u.test(n)){var z=u.exec(n);i=z[1],u=h,u.test(i)&&(n=i,u=S,a=x,l=w,u.test(n)?n+="e":a.test(n)?(s=y,n=n.replace(s,"")):l.test(n)&&(n+="e"))}if(s=I,s.test(n)){var z=s.exec(n);i=z[1],n=i+"i"}if(s=b,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+e[o])}if(s=E,s.test(n)){var z=s.exec(n);i=z[1],o=z[2],s=c,s.test(i)&&(n=i+t[o])}if(s=D,u=F,s.test(n)){var z=s.exec(n);i=z[1],s=d,s.test(i)&&(n=i)}else if(u.test(n)){var z=u.exec(n);i=z[1]+z[2],u=d,u.test(i)&&(n=i)}if(s=_,s.test(n)){var z=s.exec(n);i=z[1],s=d,u=f,a=k,(s.test(i)||u.test(i)&&!a.test(i))&&(n=i)}return s=P,u=d,s.test(n)&&u.test(n)&&(s=y,n=n.replace(s,"")),"y"==r&&(n=r.toLowerCase()+n.substr(1)),n};return z}(),t.Pipeline.registerFunction(t.stemmer,"stemmer"),t.stopWordFilter=function(e){return e&&t.stopWordFilter.stopWords[e]!==!0?e:void 0},t.clearStopWords=function(){t.stopWordFilter.stopWords={}},t.addStopWords=function(e){null!=e&&Array.isArray(e)!==!1&&e.forEach(function(e){t.stopWordFilter.stopWords[e]=!0},this)},t.resetStopWords=function(){t.stopWordFilter.stopWords=t.defaultStopWords},t.defaultStopWords={"":!0,a:!0,able:!0,about:!0,across:!0,after:!0,all:!0,almost:!0,also:!0,am:!0,among:!0,an:!0,and:!0,any:!0,are:!0,as:!0,at:!0,be:!0,because:!0,been:!0,but:!0,by:!0,can:!0,cannot:!0,could:!0,dear:!0,did:!0,"do":!0,does:!0,either:!0,"else":!0,ever:!0,every:!0,"for":!0,from:!0,get:!0,got:!0,had:!0,has:!0,have:!0,he:!0,her:!0,hers:!0,him:!0,his:!0,how:!0,however:!0,i:!0,"if":!0,"in":!0,into:!0,is:!0,it:!0,its:!0,just:!0,least:!0,let:!0,like:!0,likely:!0,may:!0,me:!0,might:!0,most:!0,must:!0,my:!0,neither:!0,no:!0,nor:!0,not:!0,of:!0,off:!0,often:!0,on:!0,only:!0,or:!0,other:!0,our:!0,own:!0,rather:!0,said:!0,say:!0,says:!0,she:!0,should:!0,since:!0,so:!0,some:!0,than:!0,that:!0,the:!0,their:!0,them:!0,then:!0,there:!0,these:!0,they:!0,"this":!0,tis:!0,to:!0,too:!0,twas:!0,us:!0,wants:!0,was:!0,we:!0,were:!0,what:!0,when:!0,where:!0,which:!0,"while":!0,who:!0,whom:!0,why:!0,will:!0,"with":!0,would:!0,yet:!0,you:!0,your:!0},t.stopWordFilter.stopWords=t.defaultStopWords,t.Pipeline.registerFunction(t.stopWordFilter,"stopWordFilter"),t.trimmer=function(e){if(null===e||void 0===e)throw new Error("token should not be undefined");return e.replace(/^\W+/,"").replace(/\W+$/,"")},t.Pipeline.registerFunction(t.trimmer,"trimmer"),t.InvertedIndex=function(){this.root={docs:{},df:0}},t.InvertedIndex.load=function(e){var t=new this;return t.root=e.root,t},t.InvertedIndex.prototype.addToken=function(e,t,n){for(var n=n||this.root,i=0;i<=e.length-1;){var o=e[i];o in n||(n[o]={docs:{},df:0}),i+=1,n=n[o]}var r=t.ref;n.docs[r]?n.docs[r]={tf:t.tf}:(n.docs[r]={tf:t.tf},n.df+=1)},t.InvertedIndex.prototype.hasToken=function(e){if(!e)return!1;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return!1;t=t[e[n]]}return!0},t.InvertedIndex.prototype.getNode=function(e){if(!e)return null;for(var t=this.root,n=0;n<e.length;n++){if(!t[e[n]])return null;t=t[e[n]]}return t},t.InvertedIndex.prototype.getDocs=function(e){var t=this.getNode(e);return null==t?{}:t.docs},t.InvertedIndex.prototype.getTermFrequency=function(e,t){var n=this.getNode(e);return null==n?0:t in n.docs?n.docs[t].tf:0},t.InvertedIndex.prototype.getDocFreq=function(e){var t=this.getNode(e);return null==t?0:t.df},t.InvertedIndex.prototype.removeToken=function(e,t){if(e){var n=this.getNode(e);null!=n&&t in n.docs&&(delete n.docs[t],n.df-=1)}},t.InvertedIndex.prototype.expandToken=function(e,t,n){if(null==e||""==e)return[];var t=t||[];if(void 0==n&&(n=this.getNode(e),null==n))return t;n.df>0&&t.push(e);for(var i in n)"docs"!==i&&"df"!==i&&this.expandToken(e+i,t,n[i]);return t},t.InvertedIndex.prototype.toJSON=function(){return{root:this.root}},t.Configuration=function(e,n){var e=e||"";if(void 0==n||null==n)throw new Error("fields should not be null");this.config={};var i;try{i=JSON.parse(e),this.buildUserConfig(i,n)}catch(o){t.utils.warn("user configuration parse failed, will use default configuration"),this.buildDefaultConfig(n)}},t.Configuration.prototype.buildDefaultConfig=function(e){this.reset(),e.forEach(function(e){this.config[e]={boost:1,bool:"OR",expand:!1}},this)},t.Configuration.prototype.buildUserConfig=function(e,n){var i="OR",o=!1;if(this.reset(),"bool"in e&&(i=e.bool||i),"expand"in e&&(o=e.expand||o),"fields"in e)for(var r in e.fields)if(n.indexOf(r)>-1){var s=e.fields[r],u=o;void 0!=s.expand&&(u=s.expand),this.config[r]={boost:s.boost||0===s.boost?s.boost:1,bool:s.bool||i,expand:u}}else t.utils.warn("field name in user configuration not found in index instance fields");else this.addAllFields2UserConfig(i,o,n)},t.Configuration.prototype.addAllFields2UserConfig=function(e,t,n){n.forEach(function(n){this.config[n]={boost:1,bool:e,expand:t}},this)},t.Configuration.prototype.get=function(){return this.config},t.Configuration.prototype.reset=function(){this.config={}},lunr.SortedSet=function(){this.length=0,this.elements=[]},lunr.SortedSet.load=function(e){var t=new this;return t.elements=e,t.length=e.length,t},lunr.SortedSet.prototype.add=function(){var e,t;for(e=0;e<arguments.length;e++)t=arguments[e],~this.indexOf(t)||this.elements.splice(this.locationFor(t),0,t);this.length=this.elements.length},lunr.SortedSet.prototype.toArray=function(){return this.elements.slice()},lunr.SortedSet.prototype.map=function(e,t){return this.elements.map(e,t)},lunr.SortedSet.prototype.forEach=function(e,t){return this.elements.forEach(e,t)},lunr.SortedSet.prototype.indexOf=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;){if(r===e)return o;e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o]}return r===e?o:-1},lunr.SortedSet.prototype.locationFor=function(e){for(var t=0,n=this.elements.length,i=n-t,o=t+Math.floor(i/2),r=this.elements[o];i>1;)e>r&&(t=o),r>e&&(n=o),i=n-t,o=t+Math.floor(i/2),r=this.elements[o];return r>e?o:e>r?o+1:void 0},lunr.SortedSet.prototype.intersect=function(e){for(var t=new lunr.SortedSet,n=0,i=0,o=this.length,r=e.length,s=this.elements,u=e.elements;;){if(n>o-1||i>r-1)break;s[n]!==u[i]?s[n]<u[i]?n++:s[n]>u[i]&&i++:(t.add(s[n]),n++,i++)}return t},lunr.SortedSet.prototype.clone=function(){var e=new lunr.SortedSet;return e.elements=this.toArray(),e.length=e.elements.length,e},lunr.SortedSet.prototype.union=function(e){var t,n,i;this.length>=e.length?(t=this,n=e):(t=e,n=this),i=t.clone();for(var o=0,r=n.toArray();o<r.length;o++)i.add(r[o]);return i},lunr.SortedSet.prototype.toJSON=function(){return this.toArray()},function(e,t){"function"==typeof define&&define.amd?define(t):"object"==typeof exports?module.exports=t():e.elasticlunr=t()}(this,function(){return t})}();
    /** pdoc search index */const docs = {"version": "0.9.5", "fields": ["qualname", "fullname", "annotation", "default_value", "signature", "bases", "doc"], "ref": "fullname", "documentStore": {"docs": {"monoai": {"fullname": "monoai", "modulename": "monoai", "kind": "module", "doc": "<p><img src=\"https://raw.githubusercontent.com/Profession-AI/MonoAI/refs/heads/main/docs/res/logo.png\" alt=\"alt text\" width=\"500\"/></p>\n\n<h3 id=\"the-complete-framework-to-build-ai-powered-applications\">The complete framework to build AI-powered applications</h3>\n\n<p><strong>MonoAI</strong> is a Python library that enables structured, standardized, and efficient interactions with multiple AI models, harnessing their collective intelligence to deliver richer, more accurate responses.</p>\n\n<hr />\n\n<h2 id=\"quick-start\">\ud83d\ude80 Quick Start</h2>\n\n<h3 id=\"prompts\">Prompts</h3>\n\n<p>In MonoAI, a <strong>prompt</strong> is the request you send to a model.<br />\nYou can define prompts in three different ways:</p>\n\n<hr />\n\n<h4 id=\"1-plain-text\">1. Plain Text</h4>\n\n<p>Directly write the prompt inside the <code>ask</code> method:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">MonoAI.models</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">Model</span>\n\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Model</span><span class=\"p\">()</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">ask</span><span class=\"p\">(</span><span class=\"s2\">&quot;What is 2 + 2?&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<hr />\n\n<h4 id=\"2-prompt-class\">2. <code>Prompt</code> Class</h4>\n\n<p>Use the <code>Prompt</code> class to enhance your prompts with additional parameters such as response types, chaining, and iteration control:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">MonoAI.models</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">Model</span>\n<span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">MonoAI.prompts</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">Prompt</span>\n\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Model</span><span class=\"p\">()</span>\n<span class=\"n\">prompt</span> <span class=\"o\">=</span> <span class=\"n\">Prompt</span><span class=\"p\">(</span><span class=\"s2\">&quot;What is 2 + 2?&quot;</span><span class=\"p\">,</span> <span class=\"n\">response_type</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">)</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">ask</span><span class=\"p\">(</span><span class=\"n\">prompt</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<hr />\n\n<h4 id=\"3-prompt-files\">3. <code>.prompt</code> Files</h4>\n\n<p>Store prompts in external <code>.prompt</code> files to separate your codebase from content logic.</p>\n\n<p><strong>Example - <code>sum.prompt</code>:</strong></p>\n\n<pre><code>What is 2 + 2?\n</code></pre>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">MonoAI.models</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">Model</span>\n<span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">MonoAI.prompts</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">Prompt</span>\n\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Model</span><span class=\"p\">()</span>\n<span class=\"n\">prompt</span> <span class=\"o\">=</span> <span class=\"n\">Prompt</span><span class=\"p\">(</span><span class=\"n\">prompt_id</span><span class=\"o\">=</span><span class=\"s2\">&quot;sum&quot;</span><span class=\"p\">,</span> <span class=\"n\">response_type</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">)</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">ask</span><span class=\"p\">(</span><span class=\"n\">prompt</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>You can also define additional metadata using an XML-like syntax inside <code>.prompt</code> files:</p>\n\n<p><strong>Example with metadata:</strong></p>\n\n<pre><code># sum.prompt\n&lt;prompt response_type=\"int\"&gt;\nWhat is 2 + 2?\n&lt;/prompt&gt;\n</code></pre>\n\n<hr />\n\n<h3 id=\"models\">Models</h3>\n\n<p>MonoAI provides multiple model interfaces to handle different use cases, from basic generation to multi-model aggregation:</p>\n\n<hr />\n\n<h4 id=\"model\"><code>Model</code></h4>\n\n<p>The standard interface for interacting with a single AI model.</p>\n\n<hr />\n\n<h4 id=\"multimodel\"><code>MultiModel</code></h4>\n\n<p>Send a prompt to multiple models asynchronously and retrieve their individual outputs:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">MonoAI.models</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">MultiModel</span>\n\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">MultiModel</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">=</span><span class=\"p\">[</span>\n    <span class=\"p\">{</span><span class=\"s2\">&quot;provider&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;openai&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;model&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;gpt-4o&quot;</span><span class=\"p\">},</span>\n    <span class=\"p\">{</span><span class=\"s2\">&quot;provider&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;deepseek&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;model&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;chat&quot;</span><span class=\"p\">}</span>\n<span class=\"p\">])</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">ask</span><span class=\"p\">(</span><span class=\"s2\">&quot;What is the capital of Italy?&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<hr />\n\n<h4 id=\"collectivemodel\"><code>CollectiveModel</code></h4>\n\n<p>Send a prompt to multiple models and aggregate their outputs using a separate aggregator model for a richer, consolidated answer:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">MonoAI.models</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">CollectiveModel</span>\n\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">CollectiveModel</span><span class=\"p\">(</span>\n    <span class=\"n\">models</span><span class=\"o\">=</span><span class=\"p\">[</span>\n        <span class=\"p\">{</span><span class=\"s2\">&quot;provider&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;openai&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;model&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;gpt-4o&quot;</span><span class=\"p\">},</span>\n        <span class=\"p\">{</span><span class=\"s2\">&quot;provider&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;deepseek&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;model&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;chat&quot;</span><span class=\"p\">}</span>\n    <span class=\"p\">],</span>\n    <span class=\"n\">aggregator</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">&quot;provider&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;openai&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;model&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;gpt-4o&quot;</span><span class=\"p\">}</span>\n<span class=\"p\">)</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">ask</span><span class=\"p\">(</span><span class=\"s2\">&quot;What is the capital of Italy?&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<hr />\n\n<h4 id=\"automodel\"><code>AutoModel</code></h4>\n\n<p>Automatically select the best model for a given prompt based on configuration or inference:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"kn\">from</span><span class=\"w\"> </span><span class=\"nn\">MonoAI.models</span><span class=\"w\"> </span><span class=\"kn\">import</span> <span class=\"n\">AutoModel</span>\n\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">AutoModel</span><span class=\"p\">()</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">ask</span><span class=\"p\">(</span><span class=\"s2\">&quot;What is the capital of Italy?&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<hr />\n\n<h3 id=\"api-key-management\">\ud83d\udd11 API Key Management</h3>\n\n<p>MonoAI simplifies API key management through a <code>providers.keys</code> file in the root directory.<br />\nEach line should follow this format:</p>\n\n<pre><code>PROVIDER_NAME=API_KEY\n</code></pre>\n\n<p><strong>Example <code>providers.keys</code>:</strong></p>\n\n<pre><code>OPENAI=sk-proj-ABCDE12345\nDEEPSEEK=sk-proj-FGHIJ67890\n</code></pre>\n\n<p>MonoAI automatically loads these keys at runtime \u2014 no extra setup needed.</p>\n\n<hr />\n\n<h2 id=\"configuration\">\u2699\ufe0f Configuration</h2>\n\n<p>Configure MonoAI globally via a <code>monoai.yaml</code> file.<br />\nSupported fields:</p>\n\n<table>\n<thead>\n<tr>\n  <th>Field</th>\n  <th>Description</th>\n  <th>Default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n  <td><code>prompts_path</code></td>\n  <td>Directory where <code>.prompt</code> files are stored</td>\n  <td><code>\"\"</code> (current folder)</td>\n</tr>\n<tr>\n  <td><code>keysfile_path</code></td>\n  <td>Path to the API keys file</td>\n  <td><code>\"providers.keys\"</code></td>\n</tr>\n<tr>\n  <td><code>base_model</code></td>\n  <td>Default model to use when no model is specified</td>\n  <td>None</td>\n</tr>\n</tbody>\n</table>\n\n<p><strong>Example <code>monoai.yaml</code>:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"nt\">prompts_path</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">prompts</span>\n<span class=\"nt\">keysfile_path</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">providers.keys</span>\n<span class=\"nt\">base_model</span><span class=\"p\">:</span>\n<span class=\"w\">  </span><span class=\"nt\">provider</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">openai</span>\n<span class=\"w\">  </span><span class=\"nt\">model</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"l l-Scalar l-Scalar-Plain\">gpt-4o-mini</span>\n</code></pre>\n</div>\n\n<hr />\n"}, "monoai.agents": {"fullname": "monoai.agents", "modulename": "monoai.agents", "kind": "module", "doc": "<p></p>\n"}, "monoai.agents.Agent": {"fullname": "monoai.agents.Agent", "modulename": "monoai.agents", "qualname": "Agent", "kind": "class", "doc": "<p>AI Agent that implements different reasoning paradigms.</p>\n\n<p>This class provides a unified interface for creating and using AI agents\nwith different reasoning paradigms. The agent can be configured to use\nfunction calling, ReAct, plan-and-execute, and other agentic approaches,\nor a custom paradigm.</p>\n\n<p>The Agent class acts as a high-level wrapper around specific agentic loop\nimplementations, providing a consistent API regardless of the underlying\nreasoning pattern. It handles paradigm selection, tool registration,\nand streaming configuration.</p>\n\n<p>Supported Paradigms:</p>\n\n<ul>\n<li>Function Calling: Native OpenAI function calling</li>\n<li>ReAct: Reasoning and Acting pattern</li>\n<li>Plan-and-Execute: Planning then execution</li>\n<li>Programmatic: Code generation and execution</li>\n<li>Reflexion: Self-reflective reasoning</li>\n<li>Self-Ask: Self-questioning approach</li>\n<li>Self-Ask with Search: Self-ask with web search capabilities</li>\n</ul>\n"}, "monoai.agents.Agent.__init__": {"fullname": "monoai.agents.Agent.__init__", "modulename": "monoai.agents", "qualname": "Agent.__init__", "kind": "function", "doc": "<p>Initialize the agent with the specified model and configuration.</p>\n\n<p>This constructor sets up an AI agent with the chosen reasoning paradigm,\nregisters any provided tools, and configures execution parameters.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>model</strong> (Model):\nAI model instance to use for agent execution</li>\n<li><strong>tools</strong> (list, optional):\nList of available tools for the agent. Each tool should be a\ncallable function. Default is None.</li>\n<li><p><strong>paradigm</strong> (str or _AgenticLoop, optional):\nReasoning paradigm to use. Can be:</p>\n\n<p><strong>Predefined strings:</strong></p>\n\n<ul>\n<li>\"function_calling\": Uses OpenAI native function calling</li>\n<li>\"react\": Standard ReAct approach</li>\n<li>\"react_with_function_calling\": Combines ReAct and function calling</li>\n<li>\"plan-and-execute\": Plan-and-execute paradigm</li>\n<li>\"programmatic\": Programmatic approach</li>\n<li>\"reflexion\": Reflexion paradigm with self-reflection</li>\n<li>\"self_ask\": Self-ask paradigm</li>\n<li>\"self_ask_with_search\": Self-ask with web search capabilities</li>\n</ul>\n\n<p><strong>Custom object:</strong></p>\n\n<ul>\n<li>An instance of a class derived from _AgenticLoop</li>\n</ul>\n\n<p>Default is \"function_calling\".</p></li>\n<li><strong>agent_prompt</strong> (str, optional):\nCustom prompt for the agent. If None, uses the default prompt\nfor the chosen paradigm. Default is None.</li>\n<li><strong>debug</strong> (bool, optional):\nFlag to enable debug output during execution.\nDefault is False.</li>\n<li><strong>max_iter</strong> (int, optional):\nMaximum number of iterations allowed for the agent.\nIf None, there are no limits. Default is None.</li>\n<li><strong>native_web_search</strong> (str, optional):\nNative web search capability level. Must be one of:\n\"low\", \"medium\", or \"high\". Default is None.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If the specified paradigm is not supported or invalid</li>\n<li><strong>TypeError</strong>: If a custom object is passed that doesn't derive from _AgenticLoop</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">model</span><span class=\"p\">:</span> <span class=\"n\">monoai</span><span class=\"o\">.</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">Model</span>,</span><span class=\"param\">\t<span class=\"n\">tools</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">paradigm</span><span class=\"o\">=</span><span class=\"s1\">&#39;function_calling&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">agent_prompt</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">debug</span><span class=\"o\">=</span><span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">max_iter</span><span class=\"o\">=</span><span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">native_web_search</span><span class=\"o\">=</span><span class=\"kc\">None</span></span>)</span>"}, "monoai.agents.Agent.run": {"fullname": "monoai.agents.Agent.run", "modulename": "monoai.agents", "qualname": "Agent.run", "kind": "function", "doc": "<p>Execute the agent with the specified prompt.</p>\n\n<p>This method processes a user prompt through the agent's reasoning\nparadigm, returning a structured response that includes the reasoning\nprocess and final answer.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>prompt</strong> (str or Prompt):\nUser prompt or query to process. Can be a string or a Prompt object.</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Dict[str, Any]</strong>: Agent response containing:\n<ul>\n<li>prompt: Original user query</li>\n<li>iterations: List of processed reasoning iterations</li>\n<li>response: Final response (if available)</li>\n</ul></li>\n</ul>\n\n<h6 id=\"notes\">Notes</h6>\n\n<p>This method delegates execution to the specific agentic loop\nconfigured during initialization. The exact behavior depends on\nthe chosen paradigm (predefined or custom).</p>\n\n<p>The response structure may vary slightly depending on the paradigm:</p>\n\n<ul>\n<li>Function calling: Includes tool call details</li>\n<li>ReAct: Includes thought-action-observation cycles</li>\n<li>Plan-and-execute: Includes planning and execution phases</li>\n<li>Other paradigms: May include paradigm-specific information</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">prompt</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"n\">monoai</span><span class=\"o\">.</span><span class=\"n\">prompts</span><span class=\"o\">.</span><span class=\"n\">prompt</span><span class=\"o\">.</span><span class=\"n\">Prompt</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "monoai.agents.Agent.enable_streaming": {"fullname": "monoai.agents.Agent.enable_streaming", "modulename": "monoai.agents", "qualname": "Agent.enable_streaming", "kind": "function", "doc": "<p>Enable streaming responses for this agent.</p>\n\n<p>When streaming is enabled, the agent will call the provided callback\nfunction with each content chunk as it's generated, allowing for\nreal-time processing and display of the AI's response.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>stream_callback</strong> (callable, optional):\nCallback function to handle streaming content chunks.\nIf None, uses a default callback that prints content to console.\nThe callback receives plain text content strings.</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>AttributeError</strong>: If the current paradigm doesn't support streaming</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">stream_callback</span><span class=\"o\">=</span><span class=\"kc\">None</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "monoai.agents.Agent.disable_streaming": {"fullname": "monoai.agents.Agent.disable_streaming", "modulename": "monoai.agents", "qualname": "Agent.disable_streaming", "kind": "function", "doc": "<p>Disable streaming responses for this agent.</p>\n\n<p>After calling this method, the agent will use standard (non-streaming)\nmodel execution for all subsequent requests.</p>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>AttributeError</strong>: If the current paradigm doesn't support streaming</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "monoai.chat": {"fullname": "monoai.chat", "modulename": "monoai.chat", "kind": "module", "doc": "<p>Chat module is responsible for handling the chat interface and messages history.</p>\n"}, "monoai.chat.Chat": {"fullname": "monoai.chat.Chat", "modulename": "monoai.chat", "qualname": "Chat", "kind": "class", "doc": "<p>Chat class is responsible for handling the chat interface and messages history.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<p>Basic usage:</p>\n\n<pre><code>chat = Chat(provider=\"openai\", model=\"gpt-4o-mini\")\nresponse = chat.ask(\"2+2\") # 4\nresponse = chat.ask(\"+2\") # 6\n</code></pre>\n\n<p>With history:</p>\n\n<pre><code>\n# Create a new chat with JSON history\nchat = Chat(provider=\"openai\", model=\"gpt-4o-mini\", history=\"json\")\nprint(chat.chat_id) # 8cc2bfa3-e9a0-4b82-b46e-3376cd220dd3\nresponse = chat.ask(\"Hello! I'm Giuseppe\") # Hello!\n\n# Load a chat with JSON history\nchat = Chat(provider=\"openai\", model=\"gpt-4o-mini\", history=\"json\", chat_id=\"8cc2bfa3-e9a0-4b82-b46e-3376cd220dd3\")\nresponse = chat.ask(\"What's my name?\") # Your name is Giuseppe\n\n# Create a new chat with in-memory dictionary history\nchat = Chat(provider=\"openai\", model=\"gpt-4o-mini\", history=\"dict\")\nprint(chat.chat_id) # 8cc2bfa3-e9a0-4b82-b46e-3376cd220dd3\nresponse = chat.ask(\"Hello! I'm Giuseppe\") # Hello!\n</code></pre>\n\n<p>With history summarizer:</p>\n\n<pre><code>chat = Chat(provider=\"openai\", \n            model=\"gpt-4o-mini\", \n            history=\"json\", \n            history_summarizer_provider=\"openai\", \n            history_summarizer_model=\"gpt-4o-mini\", \n            history_summarizer_max_tokens=100)\n\nresponse = chat.ask(\"Hello! I'm Giuseppe\") # Hello!\nresponse = chat.ask(\"What's my name?\") # Your name is Giuseppe\n</code></pre>\n\n<p>With metadata for observability:</p>\n\n<pre><code>chat = Chat(provider=\"openai\", model=\"gpt-4o-mini\")\n\n# Pass metadata for tracking\nresponse = chat.ask(\n    \"Hello! I'm Giuseppe\", \n    metadata={\n        \"user_id\": \"12345\",\n        \"session_id\": \"abc-def-ghi\",\n        \"feature\": \"chat\"\n    }\n)\n\n# Streaming with metadata\nasync for chunk in chat.ask_stream(\n    \"Tell me a story\",\n    metadata={\"user_id\": \"12345\", \"request_type\": \"story_generation\"}\n):\n    print(chunk)\n</code></pre>\n"}, "monoai.chat.Chat.__init__": {"fullname": "monoai.chat.Chat.__init__", "modulename": "monoai.chat", "qualname": "Chat.__init__", "kind": "function", "doc": "<p>Initialize a new Chat instance.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>model</strong> (Model):\nModel instance to use for the chat</li>\n<li><strong>system_prompt</strong> (str | Prompt, optional):\nSystem prompt or Prompt object</li>\n<li><strong>max_tokens</strong> (int, optional):\nMaximum number of tokens for each request</li>\n<li><strong>history</strong> (str | BaseHistory, optional):\nThe type of history to use for the chat. Options: \"json\", \"sqlite\", \"mongodb\", \"dict\"</li>\n<li><strong>history_last_n</strong> (int, optional):\nThe last n messages to keep in the history.</li>\n<li><strong>history_path</strong> (str, optional):\nThe path to the history (not used for \"dict\" history type)</li>\n<li><strong>history_summarizer_provider</strong> (str, optional):\nThe provider of the history summarizer.</li>\n<li><strong>history_summarizer_model</strong> (str, optional):\nThe model of the history summarizer.</li>\n<li><strong>history_summarizer_max_tokens</strong> (int, optional):\nThe maximum number of tokens for the history summarizer.</li>\n<li><strong>chat_id</strong> (str, optional):\nThe id of the chat to load, if not provided a new chat will be created</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ChatError</strong>: If invalid parameters are provided or initialization fails</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">model</span>,</span><span class=\"param\">\t<span class=\"n\">system_prompt</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">monoai</span><span class=\"o\">.</span><span class=\"n\">prompts</span><span class=\"o\">.</span><span class=\"n\">prompt</span><span class=\"o\">.</span><span class=\"n\">Prompt</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;You are an helpful assistant&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">max_tokens</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">history</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">monoai</span><span class=\"o\">.</span><span class=\"n\">chat</span><span class=\"o\">.</span><span class=\"n\">history</span><span class=\"o\">.</span><span class=\"n\">BaseHistory</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;dict&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">history_last_n</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">history_path</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;histories&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">history_summarizer_provider</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">history_summarizer_model</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">history_summarizer_max_tokens</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">chat_id</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "monoai.chat.Chat.ask": {"fullname": "monoai.chat.Chat.ask", "modulename": "monoai.chat", "qualname": "Chat.ask", "kind": "function", "doc": "<p>Ask the model a question.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>prompt</strong> (str):\nThe question to ask the model</li>\n<li><strong>file</strong> (str | bytes, optional):\nThe file to attach to the message, if it's a string it will be treated as a local path or remote url to a file</li>\n<li><strong>file_type</strong> (str, optional):\nThe type of the file</li>\n<li><strong>return_history</strong> (bool, optional):\nWhether to return the full history of the chat or only the response</li>\n<li><strong>metadata</strong> (Dict[str, Any], optional):\nMetadata to pass to the model for observability and tracking</li>\n</ul>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>str | List[Dict[str, Any]]</strong>: The response from the model or the full history if return_history is True</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ChatError</strong>: If the request fails or parameters are invalid</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">prompt</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">file</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">bytes</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">file_type</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">return_history</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>,</span><span class=\"param\">\t<span class=\"n\">metadata</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"p\">{}</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]]</span>:</span></span>", "funcdef": "def"}, "monoai.chat.Chat.ask_stream": {"fullname": "monoai.chat.Chat.ask_stream", "modulename": "monoai.chat", "qualname": "Chat.ask_stream", "kind": "function", "doc": "<p>Ask the model a question and stream the response.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>prompt</strong> (str):\nThe question to ask the model</li>\n<li><strong>file</strong> (str | bytes, optional):\nThe file to attach to the message</li>\n<li><strong>file_type</strong> (str, optional):\nThe type of the file</li>\n<li><strong>metadata</strong> (Dict[str, Any], optional):\nMetadata to pass to the model for observability and tracking</li>\n</ul>\n\n<h6 id=\"yields\">Yields</h6>\n\n<ul>\n<li><strong>str</strong>: JSON string containing streaming response chunks</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ChatError</strong>: If the request fails or parameters are invalid</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">prompt</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">file</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">bytes</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">file_type</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">metadata</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">AsyncGenerator</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "monoai.chat.Chat.ask_async": {"fullname": "monoai.chat.Chat.ask_async", "modulename": "monoai.chat", "qualname": "Chat.ask_async", "kind": "function", "doc": "<p>Ask the model a question and stream the response asynchronously.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>prompt</strong> (str):\nThe question to ask the model</li>\n<li><strong>file</strong> (str | bytes, optional):\nThe file to attach to the message</li>\n<li><strong>file_type</strong> (str, optional):\nThe type of the file</li>\n<li><strong>metadata</strong> (Dict[str, Any], optional):\nMetadata to pass to the model for observability and tracking</li>\n</ul>\n\n<h6 id=\"yields\">Yields</h6>\n\n<ul>\n<li><strong>str</strong>: Response chunks as strings</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ChatError</strong>: If the request fails or parameters are invalid</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">prompt</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">file</span><span class=\"p\">:</span> <span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"nb\">bytes</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">file_type</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">metadata</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">AsyncGenerator</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">NoneType</span><span class=\"p\">]</span>:</span></span>", "funcdef": "async def"}, "monoai.chat.Chat.get_chat_info": {"fullname": "monoai.chat.Chat.get_chat_info", "modulename": "monoai.chat", "qualname": "Chat.get_chat_info", "kind": "function", "doc": "<p>Get information about the current chat.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Dict[str, Any]</strong>: Dictionary containing chat information</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "monoai.chat.Chat.clear_history": {"fullname": "monoai.chat.Chat.clear_history", "modulename": "monoai.chat", "qualname": "Chat.clear_history", "kind": "function", "doc": "<p>Clear the chat history.</p>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ChatError</strong>: If clearing history fails</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "monoai.conf": {"fullname": "monoai.conf", "modulename": "monoai.conf", "kind": "module", "doc": "<p></p>\n"}, "monoai.conf.Conf": {"fullname": "monoai.conf.Conf", "modulename": "monoai.conf", "qualname": "Conf", "kind": "class", "doc": "<p>A singleton class for managing configuration in a programmatic way.\nConfiguration defined here overrides the configuration in ai.yaml file.</p>\n\n<h6 id=\"examples\">Examples</h6>\n\n<pre><code>from monoai.conf import Conf\n\n# override the base model\nConf()[\"base_model\"] = {\n    \"provider\": \"openai\",\n    \"model\": \"gpt-4o-mini\"\n}\n\n# set prompts path programmatically\nConf()[\"prompts_path\"] = \"prompts\"\n</code></pre>\n"}, "monoai.conf.Conf.__init__": {"fullname": "monoai.conf.Conf.__init__", "modulename": "monoai.conf", "qualname": "Conf.__init__", "kind": "function", "doc": "<p>Create or return the singleton instance.</p>\n\n<h6 id=\"returns\">Returns</h6>\n\n<ul>\n<li><strong>Config</strong>: The singleton instance</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">()</span>"}, "monoai.models": {"fullname": "monoai.models", "modulename": "monoai.models", "kind": "module", "doc": "<p>Models are the core of MonoAI. They are responsible for executing prompts and returning responses.</p>\n\n<p>This package uses lazy loading to avoid importing heavy optional dependencies\nat module import time. Classes are imported only when accessed.</p>\n"}, "monoai.models.Model": {"fullname": "monoai.models.Model", "modulename": "monoai.models", "qualname": "Model", "kind": "variable", "doc": "<p></p>\n"}, "monoai.models.HostedModel": {"fullname": "monoai.models.HostedModel", "modulename": "monoai.models", "qualname": "HostedModel", "kind": "variable", "doc": "<p></p>\n"}, "monoai.models.MultiModel": {"fullname": "monoai.models.MultiModel", "modulename": "monoai.models", "qualname": "MultiModel", "kind": "variable", "doc": "<p></p>\n"}, "monoai.models.CollaborativeModel": {"fullname": "monoai.models.CollaborativeModel", "modulename": "monoai.models", "qualname": "CollaborativeModel", "kind": "variable", "doc": "<p></p>\n"}, "monoai.models.ImageModel": {"fullname": "monoai.models.ImageModel", "modulename": "monoai.models", "qualname": "ImageModel", "kind": "variable", "doc": "<p></p>\n"}, "monoai.models.VoiceModel": {"fullname": "monoai.models.VoiceModel", "modulename": "monoai.models", "qualname": "VoiceModel", "kind": "variable", "doc": "<p></p>\n"}, "monoai.observability": {"fullname": "monoai.observability", "modulename": "monoai.observability", "kind": "module", "doc": "<h1 id=\"monoai-observability\">MonoAI Observability</h1>\n\n<p>MonoAI provides built-in support for multiple observability and monitoring services to help you track, debug, and analyze your AI model interactions.</p>\n\n<h2 id=\"supported-services\">Supported Services</h2>\n\n<h3 id=\"langfusehttpswwwlangfusecom\"><a href=\"https://www.langfuse.com/\">Langfuse</a></h3>\n\n<p>Open-source observability and analytics platform for LLM applications.</p>\n\n<p><strong>Dependencies:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>pip<span class=\"w\"> </span>install<span class=\"w\"> </span><span class=\"nv\">langfuse</span><span class=\"o\">==</span><span class=\"m\">2</span>.59.7\n</code></pre>\n</div>\n\n<h3 id=\"logfirehttpslogfireai\"><a href=\"https://logfire.ai/\">Logfire</a></h3>\n\n<p>Pydantic's observability platform for monitoring and debugging applications.</p>\n\n<p><strong>Dependencies:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>pip<span class=\"w\"> </span>install<span class=\"w\"> </span>opentelemetry-api<span class=\"o\">==</span><span class=\"m\">1</span>.25.0<span class=\"w\"> </span>opentelemetry-sdk<span class=\"o\">==</span><span class=\"m\">1</span>.25.0<span class=\"w\"> </span>logfire\n</code></pre>\n</div>\n\n<h3 id=\"deepevalhttpsdeevevalcom\"><a href=\"https://deeveval.com/\">DeepEval</a></h3>\n\n<p>Open-source evaluation framework for LLM applications.</p>\n\n<h3 id=\"langsmithhttpswwwlangchaincomlangsmith\"><a href=\"https://www.langchain.com/langsmith\">LangSmith</a></h3>\n\n<p>LangChain's platform for debugging, testing, and monitoring LLM applications.</p>\n\n<p><strong>Dependencies:</strong></p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code>pip<span class=\"w\"> </span>install<span class=\"w\"> </span><span class=\"nv\">langsmith</span><span class=\"o\">==</span><span class=\"m\">0</span>.1.11\n</code></pre>\n</div>\n\n<p>\u26a0\ufe0f MonoAI is currently based on litellm, so <a href=\"https://docs.litellm.ai/docs/observability/agentops_integration\">other services supported by litellm</a> could be used out-of-the-box.</p>\n\n<h2 id=\"setup\">Setup</h2>\n\n<h3 id=\"1-configure-services\">1. Configure Services</h3>\n\n<p>Add the <code>observability</code> field to your <code>ai.yaml</code> configuration file:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"nt\">observability</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p p-Indicator\">[</span><span class=\"s\">&quot;langfuse&quot;</span><span class=\"p p-Indicator\">,</span><span class=\"w\"> </span><span class=\"s\">&quot;logfire&quot;</span><span class=\"p p-Indicator\">]</span>\n</code></pre>\n</div>\n\n<h3 id=\"2-add-api-keys\">2. Add API Keys</h3>\n\n<p>Create an <code>observability.keys</code> file in your project root and add the required credentials:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"c1\"># observability.keys</span>\n<span class=\"nv\">LANGFUSE_PUBLIC_KEY</span><span class=\"o\">=</span>your_langfuse_public_key\n<span class=\"nv\">LANGFUSE_SECRET_KEY</span><span class=\"o\">=</span>your_langfuse_secret_key\n<span class=\"nv\">LOGFIRE_TOKEN</span><span class=\"o\">=</span>your_logfire_token\n</code></pre>\n</div>\n\n<h3 id=\"with-metadata\">With Metadata</h3>\n\n<p>Pass custom metadata in the <code>metadata</code> parameter to track additional context with services that support it:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"c1\"># Synchronous request with metadata</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">ask</span><span class=\"p\">(</span>\n    <span class=\"s2\">&quot;Hello, how are you?&quot;</span><span class=\"p\">,</span> \n    <span class=\"n\">metadata</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s2\">&quot;user_id&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;12345&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;session_id&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;abc-def-ghi&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;feature&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;chat&quot;</span><span class=\"p\">,</span>\n        <span class=\"s2\">&quot;environment&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;production&quot;</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n</code></pre>\n</div>\n"}, "monoai.prompts": {"fullname": "monoai.prompts", "modulename": "monoai.prompts", "kind": "module", "doc": "<p>This module provides classes for handling different types of prompts in the COICOI framework.\nPrompt can be provided as a string or as a xml-like .prompt file.</p>\n"}, "monoai.prompts.Prompt": {"fullname": "monoai.prompts.Prompt", "modulename": "monoai.prompts", "qualname": "Prompt", "kind": "class", "doc": "<p>A class to handle text prompts with optional response type specification.</p>\n\n<p>The Prompt class can be initialized either with a direct prompt string or by loading\na prompt from a .prompt file. It supports response type specification and\ndata formatting through Python's string formatting.</p>\n\n<h2 id=\"prompt-format\">.prompt format</h2>\n\n<p>Simple prompt</p>\n\n<pre><code>&lt;prompt&gt;\n    Hello, coicoi!\n&lt;/prompt&gt;\n</code></pre>\n\n<p>In this case you could also use plain text without the prompt tag:</p>\n\n<pre><code>Hello, coicoi!\n</code></pre>\n\n<p>Prompt with data formatting</p>\n\n<pre><code>&lt;prompt&gt;\n    Hello, {name}!\n&lt;/prompt&gt;\n</code></pre>\n\n<p>Prompt with response type</p>\n\n<pre><code>&lt;prompt response_type=\"int\"&gt;\n    What is 2+2?\n&lt;/prompt&gt;\n</code></pre>\n\n<h6 id=\"examples\">Examples</h6>\n\n<p>Simple prompt with response type:</p>\n\n<pre><code>prompt = Prompt(prompt=\"What is 2+2?\", response_type=int)\n</code></pre>\n\n<p>Prompt with data formatting:</p>\n\n<pre><code>prompt = Prompt(\n    prompt=\"What is the capital of {country}?\",\n    prompt_data={\"country\": \"France\"},\n    response_type=str\n)\n</code></pre>\n\n<p>Load prompt from file:</p>\n\n<pre><code>prompt = Prompt(prompt_id=\"math_question\")\n</code></pre>\n\n<p>math_question.prompt</p>\n\n<pre><code>&lt;prompt response_type=\"int\"&gt;\n    What is 2+2?\n&lt;/prompt&gt;\n</code></pre>\n"}, "monoai.prompts.Prompt.__init__": {"fullname": "monoai.prompts.Prompt.__init__", "modulename": "monoai.prompts", "qualname": "Prompt.__init__", "kind": "function", "doc": "<p>Initialize a new Prompt instance.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>prompt_id</strong> (str, optional):\nA .prompt file name for loading a prompt from file</li>\n<li><strong>prompt_data</strong> (dict, optional):\nDictionary of values for formatting the prompt</li>\n<li><strong>prompt</strong> (str, optional):\nDirect prompt text if prompt_id is not provided</li>\n<li><strong>response_type</strong> (type | BaseModel, optional):\nExpected type of the response or a Pydantic BaseModel for json schema response</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If neither prompt_id nor prompt is provided</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">prompt_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">prompt_data</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">prompt</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">response_type</span><span class=\"p\">:</span> <span class=\"nb\">type</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "monoai.prompts.Prompt.as_dict": {"fullname": "monoai.prompts.Prompt.as_dict", "modulename": "monoai.prompts", "qualname": "Prompt.as_dict", "kind": "function", "doc": "<p></p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span></span><span class=\"return-annotation\">) -> <span class=\"nb\">dict</span>:</span></span>", "funcdef": "def"}, "monoai.prompts.PromptChain": {"fullname": "monoai.prompts.PromptChain", "modulename": "monoai.prompts", "qualname": "PromptChain", "kind": "class", "doc": "<p>PromptChain class for handling sequences of prompts, the output of one prompt is used as context for the next one.</p>\n\n<h2 id=\"prompt-file-example\">.prompt file example:</h2>\n\n<pre><code>&lt;promptchain&gt;\n    &lt;prompt&gt;\n        What is the capital of {country}?\n    &lt;/prompt&gt;\n    &lt;prompt&gt;\n        What is its population?\n    &lt;/prompt&gt;\n&lt;/promptchain&gt;\n</code></pre>\n\n<h6 id=\"examples\">Examples</h6>\n\n<p>Create a chain from a sequence of prompts:</p>\n\n<pre><code>prompts = [\n    Prompt(prompt=\"What is the capital of France?\"),\n    Prompt(prompt=\"What is its population?\")\n]\nchain = PromptChain(prompts=prompts)\n</code></pre>\n\n<p>Create a chain from a file:</p>\n\n<pre><code>chain = PromptChain(\n    promptchain_id=\"city_analysis\",\n    prompts_data=[{\"country\": \"France\"}]\n)\n</code></pre>\n", "bases": "monoai.prompts.prompt.Prompt"}, "monoai.prompts.PromptChain.__init__": {"fullname": "monoai.prompts.PromptChain.__init__", "modulename": "monoai.prompts", "qualname": "PromptChain.__init__", "kind": "function", "doc": "<p>Initialize a new PromptChain instance.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>promptchain_id</strong> (str, optional):\nA .prompt file name for loading a prompt chain from file</li>\n<li><strong>prompts_data</strong> (list[dict], optional):\nList of dictionaries containing formatting data for each prompt</li>\n<li><strong>prompts</strong> (List[Prompt], optional):\nDirect list of Prompt objects to form the chain if promptchain_id is not provided</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>- ValueError</strong>: If neither promptchain_id nor prompts is provided</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">promptchain_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">prompts_data</span><span class=\"p\">:</span> <span class=\"nb\">list</span><span class=\"p\">[</span><span class=\"nb\">dict</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">prompts</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">monoai</span><span class=\"o\">.</span><span class=\"n\">prompts</span><span class=\"o\">.</span><span class=\"n\">prompt</span><span class=\"o\">.</span><span class=\"n\">Prompt</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">response_type</span><span class=\"p\">:</span> <span class=\"nb\">type</span> <span class=\"o\">|</span> <span class=\"kc\">None</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "monoai.prompts.PromptChain.response_type": {"fullname": "monoai.prompts.PromptChain.response_type", "modulename": "monoai.prompts", "qualname": "PromptChain.response_type", "kind": "variable", "doc": "<p></p>\n"}, "monoai.prompts.IterativePrompt": {"fullname": "monoai.prompts.IterativePrompt", "modulename": "monoai.prompts", "qualname": "IterativePrompt", "kind": "class", "doc": "<p>IterativePrompt class for handling prompts that iterate over a sequence of data, with optional memory\nof previous iterations' responses. This allow for the generation of longer and structured responses.</p>\n\n<h2 id=\"prompt-file-example\">.prompt file example:</h2>\n\n<pre><code>&lt;iterativeprompt&gt;\n    &lt;prompt&gt;\n        Generate the content of a chapter of a book about {topic}\n        The chapters are {chapters}. Generate the chapter {{data}}.\n    &lt;/prompt&gt;\n    &lt;prompt_memory&gt;\n        Be sure that the chapter is coherent with the previous chapters, this is the content of the previous chapters:\n        {{data}}\n    &lt;/prompt_memory&gt;\n&lt;/iterativeprompt&gt;\n</code></pre>\n\n<h6 id=\"examples\">Examples</h6>\n\n<p>Iterative prompt with memory:</p>\n\n<pre><code>data = [\"data types\", \"conditional statements\", \"iterative statements\"]\nprompt = IterativePrompt(\n    prompt=\"Generate the content of a chapter of a book about {topic}. The chapters are {chapters}. Generate the chapter {{data}}.\",\n    iter_data=data,\n    prompt_memory=\"Be sure that the chapter is coherent with the previous chapters, this is the content of the previous chapters: {data}\"\n)\n</code></pre>\n\n<p>Iterative prompt with memory from a .prompt file:</p>\n\n<pre><code>data = [\"data types\", \"conditional statements\", \"iterative statements\"]\nprompt = IterativePrompt(\n    prompt_id=\"book_generation\",\n    prompt_data={\"topic\": \"python programming\", \"chapters\": data},\n    iter_data=data\n)\n</code></pre>\n", "bases": "monoai.prompts.prompt.Prompt"}, "monoai.prompts.IterativePrompt.__init__": {"fullname": "monoai.prompts.IterativePrompt.__init__", "modulename": "monoai.prompts", "qualname": "IterativePrompt.__init__", "kind": "function", "doc": "<p>Initialize a new IterativePrompt instance.</p>\n\n<h6 id=\"parameters\">Parameters</h6>\n\n<ul>\n<li><strong>prompt_id</strong> (str, optional):\n.prompt file name for loading a prompt from file</li>\n<li><strong>prompt</strong> (str, optional):\nDirect prompt text with {{data}} placeholder if prompt_id is not provided</li>\n<li><strong>prompt_data</strong> (dict, optional):\nDictionary of values for formatting the base prompt</li>\n<li><strong>iter_data</strong> (List[str], optional):\nSequence of data items to iterate over</li>\n<li><strong>prompt_memory</strong> (str, optional):\nTemplate for including memory of previous iterations</li>\n<li><strong>retain_all</strong> (bool, optional):\nIf True, all responses are retained in memory, otherwise only the last response is retained</li>\n</ul>\n\n<h6 id=\"raises\">Raises</h6>\n\n<ul>\n<li><strong>ValueError</strong>: If neither prompt_id nor prompt is provided</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">prompt_id</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">prompt</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">prompt_data</span><span class=\"p\">:</span> <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">iter_data</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">prompt_memory</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">retain_all</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span>)</span>"}, "monoai.rag": {"fullname": "monoai.rag", "modulename": "monoai.rag", "kind": "module", "doc": "<p>RAG is a module that provides a high-level interface for performing semantic search queries\nagainst a vector database. It supports multiple vector database backends and\nembedding providers for flexible deployment scenarios.</p>\n"}, "monoai.rag.RAG": {"fullname": "monoai.rag.RAG", "modulename": "monoai.rag", "qualname": "RAG", "kind": "class", "doc": "<p>Retrieval-Augmented Generation (RAG) system for semantic search and document retrieval.</p>\n\n<p>This class provides a high-level interface for performing semantic search queries\nagainst a vector database. It supports multiple vector database backends and\nembedding providers for flexible deployment scenarios.</p>\n\n<p>The RAG system works by:</p>\n\n<ol>\n<li>Converting text queries into vector embeddings</li>\n<li>Searching the vector database for similar document embeddings</li>\n<li>Returning the most relevant documents based on semantic similarity</li>\n</ol>\n\n<p>Attributes:\n    _vectorizer (str): The embedding model used for vectorization\n    _db (str): Name of the vector database\n    _vector_db (ChromaVectorDB): The vector database backend</p>\n\n<h2 id=\"examples\">Examples:</h2>\n\n<p>Basic usage with default settings:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"c1\"># Initialize RAG with a database name</span>\n<span class=\"n\">rag</span> <span class=\"o\">=</span> <span class=\"n\">RAG</span><span class=\"p\">(</span><span class=\"n\">database</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_documents&quot;</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Perform a semantic search</span>\n<span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"n\">rag</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">(</span><span class=\"s2\">&quot;What is machine learning?&quot;</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>Using with specific embedding provider:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"c1\"># Initialize with OpenAI embeddings</span>\n<span class=\"n\">rag</span> <span class=\"o\">=</span> <span class=\"n\">RAG</span><span class=\"p\">(</span>\n    <span class=\"n\">database</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_documents&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">provider</span><span class=\"o\">=</span><span class=\"s2\">&quot;openai&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">vectorizer</span><span class=\"o\">=</span><span class=\"s2\">&quot;text-embedding-ada-002&quot;</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># Search for relevant documents</span>\n<span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"n\">rag</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">(</span><span class=\"s2\">&quot;Explain neural networks&quot;</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>Working with different vector databases:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"c1\"># Currently supports ChromaDB</span>\n<span class=\"n\">rag</span> <span class=\"o\">=</span> <span class=\"n\">RAG</span><span class=\"p\">(</span>\n    <span class=\"n\">database</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_collection&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">vector_db</span><span class=\"o\">=</span><span class=\"s2\">&quot;chroma&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">provider</span><span class=\"o\">=</span><span class=\"s2\">&quot;openai&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">vectorizer</span><span class=\"o\">=</span><span class=\"s2\">&quot;text-embedding-ada-002&quot;</span>\n<span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>Add RAG to a model, so that the model can use the RAG automatically to answer questions:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Model</span><span class=\"p\">(</span><span class=\"n\">provider</span><span class=\"o\">=</span><span class=\"s2\">&quot;openai&quot;</span><span class=\"p\">,</span> <span class=\"n\">model</span><span class=\"o\">=</span><span class=\"s2\">&quot;gpt-4o-mini&quot;</span><span class=\"p\">)</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">_add_rag</span><span class=\"p\">(</span><span class=\"n\">RAG</span><span class=\"p\">(</span><span class=\"n\">database</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_documents&quot;</span><span class=\"p\">,</span> <span class=\"n\">vector_db</span><span class=\"o\">=</span><span class=\"s2\">&quot;chroma&quot;</span><span class=\"p\">))</span>\n</code></pre>\n</div>\n"}, "monoai.rag.RAG.__init__": {"fullname": "monoai.rag.RAG.__init__", "modulename": "monoai.rag", "qualname": "RAG.__init__", "kind": "function", "doc": "<p>Initialize the RAG system.</p>\n\n<h2 id=\"parameters\">Parameters:</h2>\n\n<p>database : str\n    Name of the vector database/collection to use for storage and retrieval.\n    This will be created if it doesn't exist.</p>\n\n<p>provider : str, optional\n    The embedding provider to use (e.g., \"openai\", \"anthropic\", \"cohere\").\n    If provided, the corresponding API key will be loaded automatically.\n    If None, the system will use default embedding settings.</p>\n\n<p>vectorizer : str, optional\n    The specific embedding model to use for vectorization.\n    Examples: \"text-embedding-ada-002\", \"text-embedding-3-small\", \"embed-english-v3.0\"\n    If None, the provider's default model will be used.</p>\n\n<p>vector_db : str, default=\"chroma\"\n    The vector database backend to use. Currently supports:\n    - \"chroma\": ChromaDB (default, recommended for most use cases)</p>\n\n<h2 id=\"raises\">Raises:</h2>\n\n<p>ValueError\n    If an unsupported vector database is specified.</p>\n\n<h2 id=\"examples\">Examples:</h2>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"c1\"># Minimal initialization</span>\n<span class=\"n\">rag</span> <span class=\"o\">=</span> <span class=\"n\">RAG</span><span class=\"p\">(</span><span class=\"s2\">&quot;my_documents&quot;</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># With OpenAI embeddings</span>\n<span class=\"n\">rag</span> <span class=\"o\">=</span> <span class=\"n\">RAG</span><span class=\"p\">(</span>\n    <span class=\"n\">database</span><span class=\"o\">=</span><span class=\"s2\">&quot;research_papers&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">provider</span><span class=\"o\">=</span><span class=\"s2\">&quot;openai&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">vectorizer</span><span class=\"o\">=</span><span class=\"s2\">&quot;text-embedding-ada-002&quot;</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># With Anthropic embeddings</span>\n<span class=\"n\">rag</span> <span class=\"o\">=</span> <span class=\"n\">RAG</span><span class=\"p\">(</span>\n    <span class=\"n\">database</span><span class=\"o\">=</span><span class=\"s2\">&quot;articles&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">provider</span><span class=\"o\">=</span><span class=\"s2\">&quot;anthropic&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">vectorizer</span><span class=\"o\">=</span><span class=\"s2\">&quot;text-embedding-3-small&quot;</span>\n<span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">database</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">provider</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">vectorizer</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">vector_db</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;chroma&#39;</span></span>)</span>"}, "monoai.rag.RAG.query": {"fullname": "monoai.rag.RAG.query", "modulename": "monoai.rag", "qualname": "RAG.query", "kind": "function", "doc": "<p>Perform a semantic search query against the vector database.</p>\n\n<p>This method converts the input query into a vector embedding and searches\nthe database for the most semantically similar documents.</p>\n\n<h2 id=\"parameters\">Parameters:</h2>\n\n<p>query : str\n    The text query to search for. This will be converted to a vector\n    embedding and used to find similar documents.</p>\n\n<p>k : int, default=10\n    The number of most relevant documents to return. Higher values\n    return more results but may include less relevant documents.</p>\n\n<h2 id=\"returns\">Returns:</h2>\n\n<p>Dict[str, Any]\n    A dictionary containing the search results with the following structure:\n    {\n        'ids': List[List[str]] - Document IDs of the retrieved documents,\n        'documents': List[List[str]] - The actual document content,\n        'metadatas': List[List[Dict]] - Metadata for each document,\n        'distances': List[List[float]] - Similarity scores (lower = more similar)\n    }</p>\n\n<h2 id=\"examples\">Examples:</h2>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"c1\"># Basic query</span>\n<span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"n\">rag</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">(</span><span class=\"s2\">&quot;What is artificial intelligence?&quot;</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Query with more results</span>\n<span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"n\">rag</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">(</span><span class=\"s2\">&quot;Machine learning algorithms&quot;</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Accessing results</span>\n<span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">doc_id</span><span class=\"p\">,</span> <span class=\"n\">document</span><span class=\"p\">,</span> <span class=\"n\">metadata</span><span class=\"p\">,</span> <span class=\"n\">distance</span><span class=\"p\">)</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"nb\">zip</span><span class=\"p\">(</span>\n    <span class=\"n\">results</span><span class=\"p\">[</span><span class=\"s1\">&#39;ids&#39;</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">],</span> \n    <span class=\"n\">results</span><span class=\"p\">[</span><span class=\"s1\">&#39;documents&#39;</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">],</span> \n    <span class=\"n\">results</span><span class=\"p\">[</span><span class=\"s1\">&#39;metadatas&#39;</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">],</span> \n    <span class=\"n\">results</span><span class=\"p\">[</span><span class=\"s1\">&#39;distances&#39;</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"p\">)):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Result </span><span class=\"si\">{</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"si\">}</span><span class=\"s2\">:&quot;</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;  ID: </span><span class=\"si\">{</span><span class=\"n\">doc_id</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;  Content: </span><span class=\"si\">{</span><span class=\"n\">document</span><span class=\"p\">[:</span><span class=\"mi\">100</span><span class=\"p\">]</span><span class=\"si\">}</span><span class=\"s2\">...&quot;</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;  Similarity: </span><span class=\"si\">{</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">distance</span><span class=\"si\">:</span><span class=\"s2\">.3f</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;  Metadata: </span><span class=\"si\">{</span><span class=\"n\">metadata</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">()</span>\n</code></pre>\n</div>\n\n<h2 id=\"notes\">Notes:</h2>\n\n<ul>\n<li>The query is automatically converted to lowercase and processed</li>\n<li>Results are returned in order of relevance (most similar first)</li>\n<li>Distance scores are cosine distances (0 = identical, 2 = completely opposite)</li>\n<li>If fewer than k documents exist in the database, all available documents are returned</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">query</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">k</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "monoai.rag.ChromaVectorDB": {"fullname": "monoai.rag.ChromaVectorDB", "modulename": "monoai.rag", "qualname": "ChromaVectorDB", "kind": "class", "doc": "<p>ChromaDB implementation of the vector database interface.</p>\n\n<p>This class provides a concrete implementation of the vector database\nusing ChromaDB as the backend. ChromaDB is an open-source embedding\ndatabase that supports persistent storage and efficient similarity search.</p>\n\n<p>Features:</p>\n\n<ul>\n<li>Persistent storage of document embeddings</li>\n<li>Efficient similarity search with configurable result count</li>\n<li>Metadata storage for each document</li>\n<li>Automatic collection creation if it doesn't exist</li>\n<li>Support for custom embedding models via LiteLLM</li>\n</ul>\n\n<p>Attributes:\n    _client (chromadb.PersistentClient): ChromaDB client instance\n    _collection (chromadb.Collection): Active collection for operations</p>\n\n<h2 id=\"examples\">Examples:</h2>\n\n<p>Basic usage:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"c1\"># Initialize with a new collection</span>\n<span class=\"n\">vector_db</span> <span class=\"o\">=</span> <span class=\"n\">ChromaVectorDB</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;my_documents&quot;</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Add documents</span>\n<span class=\"n\">documents</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;Document 1 content&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;Document 2 content&quot;</span><span class=\"p\">]</span>\n<span class=\"n\">metadatas</span> <span class=\"o\">=</span> <span class=\"p\">[{</span><span class=\"s2\">&quot;source&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;file1.txt&quot;</span><span class=\"p\">},</span> <span class=\"p\">{</span><span class=\"s2\">&quot;source&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;file2.txt&quot;</span><span class=\"p\">}]</span>\n<span class=\"n\">ids</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;doc1&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;doc2&quot;</span><span class=\"p\">]</span>\n\n<span class=\"n\">vector_db</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">documents</span><span class=\"p\">,</span> <span class=\"n\">metadatas</span><span class=\"p\">,</span> <span class=\"n\">ids</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Search for similar documents</span>\n<span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"n\">vector_db</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">(</span><span class=\"s2\">&quot;search query&quot;</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<p>Using with specific embedding model:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"c1\"># Initialize with OpenAI embeddings</span>\n<span class=\"n\">vector_db</span> <span class=\"o\">=</span> <span class=\"n\">ChromaVectorDB</span><span class=\"p\">(</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;research_papers&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">vectorizer_provider</span><span class=\"o\">=</span><span class=\"s2\">&quot;openai&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">vectorizer_model</span><span class=\"o\">=</span><span class=\"s2\">&quot;text-embedding-ada-002&quot;</span>\n<span class=\"p\">)</span>\n</code></pre>\n</div>\n", "bases": "monoai.rag.vectordb._BaseVectorDB"}, "monoai.rag.ChromaVectorDB.__init__": {"fullname": "monoai.rag.ChromaVectorDB.__init__", "modulename": "monoai.rag", "qualname": "ChromaVectorDB.__init__", "kind": "function", "doc": "<p>Initialize the ChromaDB vector database.</p>\n\n<h2 id=\"parameters\">Parameters:</h2>\n\n<p>name : str, optional\n    Name of the ChromaDB collection. If provided, the collection\n    will be created if it doesn't exist, or connected to if it does.</p>\n\n<p>vectorizer_provider : str, optional\n    The embedding provider to use for vectorization.\n    Examples: \"openai\", \"anthropic\", \"cohere\"</p>\n\n<p>vectorizer_model : str, optional\n    The specific embedding model to use.\n    Examples: \"text-embedding-ada-002\", \"text-embedding-3-small\"</p>\n\n<h2 id=\"examples\">Examples:</h2>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"c1\"># Create new collection</span>\n<span class=\"n\">vector_db</span> <span class=\"o\">=</span> <span class=\"n\">ChromaVectorDB</span><span class=\"p\">(</span><span class=\"s2\">&quot;my_documents&quot;</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Connect to existing collection with custom embeddings</span>\n<span class=\"n\">vector_db</span> <span class=\"o\">=</span> <span class=\"n\">ChromaVectorDB</span><span class=\"p\">(</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">&quot;existing_collection&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">vectorizer_provider</span><span class=\"o\">=</span><span class=\"s2\">&quot;openai&quot;</span><span class=\"p\">,</span>\n    <span class=\"n\">vectorizer_model</span><span class=\"o\">=</span><span class=\"s2\">&quot;text-embedding-ada-002&quot;</span>\n<span class=\"p\">)</span>\n</code></pre>\n</div>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">vectorizer_provider</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span>,</span><span class=\"param\">\t<span class=\"n\">vectorizer_model</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "monoai.rag.ChromaVectorDB.add": {"fullname": "monoai.rag.ChromaVectorDB.add", "modulename": "monoai.rag", "qualname": "ChromaVectorDB.add", "kind": "function", "doc": "<p>Add documents to the ChromaDB collection.</p>\n\n<p>This method adds documents along with their metadata and IDs to the\nChromaDB collection. The documents are automatically converted to\nembeddings using the configured embedding model.</p>\n\n<h2 id=\"parameters\">Parameters:</h2>\n\n<p>documents : List[str]\n    List of text documents to add to the database.\n    Each document will be converted to a vector embedding.</p>\n\n<p>metadatas : List[Dict]\n    List of metadata dictionaries for each document.\n    Each metadata dict can contain any key-value pairs for\n    document categorization and filtering.</p>\n\n<p>ids : List[str]\n    List of unique identifiers for each document.\n    IDs must be unique within the collection.</p>\n\n<h2 id=\"raises\">Raises:</h2>\n\n<p>ValueError\n    If the lengths of documents, metadatas, and ids don't match.</p>\n\n<h2 id=\"examples\">Examples:</h2>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"c1\"># Add documents with metadata</span>\n<span class=\"n\">documents</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"s2\">&quot;Machine learning is a subset of artificial intelligence.&quot;</span><span class=\"p\">,</span>\n    <span class=\"s2\">&quot;Deep learning uses neural networks with multiple layers.&quot;</span>\n<span class=\"p\">]</span>\n\n<span class=\"n\">metadatas</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span><span class=\"s2\">&quot;topic&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;machine_learning&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;source&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;textbook&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;year&quot;</span><span class=\"p\">:</span> <span class=\"mi\">2023</span><span class=\"p\">},</span>\n    <span class=\"p\">{</span><span class=\"s2\">&quot;topic&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;deep_learning&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;source&quot;</span><span class=\"p\">:</span> <span class=\"s2\">&quot;research_paper&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;year&quot;</span><span class=\"p\">:</span> <span class=\"mi\">2023</span><span class=\"p\">}</span>\n<span class=\"p\">]</span>\n\n<span class=\"n\">ids</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">&quot;doc_001&quot;</span><span class=\"p\">,</span> <span class=\"s2\">&quot;doc_002&quot;</span><span class=\"p\">]</span>\n\n<span class=\"n\">vector_db</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">documents</span><span class=\"p\">,</span> <span class=\"n\">metadatas</span><span class=\"p\">,</span> <span class=\"n\">ids</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<h2 id=\"notes\">Notes:</h2>\n\n<ul>\n<li>All three lists must have the same length</li>\n<li>IDs must be unique within the collection</li>\n<li>Documents are automatically embedded using the configured model</li>\n<li>Metadata can be used for filtering during queries</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">documents</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">metadatas</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">]</span>,</span><span class=\"param\">\t<span class=\"n\">ids</span><span class=\"p\">:</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]</span></span><span class=\"return-annotation\">) -> <span class=\"kc\">None</span>:</span></span>", "funcdef": "def"}, "monoai.rag.ChromaVectorDB.query": {"fullname": "monoai.rag.ChromaVectorDB.query", "modulename": "monoai.rag", "qualname": "ChromaVectorDB.query", "kind": "function", "doc": "<p>Search for similar documents in the ChromaDB collection.</p>\n\n<p>This method performs semantic search by converting the query to an\nembedding and finding the most similar document embeddings in the\ncollection.</p>\n\n<h2 id=\"parameters\">Parameters:</h2>\n\n<p>query : str\n    The text query to search for. This will be converted to a\n    vector embedding and compared against stored documents.</p>\n\n<p>k : int, default=10\n    Number of most similar documents to return. Higher values\n    return more results but may include less relevant documents.</p>\n\n<h2 id=\"returns\">Returns:</h2>\n\n<p>Dict[str, Any]\n    A dictionary containing search results with the following structure:\n    {\n        'ids': List[List[str]] - Document IDs of retrieved documents,\n        'documents': List[List[str]] - The actual document content,\n        'metadatas': List[List[Dict]] - Metadata for each document,\n        'distances': List[List[float]] - Similarity scores (lower = more similar)\n    }</p>\n\n<h2 id=\"examples\">Examples:</h2>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"c1\"># Basic search</span>\n<span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"n\">vector_db</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">(</span><span class=\"s2\">&quot;What is machine learning?&quot;</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Access results</span>\n<span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">doc_id</span><span class=\"p\">,</span> <span class=\"n\">document</span><span class=\"p\">,</span> <span class=\"n\">metadata</span><span class=\"p\">,</span> <span class=\"n\">distance</span><span class=\"p\">)</span> <span class=\"ow\">in</span> <span class=\"nb\">enumerate</span><span class=\"p\">(</span><span class=\"nb\">zip</span><span class=\"p\">(</span>\n    <span class=\"n\">results</span><span class=\"p\">[</span><span class=\"s1\">&#39;ids&#39;</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">],</span> \n    <span class=\"n\">results</span><span class=\"p\">[</span><span class=\"s1\">&#39;documents&#39;</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">],</span> \n    <span class=\"n\">results</span><span class=\"p\">[</span><span class=\"s1\">&#39;metadatas&#39;</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">],</span> \n    <span class=\"n\">results</span><span class=\"p\">[</span><span class=\"s1\">&#39;distances&#39;</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"p\">)):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;Result </span><span class=\"si\">{</span><span class=\"n\">i</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"si\">}</span><span class=\"s2\">:&quot;</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;  ID: </span><span class=\"si\">{</span><span class=\"n\">doc_id</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;  Content: </span><span class=\"si\">{</span><span class=\"n\">document</span><span class=\"p\">[:</span><span class=\"mi\">100</span><span class=\"p\">]</span><span class=\"si\">}</span><span class=\"s2\">...&quot;</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;  Similarity: </span><span class=\"si\">{</span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"o\">-</span><span class=\"w\"> </span><span class=\"n\">distance</span><span class=\"si\">:</span><span class=\"s2\">.3f</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">&quot;  Metadata: </span><span class=\"si\">{</span><span class=\"n\">metadata</span><span class=\"si\">}</span><span class=\"s2\">&quot;</span><span class=\"p\">)</span>\n</code></pre>\n</div>\n\n<h2 id=\"notes\">Notes:</h2>\n\n<ul>\n<li>Results are returned in order of similarity (most similar first)</li>\n<li>Distance scores are cosine distances (0 = identical, 2 = opposite)</li>\n<li>If fewer than k documents exist, all available documents are returned</li>\n<li>The query is automatically embedded using the same model as stored documents</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">query</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">k</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Dict</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">Any</span><span class=\"p\">]</span>:</span></span>", "funcdef": "def"}, "monoai.rag.DocumentsBuilder": {"fullname": "monoai.rag.DocumentsBuilder", "modulename": "monoai.rag", "qualname": "DocumentsBuilder", "kind": "class", "doc": "<p>A utility class for building document collections from various sources.</p>\n\n<p>This class provides methods to extract text content from files and web pages,\nsplit the content into manageable chunks with configurable size and overlap,\nand prepare the data for storage in vector databases.</p>\n\n<p>The DocumentsBuilder is designed to work seamlessly with the RAG system,\nproducing output that can be directly used with vector database operations.</p>\n\n<p>Features:</p>\n\n<ul>\n<li>File-based document extraction with UTF-8 encoding support</li>\n<li>Text string processing for in-memory content</li>\n<li>Web scraping with multiple engine options (requests, tavily, selenium)</li>\n<li>Word document extraction (.doc and .docx formats)</li>\n<li>PDF document extraction with metadata</li>\n<li>Multiple chunking strategies (word, sentence, paragraph, fixed, semantic)</li>\n<li>Configurable chunk size and overlap parameters</li>\n<li>Rich metadata generation for each document chunk</li>\n<li>Unique ID generation for database storage</li>\n</ul>\n\n<p>Attributes:\n    _chunk_strategy (str): The chunking strategy to use\n    _chunk_size (int): Maximum size of each text chunk in characters\n    _chunk_overlap (int): Number of characters to overlap between chunks</p>\n"}, "monoai.rag.DocumentsBuilder.__init__": {"fullname": "monoai.rag.DocumentsBuilder.__init__", "modulename": "monoai.rag", "qualname": "DocumentsBuilder.__init__", "kind": "function", "doc": "<p>Initialize the DocumentsBuilder with chunking parameters.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"n\">chunk_strategy</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;word&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">chunk_size</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">1000</span>,</span><span class=\"param\">\t<span class=\"n\">chunk_overlap</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>,</span><span class=\"param\">\t<span class=\"n\">custom_split_func</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">built</span><span class=\"o\">-</span><span class=\"ow\">in</span> <span class=\"n\">function</span> <span class=\"nb\">callable</span><span class=\"o\">&gt;</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span>)</span>"}, "monoai.rag.DocumentsBuilder.from_file": {"fullname": "monoai.rag.DocumentsBuilder.from_file", "modulename": "monoai.rag", "qualname": "DocumentsBuilder.from_file", "kind": "function", "doc": "<p>Read a file and split it into chunks with specified size and overlap.</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"bp\">self</span>, </span><span class=\"param\"><span class=\"n\">file_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">],</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "monoai.rag.DocumentsBuilder.from_str": {"fullname": "monoai.rag.DocumentsBuilder.from_str", "modulename": "monoai.rag", "qualname": "DocumentsBuilder.from_str", "kind": "function", "doc": "<p>Process a text string and split it into chunks with specified size and overlap.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">text</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">source_name</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;text_string&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">],</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "monoai.rag.DocumentsBuilder.from_doc": {"fullname": "monoai.rag.DocumentsBuilder.from_doc", "modulename": "monoai.rag", "qualname": "DocumentsBuilder.from_doc", "kind": "function", "doc": "<p>Extract text from Word documents (.doc and .docx files) and split into chunks.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">file_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">extraction_method</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;auto&#39;</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">],</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "monoai.rag.DocumentsBuilder.from_pdf": {"fullname": "monoai.rag.DocumentsBuilder.from_pdf", "modulename": "monoai.rag", "qualname": "DocumentsBuilder.from_pdf", "kind": "function", "doc": "<p>Extract text from PDF documents and split into chunks.</p>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">file_path</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">page_range</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">]]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">],</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "monoai.rag.DocumentsBuilder.from_url": {"fullname": "monoai.rag.DocumentsBuilder.from_url", "modulename": "monoai.rag", "qualname": "DocumentsBuilder.from_url", "kind": "function", "doc": "<p>Scrape content from a URL and split it into chunks with specified size and overlap.</p>\n\n<p>Notes:</p>\n\n<ul>\n<li>Scraping may take time depending on the engine and website complexity</li>\n<li>Some websites may block automated scraping</li>\n<li>Selenium requires Chrome/Chromium to be installed</li>\n<li>Tavily requires an API key to be configured</li>\n</ul>\n", "signature": "<span class=\"signature pdoc-code multiline\">(<span class=\"param\">\t<span class=\"bp\">self</span>,</span><span class=\"param\">\t<span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"nb\">str</span>,</span><span class=\"param\">\t<span class=\"n\">engine</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;requests&#39;</span>,</span><span class=\"param\">\t<span class=\"n\">deep</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">) -> <span class=\"n\">Tuple</span><span class=\"p\">[</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">],</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]]</span>:</span></span>", "funcdef": "def"}, "monoai.tools": {"fullname": "monoai.tools", "modulename": "monoai.tools", "kind": "module", "doc": "<p>Tools are used to extend the capabilities of an agent.</p>\n\n<p>In MonoAI tools are simple functions that return a string, you can easily create your own tools by defining a function and registering it with the agent.\nTo let the agent know how to use the tool, you need to add a docstring to the function in google format.</p>\n\n<p>For example:</p>\n\n<div class=\"pdoc-code codehilite\">\n<pre><span></span><code><span class=\"k\">def</span><span class=\"w\"> </span><span class=\"nf\">get_weather</span><span class=\"p\">(</span><span class=\"n\">location</span><span class=\"p\">:</span><span class=\"nb\">str</span><span class=\"p\">):</span>\n<span class=\"w\">    </span><span class=\"sd\">&quot;&quot;&quot;</span>\n<span class=\"sd\">    Get the weather for a given location:</span>\n<span class=\"sd\">    Args:</span>\n<span class=\"sd\">        location: The location to get the weather for</span>\n<span class=\"sd\">    Returns:</span>\n<span class=\"sd\">        The weather for the given location</span>\n<span class=\"sd\">    &quot;&quot;&quot;</span>\n\n    <span class=\"k\">return</span> <span class=\"sa\">f</span><span class=\"s2\">&quot;The weather for </span><span class=\"si\">{</span><span class=\"n\">location</span><span class=\"si\">}</span><span class=\"s2\"> is sunny&quot;</span>\n</code></pre>\n</div>\n"}, "monoai.tools.domain_whois": {"fullname": "monoai.tools.domain_whois", "modulename": "monoai.tools.domain_whois", "kind": "module", "doc": "<p></p>\n"}, "monoai.tools.search_web_with_duckduckgo": {"fullname": "monoai.tools.search_web_with_duckduckgo", "modulename": "monoai.tools", "qualname": "search_web_with_duckduckgo", "kind": "variable", "doc": "<p></p>\n"}, "monoai.tools.search_web_with_tavily": {"fullname": "monoai.tools.search_web_with_tavily", "modulename": "monoai.tools", "qualname": "search_web_with_tavily", "kind": "variable", "doc": "<p></p>\n"}, "monoai.tools.scrape_web_with_requests": {"fullname": "monoai.tools.scrape_web_with_requests", "modulename": "monoai.tools", "qualname": "scrape_web_with_requests", "kind": "function", "doc": "<p>Scrape a webpage using the requests library.</p>\n\n<p>This function uses the requests library for basic web scraping.\nIt's fast and lightweight but doesn't handle JavaScript-rendered content.</p>\n\n<p>Args:\n    url: The URL to scrape</p>\n\n<p>Returns:\n    A dictionary containing:\n        html: The HTML content of the page\n        text: The extracted text content from the page</p>\n\n<p>Raises:\n    requests.RequestException: If the request fails</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "monoai.tools.scrape_web_with_selenium": {"fullname": "monoai.tools.scrape_web_with_selenium", "modulename": "monoai.tools", "qualname": "scrape_web_with_selenium", "kind": "function", "doc": "<p>Scrape a webpage using Selenium WebDriver.</p>\n\n<p>This function uses Selenium to handle dynamic content and JavaScript.\nIt's useful for websites that require JavaScript execution to load content.</p>\n\n<p>Args:\n    url: The URL to scrape\n    headless: Whether to run Chrome in headless mode. Default is True\n    wait_time: Maximum time to wait for elements to load in seconds. Default is 10</p>\n\n<p>Returns:\n    A dictionary containing:\n        html: The HTML content of the page after JavaScript execution\n        text: The extracted text content from the page</p>\n\n<p>Raises:\n    Exception: If scraping fails</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">headless</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>, </span><span class=\"param\"><span class=\"n\">wait_time</span><span class=\"p\">:</span> <span class=\"nb\">int</span> <span class=\"o\">=</span> <span class=\"mi\">10</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "monoai.tools.scrape_web_with_tavily": {"fullname": "monoai.tools.scrape_web_with_tavily", "modulename": "monoai.tools", "qualname": "scrape_web_with_tavily", "kind": "function", "doc": "<p>Scrape a webpage using the Tavily API.</p>\n\n<p>This function uses the Tavily API for advanced content extraction.\nTavily provides clean, structured content extraction but doesn't return raw HTML.</p>\n\n<p>Args:\n    url: The URL to scrape\n    deep: Whether to use advanced extraction mode. Default is False</p>\n\n<p>Returns:\n    A dictionary containing:\n        html: None (not available with Tavily)\n        text: The extracted and cleaned content from the page</p>\n\n<p>Raises:\n    Exception: If the Tavily API call fails</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">deep</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "monoai.tools.scrape_web": {"fullname": "monoai.tools.scrape_web", "modulename": "monoai.tools", "qualname": "scrape_web", "kind": "function", "doc": "<p>Scrape a webpage using the specified engine.</p>\n\n<p>This is a convenience function that dispatches to the appropriate\nscraping function based on the engine parameter.</p>\n\n<p>Args:\n    url: The URL to scrape\n    engine: The engine to use (requests, tavily, selenium). Default is requests\n    deep: If using tavily, whether to use the advanced extraction mode. Default is False</p>\n\n<p>Returns:\n    A dictionary containing:\n        html: The HTML content of the page (not available if using tavily)\n        text: The content of the page merged into a single string</p>\n\n<p>Raises:\n    ValueError: If an invalid engine is specified</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">url</span><span class=\"p\">:</span> <span class=\"nb\">str</span>, </span><span class=\"param\"><span class=\"n\">engine</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s1\">&#39;requests&#39;</span>, </span><span class=\"param\"><span class=\"n\">deep</span><span class=\"p\">:</span> <span class=\"nb\">bool</span> <span class=\"o\">=</span> <span class=\"kc\">False</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}, "monoai.tools.domain_whois.domain_whois": {"fullname": "monoai.tools.domain_whois.domain_whois", "modulename": "monoai.tools.domain_whois", "qualname": "domain_whois", "kind": "function", "doc": "<p>Get the whois for a given domain:</p>\n\n<p>Args:\n    domain (string): the domain</p>\n", "signature": "<span class=\"signature pdoc-code condensed\">(<span class=\"param\"><span class=\"n\">domain</span><span class=\"p\">:</span> <span class=\"nb\">str</span></span><span class=\"return-annotation\">):</span></span>", "funcdef": "def"}}, "docInfo": {"monoai": {"qualname": 0, "fullname": 1, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 1394}, "monoai.agents": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "monoai.agents.Agent": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 149}, "monoai.agents.Agent.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 105, "bases": 0, "doc": 360}, "monoai.agents.Agent.run": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 42, "bases": 0, "doc": 190}, "monoai.agents.Agent.enable_streaming": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 22, "bases": 0, "doc": 106}, "monoai.agents.Agent.disable_streaming": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 11, "bases": 0, "doc": 49}, "monoai.chat": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 15}, "monoai.chat.Chat": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 302}, "monoai.chat.Chat.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 303, "bases": 0, "doc": 227}, "monoai.chat.Chat.ask": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 166, "bases": 0, "doc": 168}, "monoai.chat.Chat.ask_stream": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 133, "bases": 0, "doc": 120}, "monoai.chat.Chat.ask_async": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 133, "bases": 0, "doc": 119}, "monoai.chat.Chat.get_chat_info": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 26, "bases": 0, "doc": 26}, "monoai.chat.Chat.clear_history": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 23}, "monoai.conf": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "monoai.conf.Conf": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 67}, "monoai.conf.Conf.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 4, "bases": 0, "doc": 24}, "monoai.models": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 42}, "monoai.models.Model": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "monoai.models.HostedModel": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "monoai.models.MultiModel": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "monoai.models.CollaborativeModel": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "monoai.models.ImageModel": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "monoai.models.VoiceModel": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "monoai.observability": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 535}, "monoai.prompts": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 31}, "monoai.prompts.Prompt": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 234}, "monoai.prompts.Prompt.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 103, "bases": 0, "doc": 111}, "monoai.prompts.Prompt.as_dict": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 14, "bases": 0, "doc": 3}, "monoai.prompts.PromptChain": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 128}, "monoai.prompts.PromptChain.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 112, "bases": 0, "doc": 97}, "monoai.prompts.PromptChain.response_type": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "monoai.prompts.IterativePrompt": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 216}, "monoai.prompts.IterativePrompt.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 126, "bases": 0, "doc": 146}, "monoai.rag": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 35}, "monoai.rag.RAG": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 581}, "monoai.rag.RAG.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 86, "bases": 0, "doc": 329}, "monoai.rag.RAG.query": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 53, "bases": 0, "doc": 591}, "monoai.rag.ChromaVectorDB": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 4, "doc": 447}, "monoai.rag.ChromaVectorDB.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 78, "bases": 0, "doc": 203}, "monoai.rag.ChromaVectorDB.add": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 66, "bases": 0, "doc": 425}, "monoai.rag.ChromaVectorDB.query": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 53, "bases": 0, "doc": 546}, "monoai.rag.DocumentsBuilder": {"qualname": 1, "fullname": 3, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 201}, "monoai.rag.DocumentsBuilder.__init__": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 110, "bases": 0, "doc": 9}, "monoai.rag.DocumentsBuilder.from_file": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 55, "bases": 0, "doc": 16}, "monoai.rag.DocumentsBuilder.from_str": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 80, "bases": 0, "doc": 17}, "monoai.rag.DocumentsBuilder.from_doc": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 80, "bases": 0, "doc": 16}, "monoai.rag.DocumentsBuilder.from_pdf": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 92, "bases": 0, "doc": 12}, "monoai.rag.DocumentsBuilder.from_url": {"qualname": 3, "fullname": 5, "annotation": 0, "default_value": 0, "signature": 96, "bases": 0, "doc": 64}, "monoai.tools": {"qualname": 0, "fullname": 2, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 181}, "monoai.tools.domain_whois": {"qualname": 0, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "monoai.tools.search_web_with_duckduckgo": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "monoai.tools.search_web_with_tavily": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 0, "bases": 0, "doc": 3}, "monoai.tools.scrape_web_with_requests": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 73}, "monoai.tools.scrape_web_with_selenium": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 51, "bases": 0, "doc": 99}, "monoai.tools.scrape_web_with_tavily": {"qualname": 4, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 33, "bases": 0, "doc": 84}, "monoai.tools.scrape_web": {"qualname": 2, "fullname": 4, "annotation": 0, "default_value": 0, "signature": 54, "bases": 0, "doc": 102}, "monoai.tools.domain_whois.domain_whois": {"qualname": 2, "fullname": 6, "annotation": 0, "default_value": 0, "signature": 16, "bases": 0, "doc": 17}}, "length": 59, "save": true}, "index": {"qualname": {"root": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1}, "monoai.chat.Chat.__init__": {"tf": 1}, "monoai.conf.Conf.__init__": {"tf": 1}, "monoai.prompts.Prompt.__init__": {"tf": 1}, "monoai.prompts.PromptChain.__init__": {"tf": 1}, "monoai.prompts.IterativePrompt.__init__": {"tf": 1}, "monoai.rag.RAG.__init__": {"tf": 1}, "monoai.rag.ChromaVectorDB.__init__": {"tf": 1}, "monoai.rag.DocumentsBuilder.__init__": {"tf": 1}}, "df": 9, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"monoai.agents.Agent": {"tf": 1}, "monoai.agents.Agent.__init__": {"tf": 1}, "monoai.agents.Agent.run": {"tf": 1}, "monoai.agents.Agent.enable_streaming": {"tf": 1}, "monoai.agents.Agent.disable_streaming": {"tf": 1}}, "df": 5}}}}, "s": {"docs": {"monoai.prompts.Prompt.as_dict": {"tf": 1}}, "df": 1, "k": {"docs": {"monoai.chat.Chat.ask": {"tf": 1}, "monoai.chat.Chat.ask_stream": {"tf": 1}, "monoai.chat.Chat.ask_async": {"tf": 1}}, "df": 3}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"monoai.chat.Chat.ask_async": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"monoai.rag.ChromaVectorDB.add": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1}, "monoai.chat.Chat.__init__": {"tf": 1}, "monoai.conf.Conf.__init__": {"tf": 1}, "monoai.prompts.Prompt.__init__": {"tf": 1}, "monoai.prompts.PromptChain.__init__": {"tf": 1}, "monoai.prompts.IterativePrompt.__init__": {"tf": 1}, "monoai.rag.RAG.__init__": {"tf": 1}, "monoai.rag.ChromaVectorDB.__init__": {"tf": 1}, "monoai.rag.DocumentsBuilder.__init__": {"tf": 1}}, "df": 9}}, "f": {"docs": {}, "df": 0, "o": {"docs": {"monoai.chat.Chat.get_chat_info": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"monoai.models.ImageModel": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"monoai.prompts.IterativePrompt": {"tf": 1}, "monoai.prompts.IterativePrompt.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {"monoai.agents.Agent.run": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"monoai.prompts.PromptChain.response_type": {"tf": 1}}, "df": 1}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"monoai.tools.scrape_web_with_requests": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {"monoai.rag.RAG": {"tf": 1}, "monoai.rag.RAG.__init__": {"tf": 1}, "monoai.rag.RAG.query": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"monoai.agents.Agent.enable_streaming": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"monoai.rag.DocumentsBuilder.from_str": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"monoai.chat.Chat.ask_stream": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"monoai.agents.Agent.enable_streaming": {"tf": 1}, "monoai.agents.Agent.disable_streaming": {"tf": 1}}, "df": 2}}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"monoai.tools.search_web_with_duckduckgo": {"tf": 1}, "monoai.tools.search_web_with_tavily": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"monoai.tools.scrape_web_with_selenium": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"monoai.tools.scrape_web_with_requests": {"tf": 1}, "monoai.tools.scrape_web_with_selenium": {"tf": 1}, "monoai.tools.scrape_web_with_tavily": {"tf": 1}, "monoai.tools.scrape_web": {"tf": 1}}, "df": 4}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"monoai.agents.Agent.disable_streaming": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"monoai.prompts.Prompt.as_dict": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {"monoai.rag.DocumentsBuilder.from_doc": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"monoai.rag.DocumentsBuilder": {"tf": 1}, "monoai.rag.DocumentsBuilder.__init__": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_file": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_str": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_doc": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_pdf": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_url": {"tf": 1}}, "df": 7}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"monoai.tools.domain_whois": {"tf": 1}, "monoai.tools.domain_whois.domain_whois": {"tf": 1}}, "df": 2}}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {"monoai.tools.search_web_with_duckduckgo": {"tf": 1}}, "df": 1}}}}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"monoai.chat.Chat": {"tf": 1}, "monoai.chat.Chat.__init__": {"tf": 1}, "monoai.chat.Chat.ask": {"tf": 1}, "monoai.chat.Chat.ask_stream": {"tf": 1}, "monoai.chat.Chat.ask_async": {"tf": 1}, "monoai.chat.Chat.get_chat_info": {"tf": 1.4142135623730951}, "monoai.chat.Chat.clear_history": {"tf": 1}}, "df": 7}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "b": {"docs": {"monoai.rag.ChromaVectorDB": {"tf": 1}, "monoai.rag.ChromaVectorDB.__init__": {"tf": 1}, "monoai.rag.ChromaVectorDB.add": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}}, "df": 4}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"monoai.chat.Chat.clear_history": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"monoai.conf.Conf": {"tf": 1}, "monoai.conf.Conf.__init__": {"tf": 1}}, "df": 2}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"monoai.models.CollaborativeModel": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"monoai.chat.Chat.get_chat_info": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"monoai.chat.Chat.clear_history": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"monoai.models.HostedModel": {"tf": 1}}, "df": 1}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"monoai.models.Model": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"monoai.models.MultiModel": {"tf": 1}}, "df": 1}}}}}}}}}}, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"monoai.models.VoiceModel": {"tf": 1}}, "df": 1}}}}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"monoai.prompts.Prompt": {"tf": 1}, "monoai.prompts.Prompt.__init__": {"tf": 1}, "monoai.prompts.Prompt.as_dict": {"tf": 1}}, "df": 3, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"monoai.prompts.PromptChain": {"tf": 1}, "monoai.prompts.PromptChain.__init__": {"tf": 1}, "monoai.prompts.PromptChain.response_type": {"tf": 1}}, "df": 3}}}}}}}}}}, "d": {"docs": {}, "df": 0, "f": {"docs": {"monoai.rag.DocumentsBuilder.from_pdf": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"monoai.prompts.PromptChain.response_type": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"monoai.tools.search_web_with_tavily": {"tf": 1}, "monoai.tools.scrape_web_with_tavily": {"tf": 1}}, "df": 2}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}}, "df": 2}}}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"monoai.rag.DocumentsBuilder.from_file": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_str": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_doc": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_pdf": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_url": {"tf": 1}}, "df": 5}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"monoai.rag.DocumentsBuilder.from_file": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {"monoai.rag.DocumentsBuilder.from_url": {"tf": 1}}, "df": 1}}}, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"monoai.tools.domain_whois": {"tf": 1}, "monoai.tools.domain_whois.domain_whois": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "b": {"docs": {"monoai.tools.search_web_with_duckduckgo": {"tf": 1}, "monoai.tools.search_web_with_tavily": {"tf": 1}, "monoai.tools.scrape_web_with_requests": {"tf": 1}, "monoai.tools.scrape_web_with_selenium": {"tf": 1}, "monoai.tools.scrape_web_with_tavily": {"tf": 1}, "monoai.tools.scrape_web": {"tf": 1}}, "df": 6}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"monoai.tools.search_web_with_duckduckgo": {"tf": 1}, "monoai.tools.search_web_with_tavily": {"tf": 1}, "monoai.tools.scrape_web_with_requests": {"tf": 1}, "monoai.tools.scrape_web_with_selenium": {"tf": 1}, "monoai.tools.scrape_web_with_tavily": {"tf": 1}}, "df": 5}}}}}}, "fullname": {"root": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1}, "monoai.chat.Chat.__init__": {"tf": 1}, "monoai.conf.Conf.__init__": {"tf": 1}, "monoai.prompts.Prompt.__init__": {"tf": 1}, "monoai.prompts.PromptChain.__init__": {"tf": 1}, "monoai.prompts.IterativePrompt.__init__": {"tf": 1}, "monoai.rag.RAG.__init__": {"tf": 1}, "monoai.rag.ChromaVectorDB.__init__": {"tf": 1}, "monoai.rag.DocumentsBuilder.__init__": {"tf": 1}}, "df": 9, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {"monoai": {"tf": 1}, "monoai.agents": {"tf": 1}, "monoai.agents.Agent": {"tf": 1}, "monoai.agents.Agent.__init__": {"tf": 1}, "monoai.agents.Agent.run": {"tf": 1}, "monoai.agents.Agent.enable_streaming": {"tf": 1}, "monoai.agents.Agent.disable_streaming": {"tf": 1}, "monoai.chat": {"tf": 1}, "monoai.chat.Chat": {"tf": 1}, "monoai.chat.Chat.__init__": {"tf": 1}, "monoai.chat.Chat.ask": {"tf": 1}, "monoai.chat.Chat.ask_stream": {"tf": 1}, "monoai.chat.Chat.ask_async": {"tf": 1}, "monoai.chat.Chat.get_chat_info": {"tf": 1}, "monoai.chat.Chat.clear_history": {"tf": 1}, "monoai.conf": {"tf": 1}, "monoai.conf.Conf": {"tf": 1}, "monoai.conf.Conf.__init__": {"tf": 1}, "monoai.models": {"tf": 1}, "monoai.models.Model": {"tf": 1}, "monoai.models.HostedModel": {"tf": 1}, "monoai.models.MultiModel": {"tf": 1}, "monoai.models.CollaborativeModel": {"tf": 1}, "monoai.models.ImageModel": {"tf": 1}, "monoai.models.VoiceModel": {"tf": 1}, "monoai.observability": {"tf": 1}, "monoai.prompts": {"tf": 1}, "monoai.prompts.Prompt": {"tf": 1}, "monoai.prompts.Prompt.__init__": {"tf": 1}, "monoai.prompts.Prompt.as_dict": {"tf": 1}, "monoai.prompts.PromptChain": {"tf": 1}, "monoai.prompts.PromptChain.__init__": {"tf": 1}, "monoai.prompts.PromptChain.response_type": {"tf": 1}, "monoai.prompts.IterativePrompt": {"tf": 1}, "monoai.prompts.IterativePrompt.__init__": {"tf": 1}, "monoai.rag": {"tf": 1}, "monoai.rag.RAG": {"tf": 1}, "monoai.rag.RAG.__init__": {"tf": 1}, "monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB": {"tf": 1}, "monoai.rag.ChromaVectorDB.__init__": {"tf": 1}, "monoai.rag.ChromaVectorDB.add": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}, "monoai.rag.DocumentsBuilder": {"tf": 1}, "monoai.rag.DocumentsBuilder.__init__": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_file": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_str": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_doc": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_pdf": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_url": {"tf": 1}, "monoai.tools": {"tf": 1}, "monoai.tools.domain_whois": {"tf": 1}, "monoai.tools.search_web_with_duckduckgo": {"tf": 1}, "monoai.tools.search_web_with_tavily": {"tf": 1}, "monoai.tools.scrape_web_with_requests": {"tf": 1}, "monoai.tools.scrape_web_with_selenium": {"tf": 1}, "monoai.tools.scrape_web_with_tavily": {"tf": 1}, "monoai.tools.scrape_web": {"tf": 1}, "monoai.tools.domain_whois.domain_whois": {"tf": 1}}, "df": 59}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"monoai.models.Model": {"tf": 1}}, "df": 1, "s": {"docs": {"monoai.models": {"tf": 1}, "monoai.models.Model": {"tf": 1}, "monoai.models.HostedModel": {"tf": 1}, "monoai.models.MultiModel": {"tf": 1}, "monoai.models.CollaborativeModel": {"tf": 1}, "monoai.models.ImageModel": {"tf": 1}, "monoai.models.VoiceModel": {"tf": 1}}, "df": 7}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"monoai.models.MultiModel": {"tf": 1}}, "df": 1}}}}}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"monoai.agents.Agent": {"tf": 1}, "monoai.agents.Agent.__init__": {"tf": 1}, "monoai.agents.Agent.run": {"tf": 1}, "monoai.agents.Agent.enable_streaming": {"tf": 1}, "monoai.agents.Agent.disable_streaming": {"tf": 1}}, "df": 5, "s": {"docs": {"monoai.agents": {"tf": 1}, "monoai.agents.Agent": {"tf": 1}, "monoai.agents.Agent.__init__": {"tf": 1}, "monoai.agents.Agent.run": {"tf": 1}, "monoai.agents.Agent.enable_streaming": {"tf": 1}, "monoai.agents.Agent.disable_streaming": {"tf": 1}}, "df": 6}}}}}, "s": {"docs": {"monoai.prompts.Prompt.as_dict": {"tf": 1}}, "df": 1, "k": {"docs": {"monoai.chat.Chat.ask": {"tf": 1}, "monoai.chat.Chat.ask_stream": {"tf": 1}, "monoai.chat.Chat.ask_async": {"tf": 1}}, "df": 3}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"monoai.chat.Chat.ask_async": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"monoai.rag.ChromaVectorDB.add": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1}, "monoai.chat.Chat.__init__": {"tf": 1}, "monoai.conf.Conf.__init__": {"tf": 1}, "monoai.prompts.Prompt.__init__": {"tf": 1}, "monoai.prompts.PromptChain.__init__": {"tf": 1}, "monoai.prompts.IterativePrompt.__init__": {"tf": 1}, "monoai.rag.RAG.__init__": {"tf": 1}, "monoai.rag.ChromaVectorDB.__init__": {"tf": 1}, "monoai.rag.DocumentsBuilder.__init__": {"tf": 1}}, "df": 9}}, "f": {"docs": {}, "df": 0, "o": {"docs": {"monoai.chat.Chat.get_chat_info": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"monoai.models.ImageModel": {"tf": 1}}, "df": 1}}}}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"monoai.prompts.IterativePrompt": {"tf": 1}, "monoai.prompts.IterativePrompt.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {"monoai.agents.Agent.run": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"monoai.prompts.PromptChain.response_type": {"tf": 1}}, "df": 1}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"monoai.tools.scrape_web_with_requests": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {"monoai.rag": {"tf": 1}, "monoai.rag.RAG": {"tf": 1.4142135623730951}, "monoai.rag.RAG.__init__": {"tf": 1.4142135623730951}, "monoai.rag.RAG.query": {"tf": 1.4142135623730951}, "monoai.rag.ChromaVectorDB": {"tf": 1}, "monoai.rag.ChromaVectorDB.__init__": {"tf": 1}, "monoai.rag.ChromaVectorDB.add": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}, "monoai.rag.DocumentsBuilder": {"tf": 1}, "monoai.rag.DocumentsBuilder.__init__": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_file": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_str": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_doc": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_pdf": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_url": {"tf": 1}}, "df": 15}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"monoai.agents.Agent.enable_streaming": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"monoai.rag.DocumentsBuilder.from_str": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"monoai.chat.Chat.ask_stream": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"monoai.agents.Agent.enable_streaming": {"tf": 1}, "monoai.agents.Agent.disable_streaming": {"tf": 1}}, "df": 2}}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"monoai.tools.search_web_with_duckduckgo": {"tf": 1}, "monoai.tools.search_web_with_tavily": {"tf": 1}}, "df": 2}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"monoai.tools.scrape_web_with_selenium": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"monoai.tools.scrape_web_with_requests": {"tf": 1}, "monoai.tools.scrape_web_with_selenium": {"tf": 1}, "monoai.tools.scrape_web_with_tavily": {"tf": 1}, "monoai.tools.scrape_web": {"tf": 1}}, "df": 4}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"monoai.agents.Agent.disable_streaming": {"tf": 1}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"monoai.prompts.Prompt.as_dict": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "c": {"docs": {"monoai.rag.DocumentsBuilder.from_doc": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"monoai.rag.DocumentsBuilder": {"tf": 1}, "monoai.rag.DocumentsBuilder.__init__": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_file": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_str": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_doc": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_pdf": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_url": {"tf": 1}}, "df": 7}}}}}}}}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"monoai.tools.domain_whois": {"tf": 1}, "monoai.tools.domain_whois.domain_whois": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {"monoai.tools.search_web_with_duckduckgo": {"tf": 1}}, "df": 1}}}}}}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"monoai.chat": {"tf": 1}, "monoai.chat.Chat": {"tf": 1.4142135623730951}, "monoai.chat.Chat.__init__": {"tf": 1.4142135623730951}, "monoai.chat.Chat.ask": {"tf": 1.4142135623730951}, "monoai.chat.Chat.ask_stream": {"tf": 1.4142135623730951}, "monoai.chat.Chat.ask_async": {"tf": 1.4142135623730951}, "monoai.chat.Chat.get_chat_info": {"tf": 1.7320508075688772}, "monoai.chat.Chat.clear_history": {"tf": 1.4142135623730951}}, "df": 8}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "b": {"docs": {"monoai.rag.ChromaVectorDB": {"tf": 1}, "monoai.rag.ChromaVectorDB.__init__": {"tf": 1}, "monoai.rag.ChromaVectorDB.add": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}}, "df": 4}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"monoai.chat.Chat.clear_history": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "f": {"docs": {"monoai.conf": {"tf": 1}, "monoai.conf.Conf": {"tf": 1.4142135623730951}, "monoai.conf.Conf.__init__": {"tf": 1.4142135623730951}}, "df": 3}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"monoai.models.CollaborativeModel": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"monoai.chat.Chat.get_chat_info": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"monoai.chat.Chat.clear_history": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"monoai.models.HostedModel": {"tf": 1}}, "df": 1}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"monoai.models.VoiceModel": {"tf": 1}}, "df": 1}}}}}}}}}}, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"monoai.observability": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"monoai.prompts.Prompt": {"tf": 1}, "monoai.prompts.Prompt.__init__": {"tf": 1}, "monoai.prompts.Prompt.as_dict": {"tf": 1}}, "df": 3, "s": {"docs": {"monoai.prompts": {"tf": 1}, "monoai.prompts.Prompt": {"tf": 1}, "monoai.prompts.Prompt.__init__": {"tf": 1}, "monoai.prompts.Prompt.as_dict": {"tf": 1}, "monoai.prompts.PromptChain": {"tf": 1}, "monoai.prompts.PromptChain.__init__": {"tf": 1}, "monoai.prompts.PromptChain.response_type": {"tf": 1}, "monoai.prompts.IterativePrompt": {"tf": 1}, "monoai.prompts.IterativePrompt.__init__": {"tf": 1}}, "df": 9}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"monoai.prompts.PromptChain": {"tf": 1}, "monoai.prompts.PromptChain.__init__": {"tf": 1}, "monoai.prompts.PromptChain.response_type": {"tf": 1}}, "df": 3}}}}}}}}}}, "d": {"docs": {}, "df": 0, "f": {"docs": {"monoai.rag.DocumentsBuilder.from_pdf": {"tf": 1}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"monoai.prompts.PromptChain.response_type": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"monoai.tools": {"tf": 1}, "monoai.tools.domain_whois": {"tf": 1}, "monoai.tools.search_web_with_duckduckgo": {"tf": 1}, "monoai.tools.search_web_with_tavily": {"tf": 1}, "monoai.tools.scrape_web_with_requests": {"tf": 1}, "monoai.tools.scrape_web_with_selenium": {"tf": 1}, "monoai.tools.scrape_web_with_tavily": {"tf": 1}, "monoai.tools.scrape_web": {"tf": 1}, "monoai.tools.domain_whois.domain_whois": {"tf": 1}}, "df": 9}}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"monoai.tools.search_web_with_tavily": {"tf": 1}, "monoai.tools.scrape_web_with_tavily": {"tf": 1}}, "df": 2}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}}, "df": 2}}}}}, "f": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"monoai.rag.DocumentsBuilder.from_file": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_str": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_doc": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_pdf": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_url": {"tf": 1}}, "df": 5}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"monoai.rag.DocumentsBuilder.from_file": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {"monoai.rag.DocumentsBuilder.from_url": {"tf": 1}}, "df": 1}}}, "w": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"monoai.tools.domain_whois": {"tf": 1}, "monoai.tools.domain_whois.domain_whois": {"tf": 1.4142135623730951}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "b": {"docs": {"monoai.tools.search_web_with_duckduckgo": {"tf": 1}, "monoai.tools.search_web_with_tavily": {"tf": 1}, "monoai.tools.scrape_web_with_requests": {"tf": 1}, "monoai.tools.scrape_web_with_selenium": {"tf": 1}, "monoai.tools.scrape_web_with_tavily": {"tf": 1}, "monoai.tools.scrape_web": {"tf": 1}}, "df": 6}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"monoai.tools.search_web_with_duckduckgo": {"tf": 1}, "monoai.tools.search_web_with_tavily": {"tf": 1}, "monoai.tools.scrape_web_with_requests": {"tf": 1}, "monoai.tools.scrape_web_with_selenium": {"tf": 1}, "monoai.tools.scrape_web_with_tavily": {"tf": 1}}, "df": 5}}}}}}, "annotation": {"root": {"docs": {}, "df": 0}}, "default_value": {"root": {"docs": {}, "df": 0}}, "signature": {"root": {"0": {"docs": {"monoai.rag.DocumentsBuilder.__init__": {"tf": 1}}, "df": 1}, "1": {"0": {"0": {"0": {"docs": {"monoai.rag.DocumentsBuilder.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}, "monoai.tools.scrape_web_with_selenium": {"tf": 1}}, "df": 3}, "docs": {}, "df": 0}, "3": {"9": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1.4142135623730951}, "monoai.chat.Chat.__init__": {"tf": 2.449489742783178}, "monoai.prompts.IterativePrompt.__init__": {"tf": 1.4142135623730951}, "monoai.rag.RAG.__init__": {"tf": 1.4142135623730951}, "monoai.rag.DocumentsBuilder.__init__": {"tf": 1.4142135623730951}, "monoai.rag.DocumentsBuilder.from_str": {"tf": 1.4142135623730951}, "monoai.rag.DocumentsBuilder.from_doc": {"tf": 1.4142135623730951}, "monoai.rag.DocumentsBuilder.from_url": {"tf": 1.4142135623730951}, "monoai.tools.scrape_web": {"tf": 1.4142135623730951}}, "df": 9}, "docs": {}, "df": 0}, "docs": {"monoai.agents.Agent.__init__": {"tf": 9}, "monoai.agents.Agent.run": {"tf": 5.916079783099616}, "monoai.agents.Agent.enable_streaming": {"tf": 4.242640687119285}, "monoai.agents.Agent.disable_streaming": {"tf": 3.1622776601683795}, "monoai.chat.Chat.__init__": {"tf": 15.297058540778355}, "monoai.chat.Chat.ask": {"tf": 11.704699910719626}, "monoai.chat.Chat.ask_stream": {"tf": 10.488088481701515}, "monoai.chat.Chat.ask_async": {"tf": 10.488088481701515}, "monoai.chat.Chat.get_chat_info": {"tf": 4.69041575982343}, "monoai.chat.Chat.clear_history": {"tf": 3.4641016151377544}, "monoai.conf.Conf.__init__": {"tf": 2}, "monoai.prompts.Prompt.__init__": {"tf": 9.16515138991168}, "monoai.prompts.Prompt.as_dict": {"tf": 3.4641016151377544}, "monoai.prompts.PromptChain.__init__": {"tf": 9.539392014169456}, "monoai.prompts.IterativePrompt.__init__": {"tf": 10.04987562112089}, "monoai.rag.RAG.__init__": {"tf": 8.366600265340756}, "monoai.rag.RAG.query": {"tf": 6.6332495807108}, "monoai.rag.ChromaVectorDB.__init__": {"tf": 8}, "monoai.rag.ChromaVectorDB.add": {"tf": 7.416198487095663}, "monoai.rag.ChromaVectorDB.query": {"tf": 6.6332495807108}, "monoai.rag.DocumentsBuilder.__init__": {"tf": 9.219544457292887}, "monoai.rag.DocumentsBuilder.from_file": {"tf": 6.6332495807108}, "monoai.rag.DocumentsBuilder.from_str": {"tf": 7.937253933193772}, "monoai.rag.DocumentsBuilder.from_doc": {"tf": 7.937253933193772}, "monoai.rag.DocumentsBuilder.from_pdf": {"tf": 8.602325267042627}, "monoai.rag.DocumentsBuilder.from_url": {"tf": 8.831760866327848}, "monoai.tools.domain_whois": {"tf": 3.7416573867739413}, "monoai.tools.scrape_web_with_requests": {"tf": 3.7416573867739413}, "monoai.tools.scrape_web_with_selenium": {"tf": 6.48074069840786}, "monoai.tools.scrape_web_with_tavily": {"tf": 5.291502622129181}, "monoai.tools.scrape_web": {"tf": 6.6332495807108}, "monoai.tools.domain_whois.domain_whois": {"tf": 3.7416573867739413}}, "df": 32, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1.7320508075688772}, "monoai.chat.Chat.__init__": {"tf": 1.4142135623730951}, "monoai.rag.ChromaVectorDB.__init__": {"tf": 1}}, "df": 3, "s": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1}, "monoai.agents.Agent.run": {"tf": 1}, "monoai.chat.Chat.__init__": {"tf": 1.4142135623730951}, "monoai.prompts.PromptChain.__init__": {"tf": 1}}, "df": 4}}}}}, "a": {"docs": {}, "df": 0, "x": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1}, "monoai.chat.Chat.__init__": {"tf": 1.4142135623730951}}, "df": 2}}, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"monoai.chat.Chat.ask": {"tf": 1}, "monoai.chat.Chat.ask_stream": {"tf": 1}, "monoai.chat.Chat.ask_async": {"tf": 1}}, "df": 3, "s": {"docs": {"monoai.rag.ChromaVectorDB.add": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"monoai.rag.DocumentsBuilder.from_doc": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"monoai.prompts.IterativePrompt.__init__": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1}}, "df": 1}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"monoai.chat.Chat.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"monoai.chat.Chat.ask": {"tf": 1}, "monoai.chat.Chat.ask_stream": {"tf": 1}, "monoai.chat.Chat.ask_async": {"tf": 1}, "monoai.prompts.Prompt.__init__": {"tf": 1.4142135623730951}, "monoai.prompts.PromptChain.__init__": {"tf": 1.4142135623730951}}, "df": 5}}}, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"monoai.rag.DocumentsBuilder.from_file": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_str": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_doc": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_pdf": {"tf": 1.4142135623730951}, "monoai.rag.DocumentsBuilder.from_url": {"tf": 1}}, "df": 5}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"monoai.rag.DocumentsBuilder.from_str": {"tf": 1.4142135623730951}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"monoai.tools.scrape_web_with_selenium": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"monoai.tools.scrape_web_with_selenium": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {"monoai.chat.Chat.__init__": {"tf": 1}}, "df": 1, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"monoai.agents.Agent.__init__": {"tf": 2}, "monoai.agents.Agent.enable_streaming": {"tf": 1}, "monoai.chat.Chat.__init__": {"tf": 2.449489742783178}, "monoai.chat.Chat.ask": {"tf": 1.4142135623730951}, "monoai.chat.Chat.ask_stream": {"tf": 1.7320508075688772}, "monoai.chat.Chat.ask_async": {"tf": 1.7320508075688772}, "monoai.chat.Chat.clear_history": {"tf": 1}, "monoai.prompts.Prompt.__init__": {"tf": 2.8284271247461903}, "monoai.prompts.PromptChain.__init__": {"tf": 2.23606797749979}, "monoai.prompts.IterativePrompt.__init__": {"tf": 2}, "monoai.rag.RAG.__init__": {"tf": 1.4142135623730951}, "monoai.rag.ChromaVectorDB.__init__": {"tf": 1.7320508075688772}, "monoai.rag.ChromaVectorDB.add": {"tf": 1}, "monoai.rag.DocumentsBuilder.__init__": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_pdf": {"tf": 1}}, "df": 15, "t": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"monoai.chat.Chat.__init__": {"tf": 1}, "monoai.chat.Chat.ask": {"tf": 1}, "monoai.chat.Chat.ask_stream": {"tf": 1.4142135623730951}, "monoai.chat.Chat.ask_async": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {"monoai.rag.ChromaVectorDB.__init__": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_str": {"tf": 1}}, "df": 2}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"monoai.chat.Chat.__init__": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_file": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_doc": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_pdf": {"tf": 1}}, "df": 4}}, "g": {"docs": {}, "df": 0, "e": {"docs": {"monoai.rag.DocumentsBuilder.from_pdf": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1}, "monoai.agents.Agent.run": {"tf": 1.7320508075688772}, "monoai.chat.Chat.__init__": {"tf": 1.7320508075688772}, "monoai.chat.Chat.ask": {"tf": 1}, "monoai.chat.Chat.ask_stream": {"tf": 1}, "monoai.chat.Chat.ask_async": {"tf": 1}, "monoai.prompts.Prompt.__init__": {"tf": 1.7320508075688772}, "monoai.prompts.PromptChain.__init__": {"tf": 1.4142135623730951}, "monoai.prompts.IterativePrompt.__init__": {"tf": 2}}, "df": 9, "s": {"docs": {"monoai.agents.Agent.run": {"tf": 1}, "monoai.chat.Chat.__init__": {"tf": 1}, "monoai.prompts.PromptChain.__init__": {"tf": 1.7320508075688772}}, "df": 3}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"monoai.prompts.PromptChain.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"monoai.chat.Chat.__init__": {"tf": 1}, "monoai.rag.RAG.__init__": {"tf": 1}, "monoai.rag.ChromaVectorDB.__init__": {"tf": 1}}, "df": 3}}}}}}}}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"monoai.rag.DocumentsBuilder.__init__": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1}, "monoai.rag.DocumentsBuilder.__init__": {"tf": 1}}, "df": 2}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1}, "monoai.chat.Chat.ask": {"tf": 1}, "monoai.prompts.IterativePrompt.__init__": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_url": {"tf": 1}, "monoai.tools.scrape_web_with_tavily": {"tf": 1}, "monoai.tools.scrape_web": {"tf": 1}}, "df": 6}}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"monoai.chat.Chat.ask": {"tf": 1.4142135623730951}, "monoai.chat.Chat.ask_stream": {"tf": 1.4142135623730951}, "monoai.chat.Chat.ask_async": {"tf": 1.4142135623730951}, "monoai.rag.DocumentsBuilder.from_file": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_doc": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_pdf": {"tf": 1}}, "df": 6}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1}}, "df": 1}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"monoai.agents.Agent.enable_streaming": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"monoai.rag.DocumentsBuilder.__init__": {"tf": 1}}, "df": 1}}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"monoai.chat.Chat.__init__": {"tf": 1.4142135623730951}}, "df": 1}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"monoai.rag.RAG.__init__": {"tf": 1}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"monoai.rag.DocumentsBuilder.__init__": {"tf": 1.7320508075688772}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"monoai.rag.DocumentsBuilder.__init__": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"monoai.chat.Chat.__init__": {"tf": 1}}, "df": 1}}, "n": {"docs": {"monoai.chat.Chat.__init__": {"tf": 1}}, "df": 1, "y": {"docs": {"monoai.chat.Chat.ask": {"tf": 1.4142135623730951}, "monoai.chat.Chat.ask_stream": {"tf": 1}, "monoai.chat.Chat.ask_async": {"tf": 1}, "monoai.chat.Chat.get_chat_info": {"tf": 1}, "monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}}, "df": 6}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"monoai.chat.Chat.__init__": {"tf": 1}}, "df": 1}}}}}}}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"monoai.chat.Chat.ask_stream": {"tf": 1}, "monoai.chat.Chat.ask_async": {"tf": 1}}, "df": 2}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"monoai.prompts.IterativePrompt.__init__": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {"monoai.rag.DocumentsBuilder.from_doc": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"monoai.rag.DocumentsBuilder.from_url": {"tf": 1}, "monoai.tools.scrape_web_with_tavily": {"tf": 1}, "monoai.tools.scrape_web": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"monoai.chat.Chat.__init__": {"tf": 1}, "monoai.chat.Chat.ask": {"tf": 1.4142135623730951}, "monoai.chat.Chat.ask_stream": {"tf": 1}, "monoai.chat.Chat.ask_async": {"tf": 1}, "monoai.chat.Chat.get_chat_info": {"tf": 1}, "monoai.prompts.Prompt.__init__": {"tf": 1}, "monoai.prompts.Prompt.as_dict": {"tf": 1}, "monoai.prompts.PromptChain.__init__": {"tf": 1}, "monoai.prompts.IterativePrompt.__init__": {"tf": 1}, "monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB.add": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_file": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_str": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_doc": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_pdf": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_url": {"tf": 1}}, "df": 17}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"monoai.prompts.Prompt.__init__": {"tf": 1}, "monoai.prompts.PromptChain.__init__": {"tf": 1}, "monoai.prompts.IterativePrompt.__init__": {"tf": 1.4142135623730951}}, "df": 3, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"monoai.rag.RAG.__init__": {"tf": 1}}, "df": 1}}}}}}}, "b": {"docs": {"monoai.rag.RAG.__init__": {"tf": 1}}, "df": 1}, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"monoai.rag.ChromaVectorDB.add": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"monoai.tools.domain_whois": {"tf": 1}, "monoai.tools.domain_whois.domain_whois": {"tf": 1}}, "df": 2}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1}, "monoai.prompts.IterativePrompt.__init__": {"tf": 1}}, "df": 2}}}, "n": {"docs": {"monoai.rag.DocumentsBuilder.__init__": {"tf": 1}}, "df": 1, "t": {"docs": {"monoai.chat.Chat.__init__": {"tf": 1.7320508075688772}, "monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}, "monoai.rag.DocumentsBuilder.__init__": {"tf": 1.4142135623730951}, "monoai.rag.DocumentsBuilder.from_pdf": {"tf": 1.4142135623730951}, "monoai.tools.scrape_web_with_selenium": {"tf": 1}}, "df": 6}}, "d": {"docs": {"monoai.chat.Chat.__init__": {"tf": 1}, "monoai.prompts.Prompt.__init__": {"tf": 1}, "monoai.prompts.PromptChain.__init__": {"tf": 1}, "monoai.prompts.IterativePrompt.__init__": {"tf": 1}}, "df": 4, "s": {"docs": {"monoai.rag.ChromaVectorDB.add": {"tf": 1}}, "df": 1}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "b": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"monoai.rag.DocumentsBuilder.__init__": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"monoai.tools.scrape_web_with_selenium": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "f": {"docs": {"monoai.agents.Agent.run": {"tf": 1}, "monoai.agents.Agent.enable_streaming": {"tf": 1}, "monoai.agents.Agent.disable_streaming": {"tf": 1}, "monoai.chat.Chat.ask": {"tf": 1}, "monoai.chat.Chat.ask_stream": {"tf": 1}, "monoai.chat.Chat.ask_async": {"tf": 1}, "monoai.chat.Chat.get_chat_info": {"tf": 1}, "monoai.chat.Chat.clear_history": {"tf": 1}, "monoai.prompts.Prompt.as_dict": {"tf": 1}, "monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB.add": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_file": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_str": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_doc": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_pdf": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_url": {"tf": 1}}, "df": 17}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {"monoai.agents.Agent.run": {"tf": 1}, "monoai.chat.Chat.__init__": {"tf": 2.449489742783178}, "monoai.chat.Chat.ask": {"tf": 2.449489742783178}, "monoai.chat.Chat.ask_stream": {"tf": 2.23606797749979}, "monoai.chat.Chat.ask_async": {"tf": 2.23606797749979}, "monoai.chat.Chat.get_chat_info": {"tf": 1}, "monoai.prompts.Prompt.__init__": {"tf": 1.4142135623730951}, "monoai.prompts.PromptChain.__init__": {"tf": 1}, "monoai.prompts.IterativePrompt.__init__": {"tf": 2}, "monoai.rag.RAG.__init__": {"tf": 2}, "monoai.rag.RAG.query": {"tf": 1.4142135623730951}, "monoai.rag.ChromaVectorDB.__init__": {"tf": 1.7320508075688772}, "monoai.rag.ChromaVectorDB.add": {"tf": 1.4142135623730951}, "monoai.rag.ChromaVectorDB.query": {"tf": 1.4142135623730951}, "monoai.rag.DocumentsBuilder.__init__": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_file": {"tf": 1.7320508075688772}, "monoai.rag.DocumentsBuilder.from_str": {"tf": 2}, "monoai.rag.DocumentsBuilder.from_doc": {"tf": 2}, "monoai.rag.DocumentsBuilder.from_pdf": {"tf": 1.7320508075688772}, "monoai.rag.DocumentsBuilder.from_url": {"tf": 2}, "monoai.tools.domain_whois": {"tf": 1}, "monoai.tools.scrape_web_with_requests": {"tf": 1}, "monoai.tools.scrape_web_with_selenium": {"tf": 1}, "monoai.tools.scrape_web_with_tavily": {"tf": 1}, "monoai.tools.scrape_web": {"tf": 1.4142135623730951}, "monoai.tools.domain_whois.domain_whois": {"tf": 1}}, "df": 26, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"monoai.agents.Agent.enable_streaming": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "y": {"docs": {"monoai.rag.DocumentsBuilder.__init__": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"monoai.rag.DocumentsBuilder.from_str": {"tf": 1}}, "df": 1}}}}}, "y": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"monoai.chat.Chat.__init__": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"monoai.chat.Chat.__init__": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"monoai.rag.DocumentsBuilder.__init__": {"tf": 1}}, "df": 1}}}, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"monoai.rag.DocumentsBuilder.__init__": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"monoai.rag.DocumentsBuilder.from_str": {"tf": 1}}, "df": 1}}}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"monoai.chat.Chat.__init__": {"tf": 1.4142135623730951}, "monoai.chat.Chat.ask": {"tf": 1.4142135623730951}, "monoai.chat.Chat.ask_stream": {"tf": 1}, "monoai.chat.Chat.ask_async": {"tf": 1}}, "df": 4}}}}, "r": {"docs": {}, "df": 0, "l": {"docs": {"monoai.rag.DocumentsBuilder.from_url": {"tf": 1}, "monoai.tools.scrape_web_with_requests": {"tf": 1}, "monoai.tools.scrape_web_with_selenium": {"tf": 1}, "monoai.tools.scrape_web_with_tavily": {"tf": 1}, "monoai.tools.scrape_web": {"tf": 1}}, "df": 5}}}, "y": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {"monoai.chat.Chat.__init__": {"tf": 1}}, "df": 1}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"monoai.chat.Chat.__init__": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"monoai.tools.scrape_web_with_selenium": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"monoai.chat.Chat.__init__": {"tf": 2.6457513110645907}, "monoai.chat.Chat.ask": {"tf": 1}}, "df": 2}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"monoai.chat.Chat.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"monoai.chat.Chat.__init__": {"tf": 2.6457513110645907}, "monoai.chat.Chat.ask": {"tf": 1.4142135623730951}, "monoai.chat.Chat.ask_stream": {"tf": 1.4142135623730951}, "monoai.chat.Chat.ask_async": {"tf": 1.4142135623730951}, "monoai.rag.RAG.__init__": {"tf": 1.4142135623730951}, "monoai.rag.ChromaVectorDB.__init__": {"tf": 1.7320508075688772}, "monoai.rag.DocumentsBuilder.__init__": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_pdf": {"tf": 1}}, "df": 8}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"monoai.rag.DocumentsBuilder.__init__": {"tf": 1}}, "df": 1}}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"monoai.chat.Chat.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"monoai.chat.Chat.ask": {"tf": 1}, "monoai.chat.Chat.ask_stream": {"tf": 1}, "monoai.chat.Chat.ask_async": {"tf": 1}}, "df": 3}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"monoai.chat.Chat.ask": {"tf": 1}, "monoai.prompts.IterativePrompt.__init__": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_url": {"tf": 1}, "monoai.tools.scrape_web_with_selenium": {"tf": 1}, "monoai.tools.scrape_web_with_tavily": {"tf": 1}, "monoai.tools.scrape_web": {"tf": 1}}, "df": 6}}}, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"monoai.rag.DocumentsBuilder.__init__": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"monoai.chat.Chat.__init__": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"monoai.chat.Chat.ask": {"tf": 1}, "monoai.prompts.PromptChain.__init__": {"tf": 1.4142135623730951}, "monoai.prompts.IterativePrompt.__init__": {"tf": 1}, "monoai.rag.ChromaVectorDB.add": {"tf": 1.7320508075688772}, "monoai.rag.DocumentsBuilder.from_file": {"tf": 1.7320508075688772}, "monoai.rag.DocumentsBuilder.from_str": {"tf": 1.7320508075688772}, "monoai.rag.DocumentsBuilder.from_doc": {"tf": 1.7320508075688772}, "monoai.rag.DocumentsBuilder.from_pdf": {"tf": 1.7320508075688772}, "monoai.rag.DocumentsBuilder.from_url": {"tf": 1.7320508075688772}}, "df": 9}}}, "t": {"docs": {"monoai.rag.DocumentsBuilder.__init__": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"monoai.chat.Chat.ask": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"monoai.prompts.IterativePrompt.__init__": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"monoai.prompts.Prompt.__init__": {"tf": 1}, "monoai.prompts.PromptChain.__init__": {"tf": 1}}, "df": 2}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"monoai.rag.DocumentsBuilder.from_url": {"tf": 1}, "monoai.tools.scrape_web": {"tf": 1}}, "df": 2}}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"monoai.rag.DocumentsBuilder.from_pdf": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"monoai.rag.RAG.__init__": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"monoai.rag.RAG.__init__": {"tf": 1}, "monoai.rag.ChromaVectorDB.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}}, "df": 2}}}}}, "k": {"docs": {"monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}}, "df": 2}, "g": {"docs": {}, "df": 0, "t": {"docs": {"monoai.rag.DocumentsBuilder.__init__": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"monoai.rag.DocumentsBuilder.from_doc": {"tf": 1}}, "df": 1}}}}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"monoai.rag.DocumentsBuilder.from_url": {"tf": 1}, "monoai.tools.scrape_web": {"tf": 1}}, "df": 2}}}}}}}}, "bases": {"root": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {"monoai.prompts.PromptChain": {"tf": 1}, "monoai.prompts.IterativePrompt": {"tf": 1}, "monoai.rag.ChromaVectorDB": {"tf": 1}}, "df": 3}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"monoai.prompts.PromptChain": {"tf": 1.4142135623730951}, "monoai.prompts.IterativePrompt": {"tf": 1.4142135623730951}}, "df": 2, "s": {"docs": {"monoai.prompts.PromptChain": {"tf": 1}, "monoai.prompts.IterativePrompt": {"tf": 1}}, "df": 2}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"monoai.rag.ChromaVectorDB": {"tf": 1}}, "df": 1}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "b": {"docs": {"monoai.rag.ChromaVectorDB": {"tf": 1}}, "df": 1}}}}}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "b": {"docs": {"monoai.rag.ChromaVectorDB": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "doc": {"root": {"0": {"0": {"1": {"docs": {"monoai.rag.ChromaVectorDB.add": {"tf": 1}}, "df": 1}, "2": {"docs": {"monoai.rag.RAG": {"tf": 1.4142135623730951}, "monoai.rag.RAG.__init__": {"tf": 1.4142135623730951}, "monoai.rag.ChromaVectorDB": {"tf": 1}, "monoai.rag.ChromaVectorDB.__init__": {"tf": 1.4142135623730951}, "monoai.rag.ChromaVectorDB.add": {"tf": 1}}, "df": 5}, "docs": {}, "df": 0}, "docs": {"monoai.observability": {"tf": 1.7320508075688772}, "monoai.rag.RAG.__init__": {"tf": 1}, "monoai.rag.RAG.query": {"tf": 2.23606797749979}, "monoai.rag.ChromaVectorDB.query": {"tf": 2.23606797749979}}, "df": 4}, "1": {"0": {"0": {"docs": {"monoai.chat.Chat": {"tf": 1}, "monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}}, "df": 3}, "docs": {"monoai.rag.RAG": {"tf": 1}, "monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}, "monoai.tools.scrape_web_with_selenium": {"tf": 1}}, "df": 4}, "1": {"docs": {"monoai.observability": {"tf": 1}}, "df": 1}, "2": {"3": {"4": {"5": {"docs": {"monoai.chat.Chat": {"tf": 1.4142135623730951}, "monoai.observability": {"tf": 1}}, "df": 2}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {"monoai": {"tf": 1}, "monoai.observability": {"tf": 2}, "monoai.rag.RAG.query": {"tf": 1.4142135623730951}, "monoai.rag.ChromaVectorDB": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1.4142135623730951}}, "df": 5}, "2": {"0": {"2": {"3": {"docs": {"monoai.rag.ChromaVectorDB.add": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {}, "df": 0}, "docs": {"monoai.rag.RAG.query": {"tf": 1}}, "df": 1}, "5": {"docs": {"monoai.observability": {"tf": 1.4142135623730951}}, "df": 1}, "docs": {"monoai": {"tf": 3}, "monoai.chat.Chat": {"tf": 1}, "monoai.observability": {"tf": 1.4142135623730951}, "monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}}, "df": 6, "+": {"2": {"docs": {"monoai.chat.Chat": {"tf": 1}, "monoai.prompts.Prompt": {"tf": 1.7320508075688772}}, "df": 2}, "docs": {}, "df": 0}}, "3": {"3": {"7": {"6": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "d": {"2": {"2": {"0": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "d": {"3": {"docs": {"monoai.chat.Chat": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {}, "df": 0}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "9": {"docs": {"monoai.rag.RAG.query": {"tf": 2.8284271247461903}, "monoai.rag.ChromaVectorDB.query": {"tf": 2.8284271247461903}}, "df": 2}, "docs": {"monoai": {"tf": 1}, "monoai.rag.RAG.__init__": {"tf": 1.4142135623730951}, "monoai.rag.ChromaVectorDB.__init__": {"tf": 1}}, "df": 3, "f": {"docs": {"monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}}, "df": 2}}, "4": {"docs": {"monoai.chat.Chat": {"tf": 1}}, "df": 1, "o": {"docs": {"monoai": {"tf": 2}, "monoai.chat.Chat": {"tf": 2.6457513110645907}, "monoai.conf.Conf": {"tf": 1}, "monoai.rag.RAG": {"tf": 1}}, "df": 4}, "b": {"8": {"2": {"docs": {"monoai.chat.Chat": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}, "5": {"9": {"docs": {"monoai.observability": {"tf": 1}}, "df": 1}, "docs": {"monoai.rag.RAG": {"tf": 1}, "monoai.rag.ChromaVectorDB": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}}, "df": 3}, "6": {"docs": {"monoai.chat.Chat": {"tf": 1}}, "df": 1}, "7": {"docs": {"monoai.observability": {"tf": 1}}, "df": 1}, "8": {"docs": {"monoai.rag.DocumentsBuilder": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "c": {"2": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "a": {"3": {"docs": {"monoai.chat.Chat": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {}, "df": 0}}}}, "docs": {}, "df": 0}}}, "docs": {"monoai": {"tf": 29.478805945967352}, "monoai.agents": {"tf": 1.7320508075688772}, "monoai.agents.Agent": {"tf": 5.385164807134504}, "monoai.agents.Agent.__init__": {"tf": 11}, "monoai.agents.Agent.run": {"tf": 7.615773105863909}, "monoai.agents.Agent.enable_streaming": {"tf": 5.291502622129181}, "monoai.agents.Agent.disable_streaming": {"tf": 4}, "monoai.chat": {"tf": 1.7320508075688772}, "monoai.chat.Chat": {"tf": 7.615773105863909}, "monoai.chat.Chat.__init__": {"tf": 8.774964387392123}, "monoai.chat.Chat.ask": {"tf": 7.483314773547883}, "monoai.chat.Chat.ask_stream": {"tf": 7.0710678118654755}, "monoai.chat.Chat.ask_async": {"tf": 7.0710678118654755}, "monoai.chat.Chat.get_chat_info": {"tf": 3.605551275463989}, "monoai.chat.Chat.clear_history": {"tf": 3.605551275463989}, "monoai.conf": {"tf": 1.7320508075688772}, "monoai.conf.Conf": {"tf": 4.47213595499958}, "monoai.conf.Conf.__init__": {"tf": 3.605551275463989}, "monoai.models": {"tf": 2.449489742783178}, "monoai.models.Model": {"tf": 1.7320508075688772}, "monoai.models.HostedModel": {"tf": 1.7320508075688772}, "monoai.models.MultiModel": {"tf": 1.7320508075688772}, "monoai.models.CollaborativeModel": {"tf": 1.7320508075688772}, "monoai.models.ImageModel": {"tf": 1.7320508075688772}, "monoai.models.VoiceModel": {"tf": 1.7320508075688772}, "monoai.observability": {"tf": 17.406895185529212}, "monoai.prompts": {"tf": 1.7320508075688772}, "monoai.prompts.Prompt": {"tf": 8.602325267042627}, "monoai.prompts.Prompt.__init__": {"tf": 6.324555320336759}, "monoai.prompts.Prompt.as_dict": {"tf": 1.7320508075688772}, "monoai.prompts.PromptChain": {"tf": 5.744562646538029}, "monoai.prompts.PromptChain.__init__": {"tf": 5.916079783099616}, "monoai.prompts.PromptChain.response_type": {"tf": 1.7320508075688772}, "monoai.prompts.IterativePrompt": {"tf": 5.916079783099616}, "monoai.prompts.IterativePrompt.__init__": {"tf": 7}, "monoai.rag": {"tf": 1.7320508075688772}, "monoai.rag.RAG": {"tf": 18.466185312619388}, "monoai.rag.RAG.__init__": {"tf": 12.489995996796797}, "monoai.rag.RAG.query": {"tf": 18.384776310850235}, "monoai.rag.ChromaVectorDB": {"tf": 16.186414056238647}, "monoai.rag.ChromaVectorDB.__init__": {"tf": 9.899494936611665}, "monoai.rag.ChromaVectorDB.add": {"tf": 14.52583904633395}, "monoai.rag.ChromaVectorDB.query": {"tf": 17.578395831246947}, "monoai.rag.DocumentsBuilder": {"tf": 6.4031242374328485}, "monoai.rag.DocumentsBuilder.__init__": {"tf": 1.7320508075688772}, "monoai.rag.DocumentsBuilder.from_file": {"tf": 1.7320508075688772}, "monoai.rag.DocumentsBuilder.from_str": {"tf": 1.7320508075688772}, "monoai.rag.DocumentsBuilder.from_doc": {"tf": 1.7320508075688772}, "monoai.rag.DocumentsBuilder.from_pdf": {"tf": 1.7320508075688772}, "monoai.rag.DocumentsBuilder.from_url": {"tf": 4.123105625617661}, "monoai.tools": {"tf": 8.717797887081348}, "monoai.tools.domain_whois": {"tf": 1.7320508075688772}, "monoai.tools.search_web_with_duckduckgo": {"tf": 1.7320508075688772}, "monoai.tools.search_web_with_tavily": {"tf": 1.7320508075688772}, "monoai.tools.scrape_web_with_requests": {"tf": 3.4641016151377544}, "monoai.tools.scrape_web_with_selenium": {"tf": 3.4641016151377544}, "monoai.tools.scrape_web_with_tavily": {"tf": 3.4641016151377544}, "monoai.tools.scrape_web": {"tf": 3.4641016151377544}, "monoai.tools.domain_whois.domain_whois": {"tf": 2.23606797749979}}, "df": 59, "t": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1}, "monoai.agents.Agent.enable_streaming": {"tf": 1}, "monoai.agents.Agent.disable_streaming": {"tf": 1}, "monoai.rag.RAG.__init__": {"tf": 1}, "monoai.rag.ChromaVectorDB": {"tf": 1}, "monoai.rag.ChromaVectorDB.__init__": {"tf": 1}, "monoai.rag.ChromaVectorDB.add": {"tf": 1}, "monoai.tools.scrape_web_with_requests": {"tf": 1}, "monoai.tools.scrape_web_with_tavily": {"tf": 1}}, "df": 9, "h": {"docs": {}, "df": 0, "e": {"docs": {"monoai": {"tf": 3.4641016151377544}, "monoai.agents.Agent": {"tf": 1.7320508075688772}, "monoai.agents.Agent.__init__": {"tf": 3}, "monoai.agents.Agent.run": {"tf": 3}, "monoai.agents.Agent.enable_streaming": {"tf": 2.23606797749979}, "monoai.agents.Agent.disable_streaming": {"tf": 1.4142135623730951}, "monoai.chat": {"tf": 1}, "monoai.chat.Chat": {"tf": 1}, "monoai.chat.Chat.__init__": {"tf": 3.872983346207417}, "monoai.chat.Chat.ask": {"tf": 3.872983346207417}, "monoai.chat.Chat.ask_stream": {"tf": 3.1622776601683795}, "monoai.chat.Chat.ask_async": {"tf": 3.1622776601683795}, "monoai.chat.Chat.get_chat_info": {"tf": 1}, "monoai.chat.Chat.clear_history": {"tf": 1}, "monoai.conf.Conf": {"tf": 1.4142135623730951}, "monoai.conf.Conf.__init__": {"tf": 1.4142135623730951}, "monoai.models": {"tf": 1}, "monoai.observability": {"tf": 2}, "monoai.prompts": {"tf": 1}, "monoai.prompts.Prompt": {"tf": 1.7320508075688772}, "monoai.prompts.Prompt.__init__": {"tf": 1.4142135623730951}, "monoai.prompts.PromptChain": {"tf": 2}, "monoai.prompts.PromptChain.__init__": {"tf": 1}, "monoai.prompts.IterativePrompt": {"tf": 3.872983346207417}, "monoai.prompts.IterativePrompt.__init__": {"tf": 1.4142135623730951}, "monoai.rag.RAG": {"tf": 2.8284271247461903}, "monoai.rag.RAG.__init__": {"tf": 2.8284271247461903}, "monoai.rag.RAG.query": {"tf": 3.4641016151377544}, "monoai.rag.ChromaVectorDB": {"tf": 1.7320508075688772}, "monoai.rag.ChromaVectorDB.__init__": {"tf": 2.23606797749979}, "monoai.rag.ChromaVectorDB.add": {"tf": 3.1622776601683795}, "monoai.rag.ChromaVectorDB.query": {"tf": 3}, "monoai.rag.DocumentsBuilder": {"tf": 2.23606797749979}, "monoai.rag.DocumentsBuilder.__init__": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_url": {"tf": 1}, "monoai.tools": {"tf": 3.3166247903554}, "monoai.tools.domain_whois": {"tf": 1.4142135623730951}, "monoai.tools.scrape_web_with_requests": {"tf": 2.8284271247461903}, "monoai.tools.scrape_web_with_selenium": {"tf": 2.23606797749979}, "monoai.tools.scrape_web_with_tavily": {"tf": 2.449489742783178}, "monoai.tools.scrape_web": {"tf": 3.1622776601683795}, "monoai.tools.domain_whois.domain_whois": {"tf": 1.4142135623730951}}, "df": 42, "i": {"docs": {}, "df": 0, "r": {"docs": {"monoai": {"tf": 1.7320508075688772}, "monoai.rag.ChromaVectorDB.add": {"tf": 1}}, "df": 2}}, "s": {"docs": {}, "df": 0, "e": {"docs": {"monoai": {"tf": 1}}, "df": 1}}, "n": {"docs": {"monoai.agents.Agent": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "e": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1}}, "df": 1}}, "y": {"docs": {"monoai.models": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "t": {"docs": {"monoai": {"tf": 1}, "monoai.agents.Agent": {"tf": 1}, "monoai.agents.Agent.__init__": {"tf": 1}, "monoai.agents.Agent.run": {"tf": 1}, "monoai.agents.Agent.enable_streaming": {"tf": 1}, "monoai.observability": {"tf": 1}, "monoai.prompts.IterativePrompt": {"tf": 1.7320508075688772}, "monoai.rag": {"tf": 1}, "monoai.rag.RAG": {"tf": 1}, "monoai.rag.ChromaVectorDB": {"tf": 1}, "monoai.rag.DocumentsBuilder": {"tf": 1}, "monoai.tools": {"tf": 1}, "monoai.tools.scrape_web_with_selenium": {"tf": 1}, "monoai.tools.scrape_web": {"tf": 1}}, "df": 14}, "n": {"docs": {"monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}}, "df": 2}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {"monoai": {"tf": 1}, "monoai.rag.ChromaVectorDB.add": {"tf": 1}}, "df": 2}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"monoai": {"tf": 1}, "monoai.agents.Agent.run": {"tf": 1}, "monoai.prompts.Prompt": {"tf": 1}}, "df": 3}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {"monoai": {"tf": 1}, "monoai.agents.Agent": {"tf": 1}, "monoai.agents.Agent.__init__": {"tf": 1}, "monoai.agents.Agent.run": {"tf": 1.4142135623730951}, "monoai.agents.Agent.enable_streaming": {"tf": 1}, "monoai.agents.Agent.disable_streaming": {"tf": 1.4142135623730951}, "monoai.models": {"tf": 1}, "monoai.prompts": {"tf": 1}, "monoai.prompts.Prompt": {"tf": 1}, "monoai.prompts.IterativePrompt": {"tf": 1.7320508075688772}, "monoai.rag.RAG": {"tf": 1}, "monoai.rag.RAG.__init__": {"tf": 1}, "monoai.rag.RAG.query": {"tf": 1.4142135623730951}, "monoai.rag.ChromaVectorDB": {"tf": 1}, "monoai.rag.ChromaVectorDB.add": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1.4142135623730951}, "monoai.rag.DocumentsBuilder": {"tf": 1}, "monoai.tools.scrape_web_with_requests": {"tf": 1}, "monoai.tools.scrape_web_with_selenium": {"tf": 1}, "monoai.tools.scrape_web_with_tavily": {"tf": 1}, "monoai.tools.scrape_web": {"tf": 1}}, "df": 21}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"monoai.agents.Agent.run": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {"monoai": {"tf": 3.3166247903554}, "monoai.agents.Agent": {"tf": 1}, "monoai.agents.Agent.__init__": {"tf": 1.7320508075688772}, "monoai.agents.Agent.run": {"tf": 1.4142135623730951}, "monoai.agents.Agent.enable_streaming": {"tf": 1.4142135623730951}, "monoai.chat.Chat.__init__": {"tf": 2.23606797749979}, "monoai.chat.Chat.ask": {"tf": 2.6457513110645907}, "monoai.chat.Chat.ask_stream": {"tf": 2.23606797749979}, "monoai.chat.Chat.ask_async": {"tf": 2.23606797749979}, "monoai.models": {"tf": 1}, "monoai.observability": {"tf": 1.7320508075688772}, "monoai.prompts.Prompt": {"tf": 1}, "monoai.prompts.PromptChain.__init__": {"tf": 1}, "monoai.prompts.IterativePrompt.__init__": {"tf": 1}, "monoai.rag.RAG": {"tf": 1.4142135623730951}, "monoai.rag.RAG.__init__": {"tf": 2}, "monoai.rag.RAG.query": {"tf": 2.23606797749979}, "monoai.rag.ChromaVectorDB.__init__": {"tf": 2}, "monoai.rag.ChromaVectorDB.add": {"tf": 2.449489742783178}, "monoai.rag.ChromaVectorDB.query": {"tf": 2}, "monoai.rag.DocumentsBuilder": {"tf": 2}, "monoai.rag.DocumentsBuilder.from_url": {"tf": 1.4142135623730951}, "monoai.tools": {"tf": 2.449489742783178}, "monoai.tools.scrape_web_with_requests": {"tf": 1}, "monoai.tools.scrape_web_with_selenium": {"tf": 2.449489742783178}, "monoai.tools.scrape_web_with_tavily": {"tf": 1.4142135623730951}, "monoai.tools.scrape_web": {"tf": 2}}, "df": 27, "o": {"docs": {}, "df": 0, "l": {"docs": {"monoai.agents.Agent": {"tf": 1}, "monoai.agents.Agent.__init__": {"tf": 1}, "monoai.agents.Agent.run": {"tf": 1}, "monoai.tools": {"tf": 1}}, "df": 4, "s": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1.7320508075688772}, "monoai.tools": {"tf": 1.7320508075688772}}, "df": 2}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"monoai.observability": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"monoai.chat.Chat": {"tf": 1}, "monoai.chat.Chat.__init__": {"tf": 2}}, "df": 2}}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"monoai.prompts.IterativePrompt": {"tf": 1.7320508075688772}, "monoai.rag.ChromaVectorDB.add": {"tf": 1.4142135623730951}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "t": {"docs": {"monoai": {"tf": 1}, "monoai.agents.Agent.enable_streaming": {"tf": 1}, "monoai.prompts.Prompt": {"tf": 1.4142135623730951}, "monoai.prompts.Prompt.__init__": {"tf": 1}, "monoai.prompts.IterativePrompt.__init__": {"tf": 1}, "monoai.rag.RAG": {"tf": 1.7320508075688772}, "monoai.rag.RAG.__init__": {"tf": 2}, "monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB": {"tf": 1}, "monoai.rag.ChromaVectorDB.__init__": {"tf": 1.7320508075688772}, "monoai.rag.ChromaVectorDB.add": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}, "monoai.rag.DocumentsBuilder": {"tf": 1.7320508075688772}, "monoai.rag.DocumentsBuilder.from_str": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_doc": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_pdf": {"tf": 1}, "monoai.tools.scrape_web_with_requests": {"tf": 1.4142135623730951}, "monoai.tools.scrape_web_with_selenium": {"tf": 1.4142135623730951}, "monoai.tools.scrape_web_with_tavily": {"tf": 1}, "monoai.tools.scrape_web": {"tf": 1}}, "df": 20, "b": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "k": {"docs": {"monoai.rag.ChromaVectorDB.add": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"monoai.chat.Chat": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"monoai.observability": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"monoai.prompts.IterativePrompt.__init__": {"tf": 1}}, "df": 1}}}}}}}, "y": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"monoai": {"tf": 1.7320508075688772}, "monoai.chat.Chat": {"tf": 1}, "monoai.chat.Chat.__init__": {"tf": 1.4142135623730951}, "monoai.chat.Chat.ask": {"tf": 1.4142135623730951}, "monoai.chat.Chat.ask_stream": {"tf": 1.4142135623730951}, "monoai.chat.Chat.ask_async": {"tf": 1.4142135623730951}, "monoai.prompts.Prompt": {"tf": 2.8284271247461903}, "monoai.prompts.Prompt.__init__": {"tf": 1.7320508075688772}}, "df": 8, "s": {"docs": {"monoai": {"tf": 1}, "monoai.prompts": {"tf": 1}, "monoai.prompts.IterativePrompt": {"tf": 1.4142135623730951}}, "df": 3}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"monoai.agents.Agent.enable_streaming": {"tf": 1}, "monoai.models": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_url": {"tf": 1}, "monoai.tools.scrape_web_with_selenium": {"tf": 1.4142135623730951}}, "df": 4}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"monoai.observability": {"tf": 1.4142135623730951}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"monoai.chat.Chat": {"tf": 1}, "monoai.chat.Chat.ask": {"tf": 1}, "monoai.chat.Chat.ask_stream": {"tf": 1}, "monoai.chat.Chat.ask_async": {"tf": 1}}, "df": 4}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"monoai.chat.Chat.ask": {"tf": 1}}, "df": 1}}}}}, "u": {"docs": {}, "df": 0, "e": {"docs": {"monoai.chat.Chat.ask": {"tf": 1}, "monoai.prompts.IterativePrompt.__init__": {"tf": 1}, "monoai.tools.scrape_web_with_selenium": {"tf": 1}}, "df": 3}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {"monoai.prompts.Prompt": {"tf": 1}}, "df": 1}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"monoai.rag.DocumentsBuilder": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_url": {"tf": 1}, "monoai.tools.scrape_web_with_tavily": {"tf": 2.23606797749979}, "monoai.tools.scrape_web": {"tf": 1.7320508075688772}}, "df": 4}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"monoai.rag.DocumentsBuilder.from_url": {"tf": 1}}, "df": 1}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"monoai.rag.ChromaVectorDB": {"tf": 1.4142135623730951}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"monoai": {"tf": 1}}, "df": 1, "l": {"docs": {}, "df": 0, "y": {"docs": {"monoai.rag.RAG.query": {"tf": 1}}, "df": 1}}}}, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"monoai.rag.DocumentsBuilder.from_url": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"monoai.rag.ChromaVectorDB.query": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"monoai": {"tf": 1}}, "df": 1, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"monoai": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"monoai.rag.RAG": {"tf": 1}, "monoai.rag.ChromaVectorDB": {"tf": 2.23606797749979}, "monoai.rag.ChromaVectorDB.__init__": {"tf": 2.23606797749979}, "monoai.rag.ChromaVectorDB.add": {"tf": 2}, "monoai.rag.ChromaVectorDB.query": {"tf": 1.4142135623730951}}, "df": 5, "s": {"docs": {"monoai.rag.DocumentsBuilder": {"tf": 1}}, "df": 1}}}}}}}}}, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"monoai": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"monoai": {"tf": 1}, "monoai.agents.Agent.enable_streaming": {"tf": 2}, "monoai.prompts.IterativePrompt": {"tf": 2}, "monoai.rag.RAG.query": {"tf": 1.4142135623730951}, "monoai.rag.ChromaVectorDB": {"tf": 1.4142135623730951}, "monoai.rag.ChromaVectorDB.query": {"tf": 1.4142135623730951}, "monoai.rag.DocumentsBuilder": {"tf": 1.7320508075688772}, "monoai.rag.DocumentsBuilder.from_url": {"tf": 1}, "monoai.tools.scrape_web_with_requests": {"tf": 1.7320508075688772}, "monoai.tools.scrape_web_with_selenium": {"tf": 2}, "monoai.tools.scrape_web_with_tavily": {"tf": 1.7320508075688772}, "monoai.tools.scrape_web": {"tf": 1.4142135623730951}}, "df": 12}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"monoai.observability": {"tf": 1}, "monoai.prompts.PromptChain": {"tf": 1}}, "df": 2}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"monoai.rag.ChromaVectorDB.add": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"monoai.agents.Agent.run": {"tf": 1}, "monoai.chat.Chat.ask_stream": {"tf": 1}, "monoai.chat.Chat.get_chat_info": {"tf": 1}, "monoai.prompts.PromptChain.__init__": {"tf": 1}, "monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}, "monoai.tools.scrape_web_with_requests": {"tf": 1}, "monoai.tools.scrape_web_with_selenium": {"tf": 1}, "monoai.tools.scrape_web_with_tavily": {"tf": 1}, "monoai.tools.scrape_web": {"tf": 1}}, "df": 10}}}}}}}, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"monoai": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {"monoai.agents.Agent.enable_streaming": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"monoai.agents.Agent": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"monoai.agents.Agent.__init__": {"tf": null}}, "df": 1}}}}}}}}, "f": {"docs": {"monoai.conf.Conf": {"tf": 2}}, "df": 1, "i": {"docs": {}, "df": 0, "g": {"docs": {"monoai.conf.Conf.__init__": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"monoai": {"tf": 1.4142135623730951}, "monoai.agents.Agent": {"tf": 1}, "monoai.agents.Agent.__init__": {"tf": 1}, "monoai.conf.Conf": {"tf": 1.7320508075688772}, "monoai.observability": {"tf": 1}}, "df": 5}}}}, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"monoai.rag.ChromaVectorDB": {"tf": 1}, "monoai.rag.DocumentsBuilder": {"tf": 1.4142135623730951}}, "df": 2}}}}, "e": {"docs": {"monoai": {"tf": 1}, "monoai.observability": {"tf": 1}}, "df": 2, "d": {"docs": {"monoai.agents.Agent": {"tf": 1}, "monoai.agents.Agent.run": {"tf": 1}, "monoai.rag.ChromaVectorDB.add": {"tf": 1.4142135623730951}, "monoai.rag.DocumentsBuilder.from_url": {"tf": 1}}, "df": 4}, "s": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"monoai.prompts.IterativePrompt": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"monoai.rag.RAG": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}}, "df": 2}}}, "s": {"docs": {"monoai.rag.RAG.query": {"tf": 1}}, "df": 1}, "e": {"docs": {}, "df": 0, "d": {"docs": {"monoai.rag.RAG.query": {"tf": 1.4142135623730951}, "monoai.rag.ChromaVectorDB.add": {"tf": 1.4142135623730951}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}}, "df": 3}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"monoai.tools.scrape_web": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"monoai.rag.ChromaVectorDB": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"monoai.rag.ChromaVectorDB.__init__": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"monoai.rag.ChromaVectorDB.__init__": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"monoai.agents.Agent": {"tf": 1}}, "df": 1, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"monoai": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"monoai.models": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"monoai.rag.RAG.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"monoai.observability": {"tf": 1}, "monoai.prompts.Prompt": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "t": {"docs": {"monoai.rag.ChromaVectorDB": {"tf": 1}}, "df": 1, "r": {"docs": {}, "df": 0, "y": {"docs": {"monoai.prompts.Prompt": {"tf": 1.4142135623730951}, "monoai.prompts.PromptChain": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "i": {"docs": {"monoai.prompts": {"tf": 1}, "monoai.prompts.Prompt": {"tf": 1.4142135623730951}}, "df": 2}}}}, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"monoai.rag.RAG.__init__": {"tf": 1}, "monoai.rag.ChromaVectorDB.__init__": {"tf": 1}}, "df": 2, "n": {"docs": {}, "df": 0, "t": {"docs": {"monoai.prompts.IterativePrompt": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {"monoai": {"tf": 1.4142135623730951}, "monoai.agents.Agent": {"tf": 1}, "monoai.agents.Agent.__init__": {"tf": 1}, "monoai.agents.Agent.run": {"tf": 1}, "monoai.prompts": {"tf": 1}, "monoai.prompts.Prompt": {"tf": 1}, "monoai.rag.RAG": {"tf": 1}, "monoai.rag.ChromaVectorDB.add": {"tf": 1.4142135623730951}, "monoai.rag.DocumentsBuilder": {"tf": 1}, "monoai.tools": {"tf": 1}}, "df": 10}, "s": {"docs": {}, "df": 0, "e": {"docs": {"monoai.prompts.Prompt": {"tf": 1}}, "df": 1, "s": {"docs": {"monoai": {"tf": 1}, "monoai.rag.RAG.__init__": {"tf": 1}}, "df": 2}}}, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"monoai": {"tf": 1.7320508075688772}, "monoai.prompts.Prompt": {"tf": 1}, "monoai.prompts.PromptChain": {"tf": 1.4142135623730951}}, "df": 3}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"monoai.agents.Agent": {"tf": 1}, "monoai.agents.Agent.__init__": {"tf": 1}, "monoai.tools": {"tf": 1}}, "df": 3}}}, "y": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"monoai.agents.Agent.run": {"tf": 1}, "monoai.agents.Agent.enable_streaming": {"tf": 1}, "monoai.tools.scrape_web_with_tavily": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"monoai.agents.Agent": {"tf": 1.7320508075688772}, "monoai.agents.Agent.__init__": {"tf": 2.23606797749979}, "monoai.agents.Agent.run": {"tf": 1}, "monoai.agents.Agent.disable_streaming": {"tf": 1}}, "df": 4}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1}, "monoai.agents.Agent.enable_streaming": {"tf": 1}}, "df": 2}}}}, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"monoai.agents.Agent.enable_streaming": {"tf": 2.23606797749979}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"monoai.rag.ChromaVectorDB.add": {"tf": 1}}, "df": 1}}}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"monoai": {"tf": 1.4142135623730951}, "monoai.agents.Agent": {"tf": 1.4142135623730951}, "monoai.agents.Agent.__init__": {"tf": 1}, "monoai.chat.Chat": {"tf": 1}, "monoai.conf.Conf": {"tf": 1}, "monoai.prompts.Prompt": {"tf": 1.4142135623730951}, "monoai.prompts.PromptChain": {"tf": 1}, "monoai.prompts.IterativePrompt": {"tf": 1}, "monoai.rag.RAG": {"tf": 1}, "monoai.rag.ChromaVectorDB": {"tf": 1}, "monoai.rag.DocumentsBuilder": {"tf": 1.4142135623730951}}, "df": 11, "e": {"docs": {}, "df": 0, "s": {"docs": {"monoai.models": {"tf": 1}, "monoai.prompts": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"monoai.chat.Chat.clear_history": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"monoai.chat.Chat.clear_history": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {"monoai.tools.scrape_web_with_tavily": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"monoai.tools.scrape_web_with_tavily": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"monoai.rag.ChromaVectorDB": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"monoai.prompts.PromptChain": {"tf": 2}, "monoai.prompts.PromptChain.__init__": {"tf": 1.4142135623730951}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"monoai": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {"monoai": {"tf": 1.4142135623730951}, "monoai.chat": {"tf": 1.4142135623730951}, "monoai.chat.Chat": {"tf": 5.656854249492381}, "monoai.chat.Chat.__init__": {"tf": 2.449489742783178}, "monoai.chat.Chat.ask": {"tf": 1}, "monoai.chat.Chat.get_chat_info": {"tf": 1.4142135623730951}, "monoai.chat.Chat.clear_history": {"tf": 1}, "monoai.observability": {"tf": 1}}, "df": 8, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"monoai.chat.Chat.__init__": {"tf": 1}, "monoai.chat.Chat.ask": {"tf": 1}, "monoai.chat.Chat.ask_stream": {"tf": 1}, "monoai.chat.Chat.ask_async": {"tf": 1}, "monoai.chat.Chat.clear_history": {"tf": 1}}, "df": 5}}}}}}, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"monoai.prompts.IterativePrompt": {"tf": 2.449489742783178}}, "df": 1, "s": {"docs": {"monoai.prompts.IterativePrompt": {"tf": 3}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"monoai.rag.DocumentsBuilder": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1.4142135623730951}, "monoai.agents.Agent.run": {"tf": 1}}, "df": 2}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "k": {"docs": {"monoai.agents.Agent.enable_streaming": {"tf": 1}, "monoai.chat.Chat": {"tf": 1.4142135623730951}, "monoai.rag.DocumentsBuilder": {"tf": 2.449489742783178}}, "df": 3, "s": {"docs": {"monoai.agents.Agent.enable_streaming": {"tf": 1}, "monoai.chat.Chat.ask_stream": {"tf": 1}, "monoai.chat.Chat.ask_async": {"tf": 1}, "monoai.rag.DocumentsBuilder": {"tf": 1.4142135623730951}, "monoai.rag.DocumentsBuilder.from_file": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_str": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_doc": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_pdf": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_url": {"tf": 1}}, "df": 9}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"monoai.rag.DocumentsBuilder": {"tf": 1.4142135623730951}, "monoai.rag.DocumentsBuilder.__init__": {"tf": 1}}, "df": 2}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"monoai.rag.RAG": {"tf": 1.4142135623730951}, "monoai.rag.RAG.__init__": {"tf": 1.4142135623730951}}, "df": 2, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "b": {"docs": {"monoai.rag.RAG": {"tf": 1}, "monoai.rag.ChromaVectorDB": {"tf": 1.4142135623730951}, "monoai.rag.ChromaVectorDB.__init__": {"tf": 1.4142135623730951}}, "df": 3}}}}}}}}, "d": {"docs": {}, "df": 0, "b": {"docs": {"monoai.rag.RAG": {"tf": 1}, "monoai.rag.RAG.__init__": {"tf": 1}, "monoai.rag.ChromaVectorDB": {"tf": 2.449489742783178}, "monoai.rag.ChromaVectorDB.__init__": {"tf": 1.4142135623730951}, "monoai.rag.ChromaVectorDB.add": {"tf": 1.4142135623730951}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}}, "df": 6}}}, "e": {"docs": {"monoai.tools.scrape_web_with_selenium": {"tf": 1}}, "df": 1, "/": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"monoai.rag.DocumentsBuilder.from_url": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"monoai": {"tf": 1}, "monoai.agents.Agent.enable_streaming": {"tf": 1}, "monoai.agents.Agent.disable_streaming": {"tf": 1}, "monoai.chat.Chat.get_chat_info": {"tf": 1}}, "df": 4, "l": {"docs": {}, "df": 0, "y": {"docs": {"monoai.observability": {"tf": 1}, "monoai.rag.RAG": {"tf": 1}, "monoai.rag.RAG.__init__": {"tf": 1}}, "df": 3}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {"monoai.agents.Agent": {"tf": 1}, "monoai.agents.Agent.__init__": {"tf": 1.7320508075688772}, "monoai.agents.Agent.run": {"tf": 1}, "monoai.observability": {"tf": 1}, "monoai.rag.ChromaVectorDB": {"tf": 1}, "monoai.rag.ChromaVectorDB.__init__": {"tf": 1}}, "df": 6}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"monoai.agents.Agent": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"monoai.rag.ChromaVectorDB": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"monoai.chat.Chat": {"tf": 1.4142135623730951}, "monoai.conf.Conf.__init__": {"tf": 1}, "monoai.observability": {"tf": 1}, "monoai.prompts.PromptChain": {"tf": 1.4142135623730951}, "monoai.rag.ChromaVectorDB.__init__": {"tf": 1}, "monoai.tools": {"tf": 1}}, "df": 6, "d": {"docs": {"monoai.chat.Chat.__init__": {"tf": 1}, "monoai.rag.RAG.__init__": {"tf": 1}, "monoai.rag.ChromaVectorDB.__init__": {"tf": 1}}, "df": 3}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"monoai.observability": {"tf": 1}}, "df": 1}}}}}}}}}}, "y": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"monoai.agents.Agent.run": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"monoai.prompts.PromptChain": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {"monoai.rag.RAG.query": {"tf": 2.23606797749979}, "monoai.rag.ChromaVectorDB.query": {"tf": 2.23606797749979}, "monoai.tools": {"tf": 1}}, "df": 3, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"monoai": {"tf": 1}, "monoai.observability": {"tf": 1}, "monoai.prompts": {"tf": 1}}, "df": 3}}}}}}, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"monoai.prompts.Prompt": {"tf": 1}, "monoai.prompts.PromptChain": {"tf": 1.4142135623730951}}, "df": 2}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {"monoai": {"tf": 3.1622776601683795}, "monoai.agents.Agent.__init__": {"tf": 1.4142135623730951}, "monoai.chat.Chat.ask": {"tf": 1}, "monoai.conf.Conf": {"tf": 1}, "monoai.prompts.Prompt": {"tf": 1.4142135623730951}, "monoai.prompts.Prompt.__init__": {"tf": 1}, "monoai.prompts.PromptChain": {"tf": 1.4142135623730951}, "monoai.prompts.PromptChain.__init__": {"tf": 1}, "monoai.prompts.IterativePrompt": {"tf": 1}, "monoai.prompts.IterativePrompt.__init__": {"tf": 1}, "monoai.rag.DocumentsBuilder": {"tf": 1.4142135623730951}, "monoai.rag.DocumentsBuilder.from_doc": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_pdf": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_url": {"tf": 1}, "monoai.tools.scrape_web_with_requests": {"tf": 1}, "monoai.tools.scrape_web_with_selenium": {"tf": 1}, "monoai.tools.scrape_web_with_tavily": {"tf": 1}}, "df": 17}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"1": {"docs": {"monoai.rag.ChromaVectorDB": {"tf": 1}}, "df": 1}, "2": {"docs": {"monoai.rag.ChromaVectorDB": {"tf": 1}}, "df": 1}, "docs": {"monoai": {"tf": 1.7320508075688772}, "monoai.chat.Chat.ask": {"tf": 2.23606797749979}, "monoai.chat.Chat.ask_stream": {"tf": 2}, "monoai.chat.Chat.ask_async": {"tf": 2}, "monoai.conf.Conf": {"tf": 1}, "monoai.observability": {"tf": 1.4142135623730951}, "monoai.prompts": {"tf": 1}, "monoai.prompts.Prompt": {"tf": 1.4142135623730951}, "monoai.prompts.Prompt.__init__": {"tf": 1.4142135623730951}, "monoai.prompts.PromptChain": {"tf": 1.4142135623730951}, "monoai.prompts.PromptChain.__init__": {"tf": 1.4142135623730951}, "monoai.prompts.IterativePrompt": {"tf": 1.4142135623730951}, "monoai.prompts.IterativePrompt.__init__": {"tf": 1.4142135623730951}, "monoai.rag.DocumentsBuilder": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_file": {"tf": 1}}, "df": 15, "s": {"docs": {"monoai": {"tf": 2}, "monoai.rag.DocumentsBuilder": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_doc": {"tf": 1}}, "df": 3}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"monoai.rag.ChromaVectorDB.add": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"monoai": {"tf": 1}, "monoai.observability": {"tf": 1}}, "df": 2, "s": {"docs": {"monoai": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"monoai.agents.Agent.run": {"tf": 1.4142135623730951}}, "df": 1}}, "d": {"docs": {"monoai.rag.RAG.query": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"monoai.rag.ChromaVectorDB.query": {"tf": 1}}, "df": 1}}}}}, "r": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}}, "df": 2}}}, "x": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"monoai.rag.DocumentsBuilder": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {"monoai": {"tf": 1.7320508075688772}, "monoai.agents.Agent": {"tf": 1}, "monoai.agents.Agent.__init__": {"tf": 2.23606797749979}, "monoai.agents.Agent.enable_streaming": {"tf": 1.4142135623730951}, "monoai.agents.Agent.disable_streaming": {"tf": 1.4142135623730951}, "monoai.chat": {"tf": 1}, "monoai.chat.Chat": {"tf": 2}, "monoai.chat.Chat.__init__": {"tf": 2.23606797749979}, "monoai.chat.Chat.ask": {"tf": 1}, "monoai.chat.Chat.ask_stream": {"tf": 1}, "monoai.chat.Chat.ask_async": {"tf": 1}, "monoai.conf.Conf": {"tf": 1}, "monoai.models": {"tf": 1}, "monoai.observability": {"tf": 2.23606797749979}, "monoai.prompts": {"tf": 1}, "monoai.prompts.Prompt.__init__": {"tf": 1.7320508075688772}, "monoai.prompts.PromptChain": {"tf": 1.4142135623730951}, "monoai.prompts.PromptChain.__init__": {"tf": 1.4142135623730951}, "monoai.prompts.IterativePrompt": {"tf": 1.4142135623730951}, "monoai.prompts.IterativePrompt.__init__": {"tf": 1.7320508075688772}, "monoai.rag": {"tf": 1.4142135623730951}, "monoai.rag.RAG": {"tf": 2.449489742783178}, "monoai.rag.RAG.__init__": {"tf": 1.7320508075688772}, "monoai.rag.RAG.query": {"tf": 2}, "monoai.rag.ChromaVectorDB": {"tf": 2}, "monoai.rag.ChromaVectorDB.__init__": {"tf": 1}, "monoai.rag.ChromaVectorDB.add": {"tf": 2}, "monoai.rag.ChromaVectorDB.query": {"tf": 2}, "monoai.rag.DocumentsBuilder": {"tf": 2.23606797749979}, "monoai.tools": {"tf": 2.23606797749979}, "monoai.tools.domain_whois": {"tf": 1}, "monoai.tools.scrape_web_with_requests": {"tf": 1}, "monoai.tools.scrape_web_with_selenium": {"tf": 1.4142135623730951}, "monoai.tools.scrape_web_with_tavily": {"tf": 1}, "monoai.tools.domain_whois.domain_whois": {"tf": 1}}, "df": 35, "m": {"docs": {"monoai.prompts.PromptChain.__init__": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "t": {"docs": {"monoai": {"tf": 1}, "monoai.prompts.Prompt": {"tf": 1}, "monoai.tools": {"tf": 1}}, "df": 3, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"monoai.prompts.Prompt": {"tf": 2}, "monoai.prompts.Prompt.__init__": {"tf": 1}, "monoai.prompts.PromptChain.__init__": {"tf": 1}, "monoai.prompts.IterativePrompt.__init__": {"tf": 1}}, "df": 4}}}}, "s": {"docs": {"monoai.rag.DocumentsBuilder": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"monoai": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}}, "df": 2}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"monoai": {"tf": 1}}, "df": 1}}}}}, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "j": {"6": {"7": {"8": {"9": {"0": {"docs": {"monoai": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"monoai.agents.Agent": {"tf": 1.7320508075688772}, "monoai.agents.Agent.__init__": {"tf": 2.449489742783178}, "monoai.agents.Agent.run": {"tf": 1}, "monoai.agents.Agent.enable_streaming": {"tf": 1.4142135623730951}, "monoai.tools": {"tf": 1.4142135623730951}, "monoai.tools.scrape_web_with_requests": {"tf": 1}, "monoai.tools.scrape_web_with_selenium": {"tf": 1}, "monoai.tools.scrape_web_with_tavily": {"tf": 1}, "monoai.tools.scrape_web": {"tf": 1.4142135623730951}}, "df": 9, "s": {"docs": {"monoai.tools": {"tf": 1}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"monoai.chat.Chat.ask": {"tf": 1.4142135623730951}}, "df": 1}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1}}, "df": 1}}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"monoai.rag": {"tf": 1}, "monoai.rag.RAG": {"tf": 1}}, "df": 2}}}}}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1}, "monoai.tools.scrape_web_with_tavily": {"tf": 1}, "monoai.tools.scrape_web": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"monoai.chat.Chat.__init__": {"tf": 1}, "monoai.chat.Chat.ask": {"tf": 1}, "monoai.chat.Chat.ask_stream": {"tf": 1}, "monoai.chat.Chat.ask_async": {"tf": 1}, "monoai.chat.Chat.clear_history": {"tf": 1}, "monoai.tools.scrape_web_with_requests": {"tf": 1}, "monoai.tools.scrape_web_with_selenium": {"tf": 1}, "monoai.tools.scrape_web_with_tavily": {"tf": 1}}, "df": 8}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"monoai.tools.scrape_web_with_requests": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"monoai.chat.Chat": {"tf": 1}, "monoai.observability": {"tf": 1}}, "df": 2, "s": {"docs": {"monoai.rag.ChromaVectorDB": {"tf": 1}, "monoai.rag.DocumentsBuilder": {"tf": 1}}, "df": 2}}}}}}, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}}, "df": 2}}}}}, "b": {"4": {"6": {"docs": {}, "df": 0, "e": {"docs": {"monoai.chat.Chat": {"tf": 1.7320508075688772}}, "df": 1}}, "docs": {}, "df": 0}, "docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"monoai": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"monoai.rag.DocumentsBuilder": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {"monoai.observability": {"tf": 1}}, "df": 1}}}, "t": {"docs": {"monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}, "monoai.tools.scrape_web_with_requests": {"tf": 1}, "monoai.tools.scrape_web_with_tavily": {"tf": 1}}, "df": 4}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"monoai": {"tf": 1}, "monoai.chat.Chat": {"tf": 1}, "monoai.rag.RAG": {"tf": 1}, "monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}, "monoai.tools.scrape_web_with_requests": {"tf": 1}}, "df": 7}}, "e": {"docs": {"monoai": {"tf": 1.4142135623730951}, "monoai.conf.Conf": {"tf": 1.4142135623730951}, "monoai.prompts.IterativePrompt.__init__": {"tf": 1}}, "df": 3, "d": {"docs": {"monoai": {"tf": 1}, "monoai.observability": {"tf": 1}, "monoai.rag.RAG": {"tf": 1}, "monoai.rag.DocumentsBuilder": {"tf": 1}, "monoai.tools.scrape_web": {"tf": 1}}, "df": 5}, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"monoai.chat.Chat.__init__": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"monoai.prompts.Prompt.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"monoai.rag.RAG": {"tf": 1}, "monoai.rag.RAG.__init__": {"tf": 1}, "monoai.rag.ChromaVectorDB": {"tf": 1}}, "df": 3, "s": {"docs": {"monoai.rag": {"tf": 1}, "monoai.rag.RAG": {"tf": 1}}, "df": 2}}}}}}}, "e": {"docs": {"monoai.agents.Agent": {"tf": 1}, "monoai.agents.Agent.__init__": {"tf": 1.7320508075688772}, "monoai.agents.Agent.run": {"tf": 1}, "monoai.chat.Chat.__init__": {"tf": 1}, "monoai.chat.Chat.ask": {"tf": 1}, "monoai.observability": {"tf": 1}, "monoai.prompts": {"tf": 1}, "monoai.prompts.Prompt": {"tf": 1}, "monoai.prompts.IterativePrompt": {"tf": 1.4142135623730951}, "monoai.rag.RAG.__init__": {"tf": 1.7320508075688772}, "monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB.__init__": {"tf": 1}, "monoai.rag.ChromaVectorDB.add": {"tf": 2}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}, "monoai.rag.DocumentsBuilder": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_url": {"tf": 1.4142135623730951}}, "df": 16, "s": {"docs": {}, "df": 0, "t": {"docs": {"monoai": {"tf": 1}}, "df": 1}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"monoai.agents.Agent.run": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"monoai.rag.DocumentsBuilder": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1}, "monoai.chat.Chat.ask": {"tf": 1}, "monoai.prompts.IterativePrompt.__init__": {"tf": 1}}, "df": 3}, "k": {"docs": {"monoai.prompts.IterativePrompt": {"tf": 1.7320508075688772}}, "df": 1}}, "x": {"docs": {"monoai.observability": {"tf": 1}}, "df": 1}}, "y": {"docs": {"monoai.observability": {"tf": 1}, "monoai.prompts.Prompt": {"tf": 1}, "monoai.rag.RAG": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}, "monoai.tools": {"tf": 1}}, "df": 5, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"monoai.chat.Chat.ask": {"tf": 1}, "monoai.chat.Chat.ask_stream": {"tf": 1}, "monoai.chat.Chat.ask_async": {"tf": 1}}, "df": 3}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"monoai.rag.DocumentsBuilder.from_url": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {"monoai": {"tf": 3.3166247903554}, "monoai.agents.Agent": {"tf": 2}, "monoai.agents.Agent.__init__": {"tf": 1.7320508075688772}, "monoai.agents.Agent.run": {"tf": 2}, "monoai.agents.Agent.enable_streaming": {"tf": 1}, "monoai.chat.Chat": {"tf": 2}, "monoai.chat.Chat.__init__": {"tf": 1.4142135623730951}, "monoai.chat.Chat.ask": {"tf": 2}, "monoai.chat.Chat.ask_stream": {"tf": 1}, "monoai.chat.Chat.ask_async": {"tf": 1}, "monoai.conf.Conf": {"tf": 1.4142135623730951}, "monoai.prompts": {"tf": 1.4142135623730951}, "monoai.prompts.Prompt": {"tf": 2}, "monoai.prompts.Prompt.__init__": {"tf": 2}, "monoai.prompts.PromptChain": {"tf": 2}, "monoai.prompts.PromptChain.__init__": {"tf": 1.7320508075688772}, "monoai.prompts.IterativePrompt": {"tf": 2.449489742783178}, "monoai.prompts.IterativePrompt.__init__": {"tf": 1.4142135623730951}, "monoai.rag": {"tf": 1.7320508075688772}, "monoai.rag.RAG": {"tf": 2.23606797749979}, "monoai.rag.RAG.query": {"tf": 2}, "monoai.rag.ChromaVectorDB": {"tf": 1.4142135623730951}, "monoai.rag.ChromaVectorDB.add": {"tf": 1.4142135623730951}, "monoai.rag.ChromaVectorDB.query": {"tf": 1.4142135623730951}, "monoai.rag.DocumentsBuilder": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_file": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_str": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_url": {"tf": 1}, "monoai.tools": {"tf": 2}, "monoai.tools.domain_whois": {"tf": 1}, "monoai.tools.scrape_web_with_requests": {"tf": 1.4142135623730951}, "monoai.tools.scrape_web_with_selenium": {"tf": 1.4142135623730951}, "monoai.tools.scrape_web_with_tavily": {"tf": 1.4142135623730951}, "monoai.tools.scrape_web": {"tf": 2}, "monoai.tools.domain_whois.domain_whois": {"tf": 1}}, "df": 35, "i": {"docs": {"monoai": {"tf": 1.7320508075688772}, "monoai.agents.Agent": {"tf": 1.4142135623730951}, "monoai.agents.Agent.__init__": {"tf": 1.4142135623730951}, "monoai.agents.Agent.enable_streaming": {"tf": 1}, "monoai.conf.Conf": {"tf": 1}, "monoai.observability": {"tf": 1.4142135623730951}}, "df": 6}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"monoai": {"tf": 1}, "monoai.observability": {"tf": 2}}, "df": 2}}}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"monoai.agents.Agent": {"tf": 1}, "monoai.agents.Agent.__init__": {"tf": 1.4142135623730951}}, "df": 2, "e": {"docs": {}, "df": 0, "s": {"docs": {"monoai.agents.Agent": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"monoai.tools.scrape_web": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {"monoai": {"tf": 2}, "monoai.agents.Agent": {"tf": 1}, "monoai.observability": {"tf": 1.4142135623730951}, "monoai.rag.RAG.__init__": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_url": {"tf": 1}, "monoai.tools.scrape_web_with_tavily": {"tf": 1.7320508075688772}}, "df": 6}}, "n": {"docs": {"monoai": {"tf": 1}, "monoai.agents.Agent.__init__": {"tf": 1.4142135623730951}, "monoai.observability": {"tf": 1}, "monoai.rag.RAG.__init__": {"tf": 1}, "monoai.rag.ChromaVectorDB": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_url": {"tf": 1}, "monoai.tools": {"tf": 1}, "monoai.tools.scrape_web": {"tf": 1}}, "df": 9, "d": {"docs": {"monoai": {"tf": 2}, "monoai.agents.Agent": {"tf": 2.6457513110645907}, "monoai.agents.Agent.__init__": {"tf": 2.23606797749979}, "monoai.agents.Agent.run": {"tf": 1.7320508075688772}, "monoai.agents.Agent.enable_streaming": {"tf": 1}, "monoai.chat": {"tf": 1}, "monoai.chat.Chat": {"tf": 1}, "monoai.chat.Chat.ask": {"tf": 1}, "monoai.chat.Chat.ask_stream": {"tf": 1.4142135623730951}, "monoai.chat.Chat.ask_async": {"tf": 1.4142135623730951}, "monoai.models": {"tf": 1}, "monoai.observability": {"tf": 2.449489742783178}, "monoai.prompts.Prompt": {"tf": 1}, "monoai.prompts.IterativePrompt": {"tf": 1}, "monoai.rag": {"tf": 1}, "monoai.rag.RAG": {"tf": 1.4142135623730951}, "monoai.rag.RAG.__init__": {"tf": 1}, "monoai.rag.RAG.query": {"tf": 1.7320508075688772}, "monoai.rag.ChromaVectorDB": {"tf": 1}, "monoai.rag.ChromaVectorDB.add": {"tf": 1.7320508075688772}, "monoai.rag.ChromaVectorDB.query": {"tf": 1.4142135623730951}, "monoai.rag.DocumentsBuilder": {"tf": 2.23606797749979}, "monoai.rag.DocumentsBuilder.from_file": {"tf": 1.4142135623730951}, "monoai.rag.DocumentsBuilder.from_str": {"tf": 1.4142135623730951}, "monoai.rag.DocumentsBuilder.from_doc": {"tf": 1.4142135623730951}, "monoai.rag.DocumentsBuilder.from_pdf": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_url": {"tf": 1.7320508075688772}, "monoai.tools": {"tf": 1}, "monoai.tools.scrape_web_with_requests": {"tf": 1}, "monoai.tools.scrape_web_with_selenium": {"tf": 1}, "monoai.tools.scrape_web_with_tavily": {"tf": 1}}, "df": 31}, "s": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"monoai": {"tf": 1}, "monoai.agents.Agent.run": {"tf": 1}, "monoai.rag.RAG": {"tf": 1}}, "df": 3}}}}, "y": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1}, "monoai.agents.Agent.run": {"tf": 1}, "monoai.chat.Chat.ask": {"tf": 1.4142135623730951}, "monoai.chat.Chat.ask_stream": {"tf": 1}, "monoai.chat.Chat.ask_async": {"tf": 1}, "monoai.chat.Chat.get_chat_info": {"tf": 1}, "monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB.add": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}}, "df": 9}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"monoai.observability": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "s": {"docs": {"monoai.observability": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"monoai.prompts.PromptChain": {"tf": 1}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"monoai.rag.RAG.__init__": {"tf": 1.7320508075688772}, "monoai.rag.ChromaVectorDB.__init__": {"tf": 1}}, "df": 2}}}}}}}}, "c": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"monoai": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"monoai.rag.ChromaVectorDB.query": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"monoai.models": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"monoai.rag.RAG.query": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "s": {"docs": {"monoai.agents.Agent": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"monoai.agents.Agent": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"monoai.agents.Agent.run": {"tf": 1}}, "df": 1}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"monoai.rag.ChromaVectorDB": {"tf": 1}}, "df": 1}}}, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {"monoai": {"tf": 1}, "monoai.agents.Agent": {"tf": 1}, "monoai.agents.Agent.enable_streaming": {"tf": 1}, "monoai.chat.Chat.ask": {"tf": 1}, "monoai.chat.Chat.ask_async": {"tf": 1}, "monoai.prompts": {"tf": 1.4142135623730951}, "monoai.prompts.PromptChain": {"tf": 1}, "monoai.rag.ChromaVectorDB": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}}, "df": 9, "k": {"docs": {"monoai": {"tf": 2.6457513110645907}, "monoai.agents.Agent": {"tf": 1.7320508075688772}, "monoai.agents.Agent.__init__": {"tf": 2}, "monoai.chat.Chat": {"tf": 3}, "monoai.chat.Chat.ask": {"tf": 1.4142135623730951}, "monoai.chat.Chat.ask_stream": {"tf": 1.4142135623730951}, "monoai.chat.Chat.ask_async": {"tf": 1.4142135623730951}, "monoai.observability": {"tf": 1}}, "df": 8}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {"monoai.chat.Chat": {"tf": 1}}, "df": 1, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"monoai": {"tf": 1}, "monoai.chat.Chat.ask_async": {"tf": 1}}, "df": 2}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "d": {"docs": {"monoai.observability": {"tf": 1.7320508075688772}, "monoai.rag.RAG": {"tf": 1.4142135623730951}, "monoai.rag.ChromaVectorDB": {"tf": 1.4142135623730951}, "monoai.rag.ChromaVectorDB.add": {"tf": 2}, "monoai.tools": {"tf": 1}}, "df": 5, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"monoai": {"tf": 1.4142135623730951}, "monoai.observability": {"tf": 1}}, "df": 2}}}}}}}, "s": {"docs": {"monoai.rag.ChromaVectorDB.add": {"tf": 1}}, "df": 1}}, "a": {"docs": {"monoai.rag.RAG": {"tf": 1.4142135623730951}, "monoai.rag.RAG.__init__": {"tf": 1.4142135623730951}, "monoai.rag.ChromaVectorDB": {"tf": 1}, "monoai.rag.ChromaVectorDB.__init__": {"tf": 1.4142135623730951}}, "df": 4}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"monoai.tools.scrape_web_with_tavily": {"tf": 1.4142135623730951}, "monoai.tools.scrape_web": {"tf": 1}}, "df": 2}}}}}}}, "l": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {"monoai": {"tf": 1}, "monoai.prompts.Prompt": {"tf": 1}}, "df": 2}}, "l": {"docs": {"monoai.agents.Agent.disable_streaming": {"tf": 1}, "monoai.prompts.IterativePrompt.__init__": {"tf": 1.4142135623730951}, "monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB.add": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}}, "df": 5, "o": {"docs": {}, "df": 0, "w": {"docs": {"monoai.prompts.IterativePrompt": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"monoai.agents.Agent.enable_streaming": {"tf": 1}}, "df": 1}}}}}}, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "s": {"docs": {"monoai.rag.RAG.query": {"tf": 1}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"monoai.rag.ChromaVectorDB.add": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"monoai": {"tf": 1}}, "df": 1}}}, "e": {"docs": {"monoai": {"tf": 1}}, "df": 1}, "o": {"docs": {}, "df": 0, "r": {"docs": {"monoai": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"monoai.agents.Agent": {"tf": 1.7320508075688772}, "monoai.agents.Agent.__init__": {"tf": 2.6457513110645907}, "monoai.agents.Agent.run": {"tf": 1.7320508075688772}, "monoai.agents.Agent.enable_streaming": {"tf": 1.4142135623730951}, "monoai.agents.Agent.disable_streaming": {"tf": 1.4142135623730951}, "monoai.tools": {"tf": 1.7320508075688772}}, "df": 6, "s": {"docs": {"monoai.agents.Agent": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "c": {"docs": {"monoai.agents.Agent": {"tf": 1.4142135623730951}, "monoai.agents.Agent.run": {"tf": 1}}, "df": 2, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "p": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"monoai.rag": {"tf": 1}, "monoai.rag.RAG": {"tf": 1}, "monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}}, "df": 4}}}}}}, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"monoai": {"tf": 1.7320508075688772}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"monoai.rag.ChromaVectorDB": {"tf": 1}}, "df": 1, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"monoai": {"tf": 1.4142135623730951}, "monoai.rag.RAG": {"tf": 1}, "monoai.rag.RAG.__init__": {"tf": 1}, "monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB.add": {"tf": 1.4142135623730951}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}}, "df": 6}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"monoai.rag.DocumentsBuilder.from_url": {"tf": 1}}, "df": 1}}}}}}}, "g": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"monoai.rag.RAG": {"tf": 1}}, "df": 1}}}}}}}}, "b": {"docs": {}, "df": 0, "c": {"docs": {"monoai.chat.Chat": {"tf": 1}, "monoai.observability": {"tf": 1}}, "df": 2, "d": {"docs": {}, "df": 0, "e": {"1": {"2": {"3": {"4": {"5": {"docs": {"monoai": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}, "docs": {}, "df": 0}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"monoai.chat.Chat.get_chat_info": {"tf": 1}, "monoai.prompts.IterativePrompt": {"tf": 1.4142135623730951}}, "df": 2}}}}, "t": {"docs": {"monoai": {"tf": 1}, "monoai.models": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"monoai.agents.Agent.enable_streaming": {"tf": 1}, "monoai.agents.Agent.disable_streaming": {"tf": 1}}, "df": 2}}}}}, "s": {"docs": {"monoai.rag.RAG": {"tf": 1}, "monoai.rag.ChromaVectorDB": {"tf": 1}, "monoai.rag.DocumentsBuilder": {"tf": 1}}, "df": 3}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"monoai.chat.Chat.ask": {"tf": 1}, "monoai.chat.Chat.ask_stream": {"tf": 1}, "monoai.chat.Chat.ask_async": {"tf": 1}}, "df": 3}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"monoai": {"tf": 1}, "monoai.agents.Agent.__init__": {"tf": 1}, "monoai.chat.Chat.__init__": {"tf": 1}, "monoai.chat.Chat.ask": {"tf": 1}, "monoai.chat.Chat.ask_stream": {"tf": 1}, "monoai.chat.Chat.ask_async": {"tf": 1}, "monoai.models": {"tf": 1.7320508075688772}, "monoai.observability": {"tf": 1}, "monoai.prompts.IterativePrompt": {"tf": 1.4142135623730951}, "monoai.prompts.IterativePrompt.__init__": {"tf": 1}, "monoai.rag.RAG.query": {"tf": 1.7320508075688772}, "monoai.rag.ChromaVectorDB.add": {"tf": 1.4142135623730951}, "monoai.rag.ChromaVectorDB.query": {"tf": 1.7320508075688772}, "monoai.tools": {"tf": 1.4142135623730951}}, "df": 14}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"monoai.agents.Agent": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"monoai.rag.RAG.__init__": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB.add": {"tf": 1}}, "df": 2}}}}}}}}, "g": {"docs": {}, "df": 0, "s": {"docs": {"monoai.tools": {"tf": 1}, "monoai.tools.domain_whois": {"tf": 1}, "monoai.tools.scrape_web_with_requests": {"tf": 1}, "monoai.tools.scrape_web_with_selenium": {"tf": 1}, "monoai.tools.scrape_web_with_tavily": {"tf": 1}, "monoai.tools.scrape_web": {"tf": 1}, "monoai.tools.domain_whois.domain_whois": {"tf": 1}}, "df": 7}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1}, "monoai.agents.Agent.run": {"tf": 1}, "monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}, "monoai.tools.scrape_web_with_tavily": {"tf": 1}, "monoai.tools.scrape_web": {"tf": 1}}, "df": 6}}}}}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"monoai.models": {"tf": 1}}, "df": 1}}}}, "f": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"monoai.agents.Agent.disable_streaming": {"tf": 1}, "monoai.tools.scrape_web_with_selenium": {"tf": 1}}, "df": 2}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"monoai": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"monoai.prompts.PromptChain": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}, "y": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"monoai": {"tf": 1}, "monoai.prompts.Prompt": {"tf": 1}, "monoai.prompts.IterativePrompt": {"tf": 1}}, "df": 3}}}}, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"monoai.observability": {"tf": 1}, "monoai.prompts.Prompt.__init__": {"tf": 1}}, "df": 2}}}}}}}, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"monoai": {"tf": 4.898979485566356}, "monoai.agents.Agent.__init__": {"tf": 1.7320508075688772}, "monoai.agents.Agent.run": {"tf": 2.6457513110645907}, "monoai.chat.Chat.__init__": {"tf": 2}, "monoai.chat.Chat.ask": {"tf": 1}, "monoai.chat.Chat.ask_stream": {"tf": 1}, "monoai.chat.Chat.ask_async": {"tf": 1}, "monoai.prompts": {"tf": 1.4142135623730951}, "monoai.prompts.Prompt": {"tf": 5.5677643628300215}, "monoai.prompts.Prompt.__init__": {"tf": 3.3166247903554}, "monoai.prompts.PromptChain": {"tf": 3.1622776601683795}, "monoai.prompts.PromptChain.__init__": {"tf": 2}, "monoai.prompts.IterativePrompt": {"tf": 3.7416573867739413}, "monoai.prompts.IterativePrompt.__init__": {"tf": 3.3166247903554}}, "df": 14, "s": {"docs": {"monoai": {"tf": 3}, "monoai.conf.Conf": {"tf": 1.7320508075688772}, "monoai.models": {"tf": 1}, "monoai.prompts": {"tf": 1}, "monoai.prompts.Prompt": {"tf": 1}, "monoai.prompts.PromptChain": {"tf": 2.449489742783178}, "monoai.prompts.PromptChain.__init__": {"tf": 1.7320508075688772}, "monoai.prompts.IterativePrompt": {"tf": 1}}, "df": 8}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"monoai.prompts.PromptChain": {"tf": 2.449489742783178}, "monoai.prompts.PromptChain.__init__": {"tf": 2}}, "df": 2}}}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"monoai": {"tf": 1}, "monoai.agents.Agent": {"tf": 1}, "monoai.observability": {"tf": 1}, "monoai.prompts": {"tf": 1}, "monoai.rag": {"tf": 1}, "monoai.rag.RAG": {"tf": 1}, "monoai.rag.ChromaVectorDB": {"tf": 1}, "monoai.rag.DocumentsBuilder": {"tf": 1}, "monoai.tools.scrape_web_with_tavily": {"tf": 1}}, "df": 9}, "r": {"docs": {"monoai": {"tf": 2.6457513110645907}, "monoai.chat.Chat": {"tf": 2.6457513110645907}, "monoai.chat.Chat.__init__": {"tf": 1.4142135623730951}, "monoai.conf.Conf": {"tf": 1}, "monoai.rag.RAG": {"tf": 2}, "monoai.rag.RAG.__init__": {"tf": 2.23606797749979}, "monoai.rag.ChromaVectorDB": {"tf": 1}, "monoai.rag.ChromaVectorDB.__init__": {"tf": 1.7320508075688772}}, "df": 8, "s": {"docs": {"monoai": {"tf": 2}, "monoai.rag": {"tf": 1}, "monoai.rag.RAG": {"tf": 1}}, "df": 3}}, "d": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1}, "monoai.agents.Agent.enable_streaming": {"tf": 1}, "monoai.chat.Chat.__init__": {"tf": 1.4142135623730951}, "monoai.prompts": {"tf": 1}, "monoai.prompts.Prompt.__init__": {"tf": 1.4142135623730951}, "monoai.prompts.PromptChain.__init__": {"tf": 1.4142135623730951}, "monoai.prompts.IterativePrompt.__init__": {"tf": 1.4142135623730951}, "monoai.rag.RAG.__init__": {"tf": 1}, "monoai.rag.ChromaVectorDB.__init__": {"tf": 1}}, "df": 9}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"monoai.agents.Agent": {"tf": 1}}, "df": 1}}}}}}, "j": {"docs": {"monoai": {"tf": 1.4142135623730951}}, "df": 1, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"monoai.observability": {"tf": 1}}, "df": 1}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"monoai.agents.Agent": {"tf": 1}, "monoai.agents.Agent.__init__": {"tf": 1.4142135623730951}, "monoai.conf.Conf": {"tf": 1}}, "df": 3, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"monoai.conf.Conf": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"monoai.prompts.IterativePrompt": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"monoai.agents.Agent.run": {"tf": 1.4142135623730951}, "monoai.rag.DocumentsBuilder.from_str": {"tf": 1}}, "df": 2, "e": {"docs": {}, "df": 0, "s": {"docs": {"monoai.agents.Agent.run": {"tf": 1}}, "df": 1}, "d": {"docs": {"monoai.agents.Agent.run": {"tf": 1}, "monoai.rag.RAG.query": {"tf": 1}}, "df": 2}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"monoai.agents.Agent.enable_streaming": {"tf": 1}, "monoai.rag.DocumentsBuilder": {"tf": 1}}, "df": 2}}}}}}}, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"monoai.observability": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"monoai.rag.DocumentsBuilder": {"tf": 1}}, "df": 1}}}}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1}, "monoai.agents.Agent.run": {"tf": 1}}, "df": 2}}}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"monoai.prompts.IterativePrompt": {"tf": 2.23606797749979}, "monoai.prompts.IterativePrompt.__init__": {"tf": 1}}, "df": 2}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"monoai.rag.DocumentsBuilder": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"monoai.chat.Chat": {"tf": 1.7320508075688772}, "monoai.rag.RAG.query": {"tf": 2.449489742783178}, "monoai.rag.ChromaVectorDB.query": {"tf": 2.23606797749979}}, "df": 3, "s": {"docs": {"monoai.agents.Agent.enable_streaming": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"monoai": {"tf": 1}, "monoai.agents.Agent.enable_streaming": {"tf": 1}, "monoai.prompts.Prompt": {"tf": 1}}, "df": 3}}, "n": {"docs": {"monoai.agents.Agent": {"tf": 1.4142135623730951}, "monoai.agents.Agent.__init__": {"tf": 1.4142135623730951}, "monoai.agents.Agent.run": {"tf": 1}}, "df": 3, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"monoai.agents.Agent": {"tf": 1}, "monoai.agents.Agent.run": {"tf": 1}}, "df": 2}}}}}, "t": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"monoai.observability": {"tf": 1.7320508075688772}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"monoai.prompts.IterativePrompt.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"monoai.observability": {"tf": 1}, "monoai.tools.scrape_web": {"tf": 1}}, "df": 2, "s": {"docs": {"monoai": {"tf": 1}, "monoai.agents.Agent.__init__": {"tf": 1.4142135623730951}, "monoai.agents.Agent.run": {"tf": 1}, "monoai.agents.Agent.enable_streaming": {"tf": 1}, "monoai.chat.Chat.__init__": {"tf": 1.4142135623730951}, "monoai.chat.Chat.ask": {"tf": 1.4142135623730951}, "monoai.chat.Chat.ask_stream": {"tf": 1.4142135623730951}, "monoai.chat.Chat.ask_async": {"tf": 1.4142135623730951}, "monoai.prompts.Prompt.__init__": {"tf": 1}, "monoai.prompts.PromptChain.__init__": {"tf": 1}, "monoai.prompts.IterativePrompt.__init__": {"tf": 1}, "monoai.rag.RAG.__init__": {"tf": 1}, "monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB.__init__": {"tf": 1}, "monoai.rag.ChromaVectorDB.add": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}, "monoai.rag.DocumentsBuilder": {"tf": 1}, "monoai.rag.DocumentsBuilder.__init__": {"tf": 1}}, "df": 18}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "m": {"docs": {"monoai.agents.Agent": {"tf": 1.4142135623730951}, "monoai.agents.Agent.__init__": {"tf": 2.8284271247461903}, "monoai.agents.Agent.run": {"tf": 2}, "monoai.agents.Agent.enable_streaming": {"tf": 1}, "monoai.agents.Agent.disable_streaming": {"tf": 1}}, "df": 5, "s": {"docs": {"monoai.agents.Agent": {"tf": 1.7320508075688772}, "monoai.agents.Agent.run": {"tf": 1}}, "df": 2}}}}}, "g": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "h": {"docs": {"monoai.rag.DocumentsBuilder": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {"monoai": {"tf": 2.23606797749979}, "monoai.chat.Chat.__init__": {"tf": 1.4142135623730951}, "monoai.chat.Chat.ask": {"tf": 1}, "monoai.conf.Conf": {"tf": 1.4142135623730951}}, "df": 4}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"monoai.agents.Agent": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"monoai.chat.Chat": {"tf": 1}, "monoai.chat.Chat.ask": {"tf": 1}, "monoai.chat.Chat.ask_stream": {"tf": 1}, "monoai.chat.Chat.ask_async": {"tf": 1}, "monoai.observability": {"tf": 1}}, "df": 5, "e": {"docs": {}, "df": 0, "d": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1}}, "df": 1}}}}, "c": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"monoai.models": {"tf": 1}}, "df": 1}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"monoai.rag.ChromaVectorDB.add": {"tf": 1}}, "df": 1, "s": {"docs": {"monoai.rag.RAG.__init__": {"tf": 1}, "monoai.rag.ChromaVectorDB": {"tf": 1}}, "df": 2}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"monoai.rag.ChromaVectorDB.add": {"tf": 1}}, "df": 1}}}, "g": {"docs": {}, "df": 0, "e": {"docs": {"monoai.tools.scrape_web_with_requests": {"tf": 1.4142135623730951}, "monoai.tools.scrape_web_with_selenium": {"tf": 1.4142135623730951}, "monoai.tools.scrape_web_with_tavily": {"tf": 1}, "monoai.tools.scrape_web": {"tf": 1.4142135623730951}}, "df": 4, "s": {"docs": {"monoai.rag.DocumentsBuilder": {"tf": 1}}, "df": 1}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"monoai.agents.Agent.run": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "p": {"docs": {"monoai.observability": {"tf": 1.7320508075688772}}, "df": 1}}, "u": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"monoai.observability": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {"monoai.rag.RAG": {"tf": 1}, "monoai.rag.RAG.query": {"tf": 1}}, "df": 2, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"monoai.rag": {"tf": 1}, "monoai.rag.RAG": {"tf": 1}}, "df": 2}}}, "s": {"docs": {"monoai.rag.ChromaVectorDB.query": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"monoai.rag.ChromaVectorDB": {"tf": 1.4142135623730951}}, "df": 1, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"monoai.rag.ChromaVectorDB": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}, "d": {"docs": {}, "df": 0, "f": {"docs": {"monoai.rag.DocumentsBuilder": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_pdf": {"tf": 1}}, "df": 2}}}, "m": {"docs": {"monoai.chat.Chat": {"tf": 2}}, "df": 1, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {"monoai": {"tf": 4}, "monoai.conf.Conf": {"tf": 1}, "monoai.models": {"tf": 1}, "monoai.observability": {"tf": 1.7320508075688772}, "monoai.tools": {"tf": 1}}, "df": 5}}}, "g": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "b": {"docs": {"monoai.chat.Chat.__init__": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"monoai.observability": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {"monoai.tools.scrape_web_with_selenium": {"tf": 1}, "monoai.tools.scrape_web_with_tavily": {"tf": 1}, "monoai.tools.scrape_web": {"tf": 1}}, "df": 3, "l": {"docs": {"monoai": {"tf": 5.916079783099616}, "monoai.agents.Agent.__init__": {"tf": 2}, "monoai.agents.Agent.disable_streaming": {"tf": 1}, "monoai.chat.Chat": {"tf": 2.6457513110645907}, "monoai.chat.Chat.__init__": {"tf": 2.23606797749979}, "monoai.chat.Chat.ask": {"tf": 2}, "monoai.chat.Chat.ask_stream": {"tf": 1.7320508075688772}, "monoai.chat.Chat.ask_async": {"tf": 1.7320508075688772}, "monoai.conf.Conf": {"tf": 1.7320508075688772}, "monoai.observability": {"tf": 1.4142135623730951}, "monoai.rag.RAG": {"tf": 2.6457513110645907}, "monoai.rag.RAG.__init__": {"tf": 1.4142135623730951}, "monoai.rag.ChromaVectorDB": {"tf": 1.4142135623730951}, "monoai.rag.ChromaVectorDB.__init__": {"tf": 1.7320508075688772}, "monoai.rag.ChromaVectorDB.add": {"tf": 1.4142135623730951}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}}, "df": 16, "s": {"docs": {"monoai": {"tf": 3.4641016151377544}, "monoai.models": {"tf": 1}, "monoai.rag.ChromaVectorDB": {"tf": 1}}, "df": 3}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"monoai.chat": {"tf": 1}, "monoai.models": {"tf": 1}, "monoai.prompts": {"tf": 1}, "monoai.rag": {"tf": 1}}, "df": 4}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"monoai": {"tf": 1}, "monoai.rag.RAG.query": {"tf": 1.7320508075688772}, "monoai.rag.ChromaVectorDB.query": {"tf": 1.4142135623730951}}, "df": 3}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"monoai.rag.RAG": {"tf": 1}, "monoai.rag.RAG.__init__": {"tf": 1}, "monoai.rag.RAG.query": {"tf": 1.7320508075688772}, "monoai.rag.ChromaVectorDB.query": {"tf": 1.7320508075688772}}, "df": 4}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {"monoai": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"monoai": {"tf": 2}, "monoai.observability": {"tf": 1}, "monoai.rag": {"tf": 1}, "monoai.rag.RAG": {"tf": 1}, "monoai.rag.ChromaVectorDB.add": {"tf": 1}, "monoai.rag.DocumentsBuilder": {"tf": 1.4142135623730951}}, "df": 6}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"monoai": {"tf": 1.7320508075688772}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1}, "monoai.rag.ChromaVectorDB.add": {"tf": 1.7320508075688772}}, "df": 2}}}, "e": {"docs": {"monoai.chat.Chat": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {"monoai": {"tf": 1}, "monoai.agents.Agent.run": {"tf": 1.4142135623730951}, "monoai.agents.Agent.disable_streaming": {"tf": 1}, "monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB.add": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}}, "df": 6, "s": {"docs": {"monoai.rag.DocumentsBuilder": {"tf": 1}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"monoai": {"tf": 1.4142135623730951}, "monoai.chat.Chat": {"tf": 2.23606797749979}, "monoai.chat.Chat.ask": {"tf": 1.4142135623730951}, "monoai.chat.Chat.ask_stream": {"tf": 1.4142135623730951}, "monoai.chat.Chat.ask_async": {"tf": 1.4142135623730951}, "monoai.observability": {"tf": 2.23606797749979}, "monoai.rag.RAG.query": {"tf": 2}, "monoai.rag.ChromaVectorDB": {"tf": 1}, "monoai.rag.ChromaVectorDB.add": {"tf": 2.23606797749979}, "monoai.rag.ChromaVectorDB.query": {"tf": 2}, "monoai.rag.DocumentsBuilder": {"tf": 1.4142135623730951}}, "df": 11, "s": {"docs": {"monoai.rag.RAG.query": {"tf": 1.4142135623730951}, "monoai.rag.ChromaVectorDB": {"tf": 1.4142135623730951}, "monoai.rag.ChromaVectorDB.add": {"tf": 2}, "monoai.rag.ChromaVectorDB.query": {"tf": 1.4142135623730951}}, "df": 4}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"monoai.chat.Chat.ask": {"tf": 1}, "monoai.chat.Chat.ask_stream": {"tf": 1}, "monoai.chat.Chat.ask_async": {"tf": 1}}, "df": 3, "s": {"docs": {"monoai.chat": {"tf": 1}, "monoai.chat.Chat": {"tf": 1}, "monoai.chat.Chat.__init__": {"tf": 1}}, "df": 3}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"monoai.chat.Chat": {"tf": 1}, "monoai.prompts.IterativePrompt": {"tf": 2.449489742783178}, "monoai.prompts.IterativePrompt.__init__": {"tf": 1.7320508075688772}, "monoai.rag.DocumentsBuilder": {"tf": 1}}, "df": 4}}}}, "r": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"monoai.tools.scrape_web": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"monoai": {"tf": 1.4142135623730951}}, "df": 1}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"monoai.rag.DocumentsBuilder": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"monoai.conf.Conf": {"tf": 1}}, "df": 1}}}}}}, "x": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1}, "monoai.chat.Chat": {"tf": 1}, "monoai.chat.Chat.__init__": {"tf": 1.4142135623730951}}, "df": 3, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1}, "monoai.chat.Chat.__init__": {"tf": 1.4142135623730951}, "monoai.rag.DocumentsBuilder": {"tf": 1}, "monoai.tools.scrape_web_with_selenium": {"tf": 1}}, "df": 4}}}}}, "y": {"docs": {"monoai.agents.Agent.run": {"tf": 1.4142135623730951}, "monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_url": {"tf": 1.4142135623730951}}, "df": 4}, "t": {"docs": {}, "df": 0, "h": {"docs": {"monoai.prompts.Prompt": {"tf": 1.4142135623730951}}, "df": 1}, "c": {"docs": {}, "df": 0, "h": {"docs": {"monoai.rag.ChromaVectorDB.add": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"monoai.rag.RAG": {"tf": 1}, "monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB.add": {"tf": 1.4142135623730951}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}}, "df": 4}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {"monoai": {"tf": 1}, "monoai.chat.Chat": {"tf": 2.6457513110645907}, "monoai.conf.Conf": {"tf": 1}, "monoai.rag.RAG": {"tf": 1}}, "df": 4, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"monoai.rag.RAG.__init__": {"tf": 1}}, "df": 1}}}}}}, "y": {"docs": {"monoai.chat.Chat": {"tf": 1.4142135623730951}, "monoai.rag.RAG": {"tf": 2}, "monoai.rag.RAG.__init__": {"tf": 1}, "monoai.rag.ChromaVectorDB": {"tf": 1}, "monoai.rag.ChromaVectorDB.__init__": {"tf": 1}}, "df": 5}}, "i": {"docs": {"monoai.chat.Chat": {"tf": 2}, "monoai.rag.RAG.query": {"tf": 1.4142135623730951}, "monoai.rag.ChromaVectorDB.query": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"monoai": {"tf": 3.1622776601683795}, "monoai.agents.Agent.__init__": {"tf": 2.8284271247461903}, "monoai.agents.Agent.enable_streaming": {"tf": 1}, "monoai.chat": {"tf": 1}, "monoai.chat.Chat": {"tf": 1.7320508075688772}, "monoai.chat.Chat.ask": {"tf": 1}, "monoai.observability": {"tf": 1}, "monoai.prompts.Prompt": {"tf": 2}, "monoai.prompts.Prompt.__init__": {"tf": 1.4142135623730951}, "monoai.prompts.PromptChain": {"tf": 2.23606797749979}, "monoai.prompts.PromptChain.__init__": {"tf": 1.4142135623730951}, "monoai.prompts.IterativePrompt": {"tf": 2}, "monoai.prompts.IterativePrompt.__init__": {"tf": 1.7320508075688772}, "monoai.rag": {"tf": 1}, "monoai.rag.RAG": {"tf": 1}, "monoai.rag.RAG.__init__": {"tf": 1}, "monoai.rag.RAG.query": {"tf": 1.4142135623730951}, "monoai.rag.ChromaVectorDB": {"tf": 1}, "monoai.rag.ChromaVectorDB.add": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1.4142135623730951}, "monoai.rag.DocumentsBuilder": {"tf": 1}, "monoai.tools": {"tf": 1}, "monoai.tools.scrape_web_with_selenium": {"tf": 1.4142135623730951}, "monoai.tools.scrape_web_with_tavily": {"tf": 1}, "monoai.tools.scrape_web": {"tf": 2}}, "df": 25}, "n": {"docs": {"monoai": {"tf": 2}, "monoai.chat.Chat": {"tf": 1.4142135623730951}, "monoai.chat.Chat.__init__": {"tf": 1}, "monoai.conf.Conf": {"tf": 1.4142135623730951}, "monoai.observability": {"tf": 1.7320508075688772}, "monoai.prompts": {"tf": 1}, "monoai.prompts.Prompt": {"tf": 1}, "monoai.prompts.IterativePrompt.__init__": {"tf": 1}, "monoai.rag.RAG.query": {"tf": 1.7320508075688772}, "monoai.rag.ChromaVectorDB.query": {"tf": 2}, "monoai.rag.DocumentsBuilder": {"tf": 1.7320508075688772}, "monoai.tools": {"tf": 1.4142135623730951}, "monoai.tools.scrape_web_with_selenium": {"tf": 1.4142135623730951}}, "df": 13, "t": {"docs": {"monoai": {"tf": 1.7320508075688772}, "monoai.agents.Agent.__init__": {"tf": 1}, "monoai.chat.Chat.__init__": {"tf": 1.7320508075688772}, "monoai.prompts.Prompt": {"tf": 1.7320508075688772}, "monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}, "monoai.rag.DocumentsBuilder": {"tf": 1.4142135623730951}}, "df": 7, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"monoai": {"tf": 1}, "monoai.observability": {"tf": 1}}, "df": 2}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"monoai": {"tf": 1}}, "df": 1}}}}}}, "f": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"monoai": {"tf": 1}, "monoai.agents.Agent": {"tf": 1}, "monoai.chat": {"tf": 1}, "monoai.chat.Chat": {"tf": 1}, "monoai.rag": {"tf": 1}, "monoai.rag.RAG": {"tf": 1}, "monoai.rag.ChromaVectorDB": {"tf": 1}}, "df": 7, "s": {"docs": {"monoai": {"tf": 1}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"monoai": {"tf": 1}, "monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB.add": {"tf": 1}}, "df": 3}}}}}}}}}, "o": {"docs": {"monoai.rag.RAG": {"tf": 1}, "monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.DocumentsBuilder": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_file": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_str": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_doc": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_pdf": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_url": {"tf": 1}, "monoai.tools.scrape_web": {"tf": 1}}, "df": 9}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"monoai": {"tf": 1.4142135623730951}}, "df": 1}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1.4142135623730951}, "monoai.chat.Chat.__init__": {"tf": 1.4142135623730951}, "monoai.conf.Conf.__init__": {"tf": 1.4142135623730951}, "monoai.prompts.Prompt.__init__": {"tf": 1}, "monoai.prompts.PromptChain.__init__": {"tf": 1}, "monoai.prompts.IterativePrompt.__init__": {"tf": 1}, "monoai.rag.ChromaVectorDB": {"tf": 1}}, "df": 7}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"monoai.observability": {"tf": 1.7320508075688772}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"monoai.rag.DocumentsBuilder.from_url": {"tf": 1}}, "df": 1}}}}}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"monoai": {"tf": 1}}, "df": 1}}}}}}}}, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"monoai": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"monoai.agents.Agent.run": {"tf": 1}, "monoai.chat.Chat.get_chat_info": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1}, "monoai.chat.Chat.__init__": {"tf": 1}, "monoai.prompts.Prompt.__init__": {"tf": 1}, "monoai.prompts.PromptChain.__init__": {"tf": 1}, "monoai.prompts.IterativePrompt.__init__": {"tf": 1}, "monoai.rag.RAG": {"tf": 1.4142135623730951}, "monoai.rag.RAG.__init__": {"tf": 1}, "monoai.rag.ChromaVectorDB": {"tf": 1.4142135623730951}, "monoai.rag.ChromaVectorDB.__init__": {"tf": 1}, "monoai.rag.DocumentsBuilder.__init__": {"tf": 1}}, "df": 10, "d": {"docs": {"monoai.prompts.Prompt": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"monoai.agents.Agent.run": {"tf": 1}, "monoai.chat.Chat.__init__": {"tf": 1}, "monoai.rag.RAG.__init__": {"tf": 1}}, "df": 3}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1}, "monoai.chat.Chat.__init__": {"tf": 1}, "monoai.chat.Chat.ask": {"tf": 1}, "monoai.chat.Chat.ask_stream": {"tf": 1}, "monoai.chat.Chat.ask_async": {"tf": 1}, "monoai.tools.scrape_web": {"tf": 1}}, "df": 6}}}}}, "c": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"monoai.agents.Agent.run": {"tf": 1}, "monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}}, "df": 3, "s": {"docs": {"monoai.agents.Agent.run": {"tf": 2}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"monoai.prompts.IterativePrompt.__init__": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"monoai.rag.RAG.query": {"tf": 1}}, "df": 1}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"monoai": {"tf": 2.8284271247461903}, "monoai.conf.Conf": {"tf": 1}, "monoai.models": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"monoai.models": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"monoai.models": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"monoai.agents.Agent": {"tf": 1}}, "df": 1}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"monoai.rag.ChromaVectorDB": {"tf": 1.4142135623730951}}, "df": 1, "s": {"docs": {"monoai.agents.Agent": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}, "t": {"docs": {"monoai.agents.Agent": {"tf": 1}, "monoai.agents.Agent.enable_streaming": {"tf": 1}, "monoai.chat.Chat.ask": {"tf": 1.4142135623730951}, "monoai.observability": {"tf": 1}, "monoai.prompts.Prompt": {"tf": 1}, "monoai.rag": {"tf": 1}, "monoai.rag.RAG": {"tf": 1}, "monoai.rag.RAG.__init__": {"tf": 1}, "monoai.rag.ChromaVectorDB": {"tf": 1}, "monoai.rag.ChromaVectorDB.__init__": {"tf": 1.4142135623730951}, "monoai.rag.DocumentsBuilder.from_file": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_str": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_url": {"tf": 1}, "monoai.tools": {"tf": 1}, "monoai.tools.scrape_web_with_requests": {"tf": 1}, "monoai.tools.scrape_web_with_selenium": {"tf": 1}}, "df": 16, "e": {"docs": {}, "df": 0, "r": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1}, "monoai.prompts.IterativePrompt": {"tf": 1.4142135623730951}, "monoai.prompts.IterativePrompt.__init__": {"tf": 1}}, "df": 3, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"monoai": {"tf": 1}}, "df": 1, "s": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1}, "monoai.agents.Agent.run": {"tf": 1.4142135623730951}, "monoai.prompts.IterativePrompt": {"tf": 1}, "monoai.prompts.IterativePrompt.__init__": {"tf": 1}}, "df": 4}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"monoai.prompts.IterativePrompt": {"tf": 2}}, "df": 1, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"monoai.prompts.IterativePrompt": {"tf": 2.23606797749979}, "monoai.prompts.IterativePrompt.__init__": {"tf": 1}}, "df": 2}}}}}}}}}, "e": {"docs": {"monoai.prompts.IterativePrompt": {"tf": 1}, "monoai.prompts.IterativePrompt.__init__": {"tf": 1}}, "df": 2}}}}, "m": {"docs": {}, "df": 0, "s": {"docs": {"monoai.prompts.IterativePrompt.__init__": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"monoai": {"tf": 1.7320508075688772}}, "df": 1}}}, "s": {"docs": {"monoai.prompts.PromptChain": {"tf": 1.4142135623730951}}, "df": 1}}, "d": {"docs": {"monoai": {"tf": 1}, "monoai.chat.Chat": {"tf": 2.449489742783178}, "monoai.chat.Chat.__init__": {"tf": 1.4142135623730951}, "monoai.observability": {"tf": 1.4142135623730951}, "monoai.prompts.Prompt": {"tf": 1}, "monoai.prompts.Prompt.__init__": {"tf": 1.7320508075688772}, "monoai.prompts.PromptChain": {"tf": 1}, "monoai.prompts.PromptChain.__init__": {"tf": 1.7320508075688772}, "monoai.prompts.IterativePrompt": {"tf": 1}, "monoai.prompts.IterativePrompt.__init__": {"tf": 1.7320508075688772}, "monoai.rag.RAG.query": {"tf": 1.7320508075688772}, "monoai.rag.ChromaVectorDB.query": {"tf": 1.7320508075688772}, "monoai.rag.DocumentsBuilder": {"tf": 1}}, "df": 13, "s": {"docs": {"monoai.rag.RAG.query": {"tf": 1.7320508075688772}, "monoai.rag.ChromaVectorDB": {"tf": 1.4142135623730951}, "monoai.rag.ChromaVectorDB.add": {"tf": 2.6457513110645907}, "monoai.rag.ChromaVectorDB.query": {"tf": 1.7320508075688772}}, "df": 4}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}}, "df": 2}}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"monoai.rag.ChromaVectorDB.add": {"tf": 1}}, "df": 1}}}}}}}}}}, "f": {"docs": {"monoai.agents.Agent.__init__": {"tf": 2}, "monoai.agents.Agent.run": {"tf": 1}, "monoai.agents.Agent.enable_streaming": {"tf": 1.4142135623730951}, "monoai.agents.Agent.disable_streaming": {"tf": 1}, "monoai.chat.Chat.__init__": {"tf": 1.4142135623730951}, "monoai.chat.Chat.ask": {"tf": 1.7320508075688772}, "monoai.chat.Chat.ask_stream": {"tf": 1}, "monoai.chat.Chat.ask_async": {"tf": 1}, "monoai.chat.Chat.clear_history": {"tf": 1}, "monoai.prompts.Prompt.__init__": {"tf": 1.4142135623730951}, "monoai.prompts.PromptChain.__init__": {"tf": 1.4142135623730951}, "monoai.prompts.IterativePrompt.__init__": {"tf": 1.7320508075688772}, "monoai.rag.RAG.__init__": {"tf": 2.23606797749979}, "monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB": {"tf": 1}, "monoai.rag.ChromaVectorDB.__init__": {"tf": 1.7320508075688772}, "monoai.rag.ChromaVectorDB.add": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}, "monoai.tools.scrape_web_with_requests": {"tf": 1}, "monoai.tools.scrape_web_with_selenium": {"tf": 1}, "monoai.tools.scrape_web_with_tavily": {"tf": 1}, "monoai.tools.scrape_web": {"tf": 1.7320508075688772}}, "df": 22}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"monoai": {"tf": 1}, "monoai.tools.scrape_web_with_requests": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "k": {"docs": {}, "df": 0, "e": {"docs": {"monoai": {"tf": 1}, "monoai.prompts": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "e": {"docs": {"monoai": {"tf": 1}}, "df": 1}}, "s": {"docs": {}, "df": 0, "t": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1.4142135623730951}, "monoai.agents.Agent.run": {"tf": 1}, "monoai.prompts.PromptChain.__init__": {"tf": 1.4142135623730951}, "monoai.rag.ChromaVectorDB.add": {"tf": 1.7320508075688772}}, "df": 4, "[": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"monoai.prompts.PromptChain.__init__": {"tf": 1}, "monoai.rag.ChromaVectorDB.add": {"tf": 1}}, "df": 2, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"monoai.chat.Chat.ask": {"tf": 1}}, "df": 1}}}}}}}}, "p": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"monoai.prompts.PromptChain.__init__": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"monoai.prompts.IterativePrompt.__init__": {"tf": 1}, "monoai.rag.ChromaVectorDB.add": {"tf": 1.4142135623730951}}, "df": 2}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"monoai.rag.RAG.query": {"tf": 1.4142135623730951}, "monoai.rag.ChromaVectorDB.query": {"tf": 1.4142135623730951}}, "df": 2}}}, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}}, "df": 2}}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}}, "df": 2}}}}}}}}}}}, "s": {"docs": {"monoai.rag.ChromaVectorDB.add": {"tf": 1}}, "df": 1}}}, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "m": {"docs": {"monoai.observability": {"tf": 1.4142135623730951}, "monoai.rag.ChromaVectorDB": {"tf": 1}}, "df": 2}}}}}, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {"monoai.tools.scrape_web_with_requests": {"tf": 1}}, "df": 1}}}}}}}}}}, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"monoai": {"tf": 1}}, "df": 1}}, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"monoai.observability": {"tf": 2.23606797749979}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "d": {"docs": {"monoai.chat.Chat": {"tf": 1}, "monoai.chat.Chat.__init__": {"tf": 1}, "monoai.prompts.Prompt": {"tf": 1}, "monoai.tools.scrape_web_with_selenium": {"tf": 1.4142135623730951}}, "df": 4, "s": {"docs": {"monoai": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"monoai.models": {"tf": 1}, "monoai.prompts.Prompt": {"tf": 1}, "monoai.prompts.Prompt.__init__": {"tf": 1}, "monoai.prompts.PromptChain.__init__": {"tf": 1}, "monoai.prompts.IterativePrompt.__init__": {"tf": 1}}, "df": 5}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"monoai.rag.RAG.__init__": {"tf": 1}}, "df": 1}}}}, "o": {"docs": {}, "df": 0, "p": {"docs": {"monoai.agents.Agent": {"tf": 1}, "monoai.agents.Agent.run": {"tf": 1}}, "df": 2}}, "w": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {"monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}}, "df": 2, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"monoai.rag.RAG.query": {"tf": 1}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"monoai.chat.Chat.ask": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"monoai.tools": {"tf": 2.449489742783178}}, "df": 1}}}}}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"monoai.prompts.IterativePrompt": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {"monoai": {"tf": 1.4142135623730951}, "monoai.prompts.Prompt": {"tf": 2.8284271247461903}, "monoai.prompts.PromptChain": {"tf": 2.449489742783178}, "monoai.prompts.IterativePrompt": {"tf": 2.449489742783178}}, "df": 4}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {"monoai.agents.Agent": {"tf": 1}, "monoai.agents.Agent.__init__": {"tf": 1}, "monoai.rag": {"tf": 1}, "monoai.rag.RAG": {"tf": 1}}, "df": 4}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"monoai.rag.RAG": {"tf": 1}, "monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB.add": {"tf": 2}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}}, "df": 4}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {"monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}}, "df": 2}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"monoai.rag.ChromaVectorDB.add": {"tf": 1}}, "df": 1, "s": {"docs": {"monoai.rag.ChromaVectorDB.add": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {"monoai.tools": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"monoai.chat.Chat.__init__": {"tf": 1.4142135623730951}, "monoai.prompts.IterativePrompt.__init__": {"tf": 1}}, "df": 2}}, "z": {"docs": {}, "df": 0, "y": {"docs": {"monoai.models": {"tf": 1}}, "df": 1}}, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"monoai.observability": {"tf": 2.6457513110645907}}, "df": 1}}}}, "s": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"monoai.observability": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"monoai.observability": {"tf": 1}}, "df": 1}}}}}}}, "y": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"monoai.rag.ChromaVectorDB.add": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "m": {"docs": {"monoai.observability": {"tf": 1.7320508075688772}}, "df": 1}}}, "e": {"9": {"docs": {}, "df": 0, "a": {"0": {"docs": {"monoai.chat.Chat": {"tf": 1.7320508075688772}}, "df": 1}, "docs": {}, "df": 0}}, "docs": {"monoai.rag.RAG.__init__": {"tf": 1}}, "df": 1, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1}, "monoai.agents.Agent.enable_streaming": {"tf": 1}}, "df": 2, "s": {"docs": {"monoai": {"tf": 1}}, "df": 1}, "d": {"docs": {"monoai.agents.Agent.enable_streaming": {"tf": 1}}, "df": 1}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"monoai": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"monoai.observability": {"tf": 1}}, "df": 1}}}}}}}}}, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "h": {"docs": {"monoai.rag.RAG.__init__": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"monoai.rag.DocumentsBuilder": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_url": {"tf": 1}, "monoai.tools.scrape_web": {"tf": 2.23606797749979}}, "df": 3}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}}, "df": 2}}}}}}}, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"monoai.rag.DocumentsBuilder": {"tf": 1}}, "df": 1}}}}}}}, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"monoai": {"tf": 1}, "monoai.rag.ChromaVectorDB": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"monoai": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {"monoai.tools": {"tf": 1}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {"monoai": {"tf": 1}}, "df": 1, "c": {"docs": {}, "df": 0, "t": {"docs": {"monoai.rag.DocumentsBuilder": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_doc": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_pdf": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"monoai.rag.DocumentsBuilder": {"tf": 1.7320508075688772}, "monoai.tools.scrape_web_with_tavily": {"tf": 1.7320508075688772}, "monoai.tools.scrape_web": {"tf": 1}}, "df": 3}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"monoai.tools.scrape_web_with_requests": {"tf": 1}, "monoai.tools.scrape_web_with_selenium": {"tf": 1}, "monoai.tools.scrape_web_with_tavily": {"tf": 1}}, "df": 3}}}}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"monoai": {"tf": 2}, "monoai.prompts.PromptChain": {"tf": 1}, "monoai.prompts.IterativePrompt": {"tf": 1}, "monoai.tools": {"tf": 1}}, "df": 4, "s": {"docs": {"monoai.chat.Chat": {"tf": 1}, "monoai.conf.Conf": {"tf": 1}, "monoai.prompts.Prompt": {"tf": 1}, "monoai.prompts.PromptChain": {"tf": 1}, "monoai.prompts.IterativePrompt": {"tf": 1}, "monoai.rag.RAG": {"tf": 1}, "monoai.rag.RAG.__init__": {"tf": 1.4142135623730951}, "monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB": {"tf": 1}, "monoai.rag.ChromaVectorDB.__init__": {"tf": 1.7320508075688772}, "monoai.rag.ChromaVectorDB.add": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}}, "df": 12}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"monoai.agents.Agent.run": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"monoai.agents.Agent": {"tf": 1.4142135623730951}, "monoai.agents.Agent.__init__": {"tf": 1.4142135623730951}, "monoai.agents.Agent.run": {"tf": 1.4142135623730951}}, "df": 3}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"monoai.agents.Agent": {"tf": 1.4142135623730951}, "monoai.agents.Agent.__init__": {"tf": 1.7320508075688772}, "monoai.agents.Agent.run": {"tf": 1.4142135623730951}, "monoai.agents.Agent.disable_streaming": {"tf": 1}, "monoai.tools.scrape_web_with_selenium": {"tf": 1.4142135623730951}}, "df": 5}}, "n": {"docs": {}, "df": 0, "g": {"docs": {"monoai.models": {"tf": 1}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"monoai.prompts.Prompt.__init__": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"monoai.rag.RAG": {"tf": 1}}, "df": 1}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"monoai.rag.RAG.__init__": {"tf": 1}, "monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB": {"tf": 1}, "monoai.rag.ChromaVectorDB.__init__": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}}, "df": 5, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"monoai.rag.ChromaVectorDB.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"monoai.tools.scrape_web_with_selenium": {"tf": 1}, "monoai.tools.scrape_web_with_tavily": {"tf": 1}}, "df": 2}}}}}}}}, "a": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"monoai": {"tf": 1}, "monoai.agents.Agent.__init__": {"tf": 1}, "monoai.agents.Agent.enable_streaming": {"tf": 1}, "monoai.chat.Chat.__init__": {"tf": 1}, "monoai.prompts.PromptChain.__init__": {"tf": 1}, "monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB": {"tf": 1}, "monoai.rag.ChromaVectorDB.add": {"tf": 2}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}, "monoai.rag.DocumentsBuilder": {"tf": 1.4142135623730951}}, "df": 10}}, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"monoai.tools": {"tf": 1}}, "df": 1}}}}}, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"monoai.observability": {"tf": 1}}, "df": 1}}}}}}}}}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"monoai.prompts.Prompt": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"monoai.rag.RAG.__init__": {"tf": 1}}, "df": 1, "d": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"monoai.rag": {"tf": 1}, "monoai.rag.RAG": {"tf": 2.23606797749979}, "monoai.rag.RAG.__init__": {"tf": 2.6457513110645907}, "monoai.rag.RAG.query": {"tf": 1.4142135623730951}, "monoai.rag.ChromaVectorDB": {"tf": 2}, "monoai.rag.ChromaVectorDB.__init__": {"tf": 2.23606797749979}, "monoai.rag.ChromaVectorDB.add": {"tf": 1.4142135623730951}, "monoai.rag.ChromaVectorDB.query": {"tf": 1.4142135623730951}}, "df": 8, "s": {"docs": {"monoai.rag.RAG": {"tf": 1.7320508075688772}, "monoai.rag.RAG.__init__": {"tf": 1.4142135623730951}, "monoai.rag.ChromaVectorDB": {"tf": 1.4142135623730951}, "monoai.rag.ChromaVectorDB.__init__": {"tf": 1}, "monoai.rag.ChromaVectorDB.add": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}}, "df": 6}}}}, "e": {"docs": {}, "df": 0, "d": {"docs": {"monoai.rag.ChromaVectorDB.add": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}}, "df": 2}}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"monoai.tools.scrape_web_with_selenium": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {"monoai.agents.Agent.run": {"tf": 1}, "monoai.agents.Agent.enable_streaming": {"tf": 1.4142135623730951}, "monoai.chat.Chat": {"tf": 1.4142135623730951}, "monoai.chat.Chat.ask": {"tf": 1}, "monoai.observability": {"tf": 1.4142135623730951}, "monoai.prompts.Prompt": {"tf": 1}, "monoai.rag.RAG.__init__": {"tf": 1}, "monoai.tools.scrape_web_with_requests": {"tf": 1}, "monoai.tools.scrape_web_with_selenium": {"tf": 1}}, "df": 9, "t": {"docs": {}, "df": 0, "r": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1.7320508075688772}, "monoai.agents.Agent.run": {"tf": 1}, "monoai.chat.Chat.__init__": {"tf": 2.449489742783178}, "monoai.chat.Chat.ask": {"tf": 2}, "monoai.chat.Chat.ask_stream": {"tf": 2}, "monoai.chat.Chat.ask_async": {"tf": 2}, "monoai.prompts.Prompt": {"tf": 1}, "monoai.prompts.Prompt.__init__": {"tf": 1.4142135623730951}, "monoai.prompts.PromptChain.__init__": {"tf": 1}, "monoai.prompts.IterativePrompt.__init__": {"tf": 1.7320508075688772}, "monoai.rag.RAG": {"tf": 1.4142135623730951}, "monoai.rag.RAG.__init__": {"tf": 2}, "monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB.__init__": {"tf": 1.7320508075688772}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}, "monoai.rag.DocumentsBuilder": {"tf": 1}, "monoai.tools": {"tf": 1}}, "df": 17, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"monoai.agents.Agent.run": {"tf": 1}, "monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}}, "df": 3, "d": {"docs": {"monoai": {"tf": 1}, "monoai.agents.Agent.run": {"tf": 1}, "monoai.prompts.IterativePrompt": {"tf": 1}, "monoai.tools.scrape_web_with_tavily": {"tf": 1}}, "df": 4}}}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {"monoai.agents.Agent.enable_streaming": {"tf": 1}, "monoai.chat.Chat": {"tf": 1}, "monoai.chat.Chat.ask_stream": {"tf": 1}, "monoai.chat.Chat.ask_async": {"tf": 1}}, "df": 4, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"monoai.agents.Agent": {"tf": 1}, "monoai.agents.Agent.enable_streaming": {"tf": 2}, "monoai.agents.Agent.disable_streaming": {"tf": 1.7320508075688772}, "monoai.chat.Chat": {"tf": 1}, "monoai.chat.Chat.ask_stream": {"tf": 1}}, "df": 5}}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"monoai.agents.Agent.run": {"tf": 1}, "monoai.chat.Chat.ask": {"tf": 1}, "monoai.chat.Chat.ask_stream": {"tf": 1}, "monoai.prompts": {"tf": 1}, "monoai.prompts.Prompt": {"tf": 1.4142135623730951}, "monoai.rag.DocumentsBuilder": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_str": {"tf": 1}, "monoai.tools": {"tf": 1}, "monoai.tools.domain_whois": {"tf": 1}, "monoai.tools.scrape_web": {"tf": 1}, "monoai.tools.domain_whois.domain_whois": {"tf": 1}}, "df": 11, "s": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1}, "monoai.agents.Agent.enable_streaming": {"tf": 1}, "monoai.chat.Chat.ask_async": {"tf": 1}}, "df": 3}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"monoai.rag.DocumentsBuilder": {"tf": 1}}, "df": 1}}}, "y": {"docs": {"monoai.rag.DocumentsBuilder": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {"monoai": {"tf": 1}, "monoai.agents.Agent.__init__": {"tf": 1}, "monoai.agents.Agent.disable_streaming": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"monoai": {"tf": 1}}, "df": 1}}}}}}}}}, "r": {"docs": {}, "df": 0, "t": {"docs": {"monoai": {"tf": 1}}, "df": 1}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "s": {"docs": {"monoai.prompts.IterativePrompt": {"tf": 2}}, "df": 1}}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"monoai": {"tf": 1}}, "df": 1, "d": {"docs": {"monoai": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1.4142135623730951}}, "df": 2}}, "y": {"docs": {"monoai.chat.Chat": {"tf": 1.4142135623730951}}, "df": 1}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"monoai.rag.RAG.__init__": {"tf": 1}, "monoai.rag.ChromaVectorDB": {"tf": 1.7320508075688772}, "monoai.rag.DocumentsBuilder": {"tf": 1.4142135623730951}}, "df": 3}}}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {"monoai": {"tf": 1.7320508075688772}}, "df": 1}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"monoai.rag.DocumentsBuilder": {"tf": 1}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"monoai": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"monoai": {"tf": 1}}, "df": 1, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"monoai.agents.Agent": {"tf": 1}}, "df": 1}}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "m": {"docs": {"monoai.rag.DocumentsBuilder": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_url": {"tf": 1}, "monoai.tools.scrape_web_with_selenium": {"tf": 1.4142135623730951}, "monoai.tools.scrape_web": {"tf": 1}}, "df": 4}}}}}, "f": {"docs": {"monoai.agents.Agent": {"tf": 2.23606797749979}, "monoai.agents.Agent.__init__": {"tf": 2.23606797749979}}, "df": 2}}, "t": {"docs": {"monoai.conf.Conf": {"tf": 1}}, "df": 1, "u": {"docs": {}, "df": 0, "p": {"docs": {"monoai": {"tf": 1}, "monoai.observability": {"tf": 1}}, "df": 2}}, "s": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1}}, "df": 1}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "s": {"docs": {"monoai.rag.RAG": {"tf": 1}, "monoai.rag.RAG.__init__": {"tf": 1}}, "df": 2}}}}}}, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"monoai.agents.Agent": {"tf": 1.4142135623730951}, "monoai.agents.Agent.__init__": {"tf": 2}, "monoai.rag": {"tf": 1}, "monoai.rag.RAG": {"tf": 2}, "monoai.rag.RAG.query": {"tf": 1.7320508075688772}, "monoai.rag.ChromaVectorDB": {"tf": 2}, "monoai.rag.ChromaVectorDB.query": {"tf": 2.23606797749979}}, "df": 7, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"monoai.rag.RAG": {"tf": 1}}, "df": 1}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {"monoai.rag.RAG.query": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"monoai.rag.DocumentsBuilder": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"monoai.chat.Chat": {"tf": 1}, "monoai.observability": {"tf": 1}}, "df": 2}}}}}, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"monoai.observability": {"tf": 2.23606797749979}}, "df": 1}}}}}}, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {"monoai.observability": {"tf": 1.4142135623730951}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"monoai.tools.scrape_web_with_selenium": {"tf": 1}}, "df": 1}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"monoai.prompts.PromptChain": {"tf": 1}, "monoai.prompts.IterativePrompt": {"tf": 1}, "monoai.prompts.IterativePrompt.__init__": {"tf": 1}}, "df": 3, "s": {"docs": {"monoai.prompts.PromptChain": {"tf": 1}}, "df": 1}}}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"monoai.rag": {"tf": 1}, "monoai.rag.RAG": {"tf": 2}, "monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}, "monoai.rag.DocumentsBuilder": {"tf": 1}}, "df": 5, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"monoai.rag.RAG.query": {"tf": 1}}, "df": 1}}}}}}}}}}}, "u": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"monoai": {"tf": 1}}, "df": 1}}, "m": {"docs": {"monoai": {"tf": 1.7320508075688772}}, "df": 1, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"monoai.chat.Chat": {"tf": 2}, "monoai.chat.Chat.__init__": {"tf": 2.449489742783178}}, "df": 2}}}}}}}}, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {"monoai.agents.Agent.enable_streaming": {"tf": 1}, "monoai.agents.Agent.disable_streaming": {"tf": 1}, "monoai.observability": {"tf": 1.4142135623730951}, "monoai.rag.ChromaVectorDB": {"tf": 1}, "monoai.rag.DocumentsBuilder": {"tf": 1}}, "df": 5, "e": {"docs": {}, "df": 0, "d": {"docs": {"monoai": {"tf": 1}, "monoai.agents.Agent": {"tf": 1}, "monoai.agents.Agent.__init__": {"tf": 1}, "monoai.observability": {"tf": 1.4142135623730951}}, "df": 4}}, "s": {"docs": {"monoai.prompts.Prompt": {"tf": 1}, "monoai.rag": {"tf": 1}, "monoai.rag.RAG": {"tf": 1.4142135623730951}, "monoai.rag.RAG.__init__": {"tf": 1}, "monoai.rag.ChromaVectorDB": {"tf": 1}}, "df": 5}}}}}}, "b": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"monoai.agents.Agent.disable_streaming": {"tf": 1}}, "df": 1}}}}}, "t": {"docs": {"monoai.rag.ChromaVectorDB.add": {"tf": 1}}, "df": 1}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"monoai.prompts.IterativePrompt": {"tf": 1.4142135623730951}}, "df": 1}}, "n": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "y": {"docs": {"monoai.tools": {"tf": 1}}, "df": 1}}}}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "x": {"docs": {"monoai": {"tf": 1}}, "df": 1}}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"monoai.observability": {"tf": 1}}, "df": 1}}}}}}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {"monoai.chat.Chat.__init__": {"tf": 1.4142135623730951}, "monoai.rag.RAG": {"tf": 1.4142135623730951}, "monoai.rag.RAG.__init__": {"tf": 1.4142135623730951}, "monoai.rag.DocumentsBuilder": {"tf": 1}}, "df": 4}}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"monoai": {"tf": 1}, "monoai.tools.scrape_web": {"tf": 1}}, "df": 2, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"monoai.conf.Conf": {"tf": 1}, "monoai.conf.Conf.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}}}}}, "m": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"monoai": {"tf": 1}}, "df": 1}}}}}, "e": {"docs": {"monoai.prompts.Prompt": {"tf": 1.4142135623730951}, "monoai.tools": {"tf": 1}}, "df": 2}}}, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"monoai.rag.RAG": {"tf": 1}, "monoai.rag.RAG.query": {"tf": 2}, "monoai.rag.ChromaVectorDB": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 2.23606797749979}}, "df": 4, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"monoai.rag.RAG": {"tf": 1}, "monoai.rag.RAG.query": {"tf": 1.4142135623730951}, "monoai.rag.ChromaVectorDB": {"tf": 1.4142135623730951}, "monoai.rag.ChromaVectorDB.query": {"tf": 1.7320508075688772}}, "df": 4}}}}}}}}, "z": {"docs": {}, "df": 0, "e": {"docs": {"monoai.rag.DocumentsBuilder": {"tf": 2}, "monoai.rag.DocumentsBuilder.from_file": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_str": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_url": {"tf": 1}}, "df": 4}}}, "h": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {"monoai": {"tf": 1}, "monoai.agents.Agent.__init__": {"tf": 1}}, "df": 2}}}}}, "k": {"docs": {"monoai": {"tf": 1.4142135623730951}}, "df": 1}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"monoai": {"tf": 1}, "monoai.agents.Agent.__init__": {"tf": 1.4142135623730951}, "monoai.agents.Agent.run": {"tf": 1}, "monoai.rag.RAG.__init__": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_file": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_str": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_url": {"tf": 1}, "monoai.tools.scrape_web": {"tf": 1.4142135623730951}}, "df": 8}}, "c": {"docs": {"monoai.agents.Agent": {"tf": 1}, "monoai.agents.Agent.run": {"tf": 1.4142135623730951}, "monoai.rag.RAG": {"tf": 1}, "monoai.rag.RAG.__init__": {"tf": 1}, "monoai.rag.ChromaVectorDB": {"tf": 1}, "monoai.rag.ChromaVectorDB.__init__": {"tf": 1}}, "df": 6, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"monoai.prompts.Prompt": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {"monoai.rag.DocumentsBuilder": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_file": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_str": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_doc": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_pdf": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_url": {"tf": 1}}, "df": 6}}}}, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"monoai.agents.Agent.run": {"tf": 1}}, "df": 1}}}}}}}, "q": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"monoai.chat.Chat.__init__": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {"monoai.observability": {"tf": 1}, "monoai.rag.RAG": {"tf": 1}}, "df": 2, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"monoai.observability": {"tf": 1.4142135623730951}, "monoai.rag.ChromaVectorDB": {"tf": 1.7320508075688772}, "monoai.rag.ChromaVectorDB.add": {"tf": 1.4142135623730951}}, "df": 3, "s": {"docs": {"monoai.rag.DocumentsBuilder": {"tf": 1}}, "df": 1}}}}}, "m": {"docs": {}, "df": 0, "e": {"docs": {"monoai.rag.DocumentsBuilder.from_url": {"tf": 1}}, "df": 1}}}, "d": {"docs": {}, "df": 0, "k": {"docs": {"monoai.observability": {"tf": 1}}, "df": 1}}, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "a": {"docs": {"monoai.prompts.Prompt.__init__": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {"monoai.rag": {"tf": 1}, "monoai.rag.RAG": {"tf": 1}}, "df": 2}}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"monoai.rag.RAG.query": {"tf": 1.4142135623730951}, "monoai.rag.ChromaVectorDB.query": {"tf": 1.4142135623730951}}, "df": 2}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"monoai.rag.DocumentsBuilder": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_url": {"tf": 1.4142135623730951}, "monoai.tools.scrape_web_with_requests": {"tf": 1}, "monoai.tools.scrape_web_with_selenium": {"tf": 1}, "monoai.tools.scrape_web": {"tf": 1}}, "df": 5}}}, "e": {"docs": {"monoai.rag.DocumentsBuilder.from_url": {"tf": 1}, "monoai.tools.scrape_web_with_requests": {"tf": 1.4142135623730951}, "monoai.tools.scrape_web_with_selenium": {"tf": 1.4142135623730951}, "monoai.tools.scrape_web_with_tavily": {"tf": 1.4142135623730951}, "monoai.tools.scrape_web": {"tf": 1.4142135623730951}}, "df": 5}}}}}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {"monoai.rag.RAG.__init__": {"tf": 1.4142135623730951}, "monoai.rag.ChromaVectorDB.__init__": {"tf": 1}}, "df": 2}}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"monoai.rag.ChromaVectorDB.add": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}}, "df": 2}}}}, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {"monoai": {"tf": 2}, "monoai.agents.Agent": {"tf": 1.7320508075688772}, "monoai.agents.Agent.__init__": {"tf": 2.449489742783178}, "monoai.agents.Agent.run": {"tf": 1}, "monoai.agents.Agent.enable_streaming": {"tf": 1}, "monoai.chat.Chat": {"tf": 2.6457513110645907}, "monoai.observability": {"tf": 1.7320508075688772}, "monoai.prompts.Prompt": {"tf": 2.449489742783178}, "monoai.prompts.IterativePrompt": {"tf": 2.23606797749979}, "monoai.prompts.IterativePrompt.__init__": {"tf": 1}, "monoai.rag.RAG": {"tf": 2.23606797749979}, "monoai.rag.RAG.__init__": {"tf": 1.4142135623730951}, "monoai.rag.RAG.query": {"tf": 1.4142135623730951}, "monoai.rag.ChromaVectorDB": {"tf": 2}, "monoai.rag.ChromaVectorDB.__init__": {"tf": 1}, "monoai.rag.ChromaVectorDB.add": {"tf": 1.7320508075688772}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}, "monoai.rag.DocumentsBuilder": {"tf": 2.449489742783178}, "monoai.rag.DocumentsBuilder.__init__": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_file": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_str": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_url": {"tf": 1}, "monoai.tools": {"tf": 1}, "monoai.tools.scrape_web_with_tavily": {"tf": 1}}, "df": 24, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"monoai.prompts.Prompt": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {"monoai.rag.ChromaVectorDB.add": {"tf": 1.4142135623730951}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "l": {"docs": {"monoai.agents.Agent.enable_streaming": {"tf": 1}, "monoai.agents.Agent.disable_streaming": {"tf": 1}, "monoai.chat.Chat.__init__": {"tf": 1}, "monoai.chat.Chat.ask": {"tf": 1}, "monoai.rag.RAG.__init__": {"tf": 2}, "monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB.__init__": {"tf": 1}, "monoai.rag.ChromaVectorDB.add": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}}, "df": 9}}}, "a": {"docs": {}, "df": 0, "y": {"docs": {"monoai.conf.Conf": {"tf": 1}}, "df": 1, "s": {"docs": {"monoai": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "t": {"docs": {"monoai.tools.scrape_web_with_selenium": {"tf": 1.4142135623730951}}, "df": 1}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"monoai": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"monoai.agents.Agent": {"tf": 1}}, "df": 1}}}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {"monoai": {"tf": 2.6457513110645907}, "monoai.chat.Chat": {"tf": 1.4142135623730951}, "monoai.prompts.Prompt": {"tf": 2}, "monoai.prompts.PromptChain": {"tf": 2}, "monoai.rag.RAG": {"tf": 1}, "monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}}, "df": 7}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"monoai": {"tf": 1}}, "df": 1}}, "n": {"docs": {"monoai": {"tf": 1}, "monoai.agents.Agent.enable_streaming": {"tf": 1}, "monoai.models": {"tf": 1}}, "df": 3}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"monoai.chat.Chat.ask": {"tf": 1}, "monoai.tools.scrape_web_with_selenium": {"tf": 1}, "monoai.tools.scrape_web_with_tavily": {"tf": 1}, "monoai.tools.scrape_web": {"tf": 1}}, "df": 4}}}}}, "o": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {"monoai.tools.domain_whois": {"tf": 1}, "monoai.tools.domain_whois.domain_whois": {"tf": 1}}, "df": 2}}}}, "e": {"docs": {}, "df": 0, "b": {"docs": {"monoai.agents.Agent": {"tf": 1}, "monoai.agents.Agent.__init__": {"tf": 1.7320508075688772}, "monoai.rag.DocumentsBuilder": {"tf": 1.4142135623730951}, "monoai.tools.scrape_web_with_requests": {"tf": 1}}, "df": 4, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"monoai.rag.DocumentsBuilder.from_url": {"tf": 1}}, "df": 1, "s": {"docs": {"monoai.rag.DocumentsBuilder.from_url": {"tf": 1}, "monoai.tools.scrape_web_with_selenium": {"tf": 1}}, "df": 2}}}}}, "p": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"monoai.tools.scrape_web_with_requests": {"tf": 1}, "monoai.tools.scrape_web_with_selenium": {"tf": 1}, "monoai.tools.scrape_web_with_tavily": {"tf": 1}, "monoai.tools.scrape_web": {"tf": 1}}, "df": 4}}}}, "d": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"monoai.tools.scrape_web_with_selenium": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"monoai.tools": {"tf": 2.23606797749979}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {"monoai.rag.DocumentsBuilder": {"tf": 1}}, "df": 1, "s": {"docs": {"monoai.rag.RAG": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"monoai.rag.RAG": {"tf": 1}}, "df": 1}}}}, "d": {"docs": {"monoai.rag.DocumentsBuilder": {"tf": 1.4142135623730951}, "monoai.rag.DocumentsBuilder.from_doc": {"tf": 1}}, "df": 2}}}}, "h": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"monoai": {"tf": 1}}, "df": 1}}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"monoai": {"tf": 1}, "monoai.agents.Agent.enable_streaming": {"tf": 1}, "monoai.prompts.Prompt": {"tf": 1}, "monoai.tools.scrape_web_with_requests": {"tf": 1}, "monoai.tools.scrape_web_with_selenium": {"tf": 1}}, "df": 5, "s": {"docs": {"monoai.agents.Agent": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"monoai.chat": {"tf": 1}, "monoai.chat.Chat": {"tf": 1}, "monoai.prompts": {"tf": 1}, "monoai.prompts.PromptChain": {"tf": 1}, "monoai.prompts.IterativePrompt": {"tf": 1}}, "df": 5}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {"monoai.rag.ChromaVectorDB.add": {"tf": 1}}, "df": 1}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "h": {"docs": {"monoai.agents.Agent": {"tf": 1}, "monoai.agents.Agent.__init__": {"tf": 1}, "monoai.rag": {"tf": 1}, "monoai.rag.RAG": {"tf": 1}}, "df": 4, "e": {"docs": {}, "df": 0, "r": {"docs": {"monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}}, "df": 2}}}}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"monoai.chat": {"tf": 1}, "monoai.chat.Chat": {"tf": 3.605551275463989}, "monoai.chat.Chat.__init__": {"tf": 3.605551275463989}, "monoai.chat.Chat.ask": {"tf": 2}, "monoai.chat.Chat.clear_history": {"tf": 1.4142135623730951}}, "df": 5}}}}}}, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "o": {"docs": {"monoai.chat.Chat": {"tf": 2.6457513110645907}, "monoai.observability": {"tf": 1}, "monoai.prompts.Prompt": {"tf": 1.7320508075688772}}, "df": 3}}, "p": {"docs": {"monoai.observability": {"tf": 1}}, "df": 1}}, "r": {"docs": {}, "df": 0, "e": {"docs": {"monoai.conf.Conf": {"tf": 1}}, "df": 1}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "y": {"docs": {"monoai.models": {"tf": 1}}, "df": 1}}, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"monoai.tools.scrape_web_with_selenium": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "w": {"docs": {"monoai.observability": {"tf": 1}, "monoai.tools": {"tf": 1}}, "df": 2}}, "t": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"monoai.tools.scrape_web_with_requests": {"tf": 1.4142135623730951}, "monoai.tools.scrape_web_with_selenium": {"tf": 1.4142135623730951}, "monoai.tools.scrape_web_with_tavily": {"tf": 1.4142135623730951}, "monoai.tools.scrape_web": {"tf": 1.4142135623730951}}, "df": 4}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"monoai": {"tf": 1}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"monoai.agents.Agent.run": {"tf": 1}}, "df": 1}}}}}}}, "f": {"docs": {"monoai.chat.Chat": {"tf": 1}, "monoai.observability": {"tf": 1}, "monoai.tools": {"tf": 1}}, "df": 3, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {"monoai": {"tf": 1.4142135623730951}}, "df": 1, "d": {"docs": {"monoai.conf.Conf": {"tf": 1}}, "df": 1}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"monoai.tools": {"tf": 1}}, "df": 1}}}}}, "a": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"monoai": {"tf": 1.4142135623730951}, "monoai.agents.Agent.__init__": {"tf": 2.6457513110645907}, "monoai.agents.Agent.enable_streaming": {"tf": 1}, "monoai.rag.RAG": {"tf": 1}, "monoai.rag.RAG.__init__": {"tf": 2}, "monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}, "monoai.tools.scrape_web_with_selenium": {"tf": 1.4142135623730951}, "monoai.tools.scrape_web_with_tavily": {"tf": 1}, "monoai.tools.scrape_web": {"tf": 1.4142135623730951}}, "df": 10}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"monoai.rag.ChromaVectorDB.add": {"tf": 1.4142135623730951}, "monoai.tools.scrape_web_with_tavily": {"tf": 1}, "monoai.tools.scrape_web": {"tf": 1}}, "df": 3, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "k": {"docs": {"monoai": {"tf": 1.7320508075688772}}, "df": 1}}}}, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"monoai.observability": {"tf": 1}}, "df": 1}}}}}}, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"monoai": {"tf": 1}}, "df": 1}}}}}}}}, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"monoai.rag.DocumentsBuilder": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1}}, "df": 1, "d": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1}}, "df": 1}}}}}, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "g": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1.4142135623730951}, "monoai.observability": {"tf": 1}}, "df": 2, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"monoai.observability": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"monoai.agents.Agent.run": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"monoai.agents.Agent.run": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_url": {"tf": 1}}, "df": 2}}}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"monoai.models": {"tf": 1}, "monoai.observability": {"tf": 1.7320508075688772}}, "df": 2}}}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"monoai.rag": {"tf": 1}, "monoai.rag.RAG": {"tf": 1}}, "df": 2}}}}}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "s": {"docs": {"monoai.agents.Agent.run": {"tf": 1}}, "df": 1}}}}}}, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"monoai": {"tf": 1.4142135623730951}, "monoai.agents.Agent": {"tf": 1.4142135623730951}, "monoai.prompts": {"tf": 1}, "monoai.rag.RAG": {"tf": 1}}, "df": 4}}}}}}}, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"monoai.prompts.Prompt": {"tf": 1}, "monoai.prompts.Prompt.__init__": {"tf": 1}, "monoai.prompts.PromptChain.__init__": {"tf": 1}, "monoai.prompts.IterativePrompt.__init__": {"tf": 1}}, "df": 4, "l": {"docs": {}, "df": 0, "y": {"docs": {"monoai": {"tf": 1}, "monoai.rag.DocumentsBuilder": {"tf": 1}}, "df": 2}}, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"monoai": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"monoai.chat.Chat": {"tf": 1}, "monoai.chat.Chat.__init__": {"tf": 1.4142135623730951}, "monoai.prompts.Prompt.__init__": {"tf": 1}, "monoai.prompts.IterativePrompt.__init__": {"tf": 1}, "monoai.rag.ChromaVectorDB.add": {"tf": 1}}, "df": 5, "[": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {"monoai.agents.Agent.run": {"tf": 1}, "monoai.chat.Chat.ask": {"tf": 1}, "monoai.chat.Chat.ask_stream": {"tf": 1}, "monoai.chat.Chat.ask_async": {"tf": 1}, "monoai.chat.Chat.get_chat_info": {"tf": 1}, "monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}}, "df": 7}}}}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"monoai.chat.Chat": {"tf": 1}, "monoai.chat.Chat.get_chat_info": {"tf": 1}, "monoai.prompts.Prompt.__init__": {"tf": 1}, "monoai.prompts.IterativePrompt.__init__": {"tf": 1}, "monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}, "monoai.tools.scrape_web_with_requests": {"tf": 1}, "monoai.tools.scrape_web_with_selenium": {"tf": 1}, "monoai.tools.scrape_web_with_tavily": {"tf": 1}, "monoai.tools.scrape_web": {"tf": 1}}, "df": 10}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"monoai.prompts.PromptChain.__init__": {"tf": 1}, "monoai.rag.ChromaVectorDB.add": {"tf": 1}}, "df": 2}}}}}}}}}}, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "y": {"docs": {"monoai.agents.Agent.enable_streaming": {"tf": 1}}, "df": 1}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"monoai.tools.scrape_web": {"tf": 1}}, "df": 1}}}}}}}, "a": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"monoai.agents.Agent.disable_streaming": {"tf": 1}}, "df": 1}}}}, "t": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {"monoai.rag.RAG.query": {"tf": 1.7320508075688772}, "monoai.rag.ChromaVectorDB.query": {"tf": 1.7320508075688772}}, "df": 2, "s": {"docs": {"monoai.rag.RAG.query": {"tf": 1.7320508075688772}, "monoai.rag.ChromaVectorDB.query": {"tf": 1.7320508075688772}}, "df": 2}}}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1}, "monoai.agents.Agent.run": {"tf": 1}, "monoai.rag.ChromaVectorDB.add": {"tf": 1}}, "df": 3}}}}}, "o": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"monoai.rag.ChromaVectorDB.__init__": {"tf": 1}}, "df": 1, "n": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1}, "monoai.agents.Agent.enable_streaming": {"tf": 1}, "monoai.agents.Agent.disable_streaming": {"tf": 1}, "monoai.rag.RAG.__init__": {"tf": 1}, "monoai.rag.ChromaVectorDB": {"tf": 1}, "monoai.rag.ChromaVectorDB.__init__": {"tf": 1}, "monoai.tools.scrape_web_with_requests": {"tf": 1}, "monoai.tools.scrape_web_with_tavily": {"tf": 1}}, "df": 8}}}, "c": {"1": {"docs": {"monoai.rag.ChromaVectorDB": {"tf": 1}}, "df": 1}, "2": {"docs": {"monoai.rag.ChromaVectorDB": {"tf": 1}}, "df": 1}, "docs": {"monoai.rag.RAG.query": {"tf": 1.4142135623730951}, "monoai.rag.ChromaVectorDB.add": {"tf": 1.4142135623730951}, "monoai.rag.ChromaVectorDB.query": {"tf": 1.4142135623730951}, "monoai.rag.DocumentsBuilder": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_doc": {"tf": 1}}, "df": 5, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"monoai.rag.RAG": {"tf": 1.4142135623730951}, "monoai.rag.RAG.query": {"tf": 2.23606797749979}, "monoai.rag.ChromaVectorDB": {"tf": 2}, "monoai.rag.ChromaVectorDB.add": {"tf": 2}, "monoai.rag.ChromaVectorDB.query": {"tf": 2.449489742783178}, "monoai.rag.DocumentsBuilder": {"tf": 2.23606797749979}}, "df": 6, "s": {"docs": {"monoai.rag.RAG": {"tf": 2.23606797749979}, "monoai.rag.RAG.__init__": {"tf": 1}, "monoai.rag.RAG.query": {"tf": 3}, "monoai.rag.ChromaVectorDB": {"tf": 2.23606797749979}, "monoai.rag.ChromaVectorDB.__init__": {"tf": 1}, "monoai.rag.ChromaVectorDB.add": {"tf": 3.1622776601683795}, "monoai.rag.ChromaVectorDB.query": {"tf": 3.1622776601683795}, "monoai.rag.DocumentsBuilder.from_doc": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_pdf": {"tf": 1}}, "df": 9, "b": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"monoai.rag.DocumentsBuilder": {"tf": 1}, "monoai.rag.DocumentsBuilder.__init__": {"tf": 1}}, "df": 2}}}}}}}}}}}}}, "x": {"docs": {"monoai.rag.DocumentsBuilder": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_doc": {"tf": 1}}, "df": 2}, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"monoai.tools": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {"monoai.rag.ChromaVectorDB.add": {"tf": 1}}, "df": 1}, "m": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"monoai.tools.domain_whois": {"tf": 1.7320508075688772}, "monoai.tools.domain_whois.domain_whois": {"tf": 1.7320508075688772}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "a": {"docs": {"monoai.prompts.Prompt": {"tf": 2}, "monoai.prompts.Prompt.__init__": {"tf": 1}, "monoai.prompts.PromptChain": {"tf": 1}, "monoai.prompts.PromptChain.__init__": {"tf": 1.4142135623730951}, "monoai.prompts.IterativePrompt": {"tf": 3.872983346207417}, "monoai.prompts.IterativePrompt.__init__": {"tf": 2}, "monoai.rag.DocumentsBuilder": {"tf": 1}}, "df": 7, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"monoai.rag": {"tf": 1.4142135623730951}, "monoai.rag.RAG": {"tf": 3.1622776601683795}, "monoai.rag.RAG.__init__": {"tf": 2.23606797749979}, "monoai.rag.RAG.query": {"tf": 1.7320508075688772}, "monoai.rag.ChromaVectorDB": {"tf": 1.7320508075688772}, "monoai.rag.ChromaVectorDB.__init__": {"tf": 1}, "monoai.rag.ChromaVectorDB.add": {"tf": 1}, "monoai.rag.DocumentsBuilder": {"tf": 1.4142135623730951}}, "df": 8, "s": {"docs": {"monoai.rag.RAG": {"tf": 1}, "monoai.rag.DocumentsBuilder": {"tf": 1}}, "df": 2}, "/": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"monoai.rag.RAG.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}}}}}}}}}, "b": {"docs": {"monoai.rag.RAG": {"tf": 2}, "monoai.rag.RAG.__init__": {"tf": 1}, "monoai.rag.ChromaVectorDB": {"tf": 2}, "monoai.rag.ChromaVectorDB.__init__": {"tf": 1.4142135623730951}, "monoai.rag.ChromaVectorDB.add": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}}, "df": 6}, "y": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {"monoai.tools.scrape_web_with_selenium": {"tf": 1}}, "df": 1}}}}}}}, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"monoai.rag.DocumentsBuilder": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {"monoai": {"tf": 1.4142135623730951}}, "df": 1}}}}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"monoai": {"tf": 3.1622776601683795}, "monoai.agents.Agent.run": {"tf": 2.23606797749979}, "monoai.agents.Agent.enable_streaming": {"tf": 1}, "monoai.chat.Chat": {"tf": 2.8284271247461903}, "monoai.chat.Chat.ask": {"tf": 1.4142135623730951}, "monoai.chat.Chat.ask_stream": {"tf": 1.4142135623730951}, "monoai.chat.Chat.ask_async": {"tf": 1.4142135623730951}, "monoai.observability": {"tf": 1}, "monoai.prompts.Prompt": {"tf": 2.8284271247461903}, "monoai.prompts.Prompt.__init__": {"tf": 1.7320508075688772}, "monoai.prompts.IterativePrompt.__init__": {"tf": 1}}, "df": 11, "s": {"docs": {"monoai": {"tf": 1}, "monoai.agents.Agent.enable_streaming": {"tf": 1}, "monoai.agents.Agent.disable_streaming": {"tf": 1}, "monoai.models": {"tf": 1}, "monoai.prompts.IterativePrompt": {"tf": 1.4142135623730951}, "monoai.prompts.IterativePrompt.__init__": {"tf": 1}}, "df": 6}}, "i": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"monoai.chat": {"tf": 1}, "monoai.chat.Chat": {"tf": 1}, "monoai.models": {"tf": 1}}, "df": 3}}}}}}}}, "u": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "t": {"docs": {"monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}}, "df": 3, "s": {"docs": {"monoai.rag.RAG": {"tf": 1.4142135623730951}, "monoai.rag.RAG.query": {"tf": 3.3166247903554}, "monoai.rag.ChromaVectorDB": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 3}}, "df": 4}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "h": {"docs": {"monoai.rag.RAG.__init__": {"tf": 1}, "monoai.rag.ChromaVectorDB": {"tf": 1}, "monoai.rag.ChromaVectorDB.add": {"tf": 1}}, "df": 3}}}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {"monoai": {"tf": 1}, "monoai.chat.Chat": {"tf": 1}, "monoai.chat.Chat.__init__": {"tf": 1}, "monoai.chat.Chat.ask": {"tf": 1}, "monoai.chat.Chat.ask_stream": {"tf": 1}, "monoai.chat.Chat.ask_async": {"tf": 1}, "monoai.observability": {"tf": 1}, "monoai.tools.scrape_web_with_requests": {"tf": 1}}, "df": 8, "s": {"docs": {"monoai.agents.Agent.disable_streaming": {"tf": 1}, "monoai.rag.DocumentsBuilder": {"tf": 1}, "monoai.tools.scrape_web_with_requests": {"tf": 1.7320508075688772}, "monoai.tools.scrape_web": {"tf": 1.4142135623730951}}, "df": 4}, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"monoai.tools.scrape_web_with_requests": {"tf": 1}}, "df": 1}}}}}}}}}}}}, "i": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {"monoai.tools.scrape_web_with_selenium": {"tf": 1}}, "df": 1, "d": {"docs": {"monoai.observability": {"tf": 1}}, "df": 1}, "s": {"docs": {"monoai.rag.DocumentsBuilder.from_url": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"monoai": {"tf": 1}}, "df": 1, "d": {"docs": {"monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "l": {"docs": {"monoai.rag.RAG": {"tf": 1.4142135623730951}, "monoai.rag.RAG.__init__": {"tf": 1}}, "df": 2}}}}}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "n": {"docs": {"monoai.chat.Chat.ask": {"tf": 1.7320508075688772}, "monoai.conf.Conf.__init__": {"tf": 1}, "monoai.rag.RAG.query": {"tf": 1.4142135623730951}, "monoai.rag.ChromaVectorDB.query": {"tf": 1.4142135623730951}, "monoai.tools": {"tf": 1.4142135623730951}, "monoai.tools.scrape_web_with_tavily": {"tf": 1}}, "df": 6, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"monoai.agents.Agent.run": {"tf": 1}, "monoai.models": {"tf": 1}, "monoai.rag.RAG": {"tf": 1}}, "df": 3}}}, "s": {"docs": {"monoai.agents.Agent.run": {"tf": 1}, "monoai.chat.Chat.ask": {"tf": 1}, "monoai.chat.Chat.get_chat_info": {"tf": 1}, "monoai.conf.Conf.__init__": {"tf": 1}, "monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}, "monoai.tools": {"tf": 1}, "monoai.tools.scrape_web_with_requests": {"tf": 1}, "monoai.tools.scrape_web_with_selenium": {"tf": 1}, "monoai.tools.scrape_web_with_tavily": {"tf": 1}, "monoai.tools.scrape_web": {"tf": 1}}, "df": 11}, "e": {"docs": {}, "df": 0, "d": {"docs": {"monoai.rag.RAG.query": {"tf": 1.4142135623730951}, "monoai.rag.ChromaVectorDB.query": {"tf": 1.4142135623730951}}, "df": 2}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {"monoai.prompts.IterativePrompt.__init__": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"monoai.prompts.IterativePrompt.__init__": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"monoai.agents.Agent": {"tf": 2.23606797749979}, "monoai.agents.Agent.__init__": {"tf": 1.4142135623730951}, "monoai.agents.Agent.run": {"tf": 1.7320508075688772}}, "df": 3}}}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {"monoai.agents.Agent": {"tf": 1.4142135623730951}, "monoai.agents.Agent.__init__": {"tf": 2}, "monoai.agents.Agent.run": {"tf": 1}}, "df": 3}}, "l": {"docs": {"monoai.agents.Agent.enable_streaming": {"tf": 1}}, "df": 1}, "d": {"docs": {"monoai.rag.DocumentsBuilder.from_file": {"tf": 1}}, "df": 1}}, "g": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "s": {"docs": {"monoai.agents.Agent": {"tf": 1}}, "df": 1}}}}}}}, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"monoai.agents.Agent": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "s": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"monoai.tools": {"tf": 1}}, "df": 1}}}}}}}}}, "f": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "x": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"monoai.agents.Agent": {"tf": 1}, "monoai.agents.Agent.__init__": {"tf": 1.4142135623730951}}, "df": 2}}}}, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"monoai.agents.Agent": {"tf": 1}}, "df": 1}}, "o": {"docs": {}, "df": 0, "n": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "c": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"monoai.agents.Agent.enable_streaming": {"tf": 1}}, "df": 1}}}}}, "o": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"monoai.rag.RAG.__init__": {"tf": 1}}, "df": 1}}}}}}}}}, "m": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"monoai.chat.Chat.ask": {"tf": 1}}, "df": 1}}}}, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "t": {"docs": {"monoai.rag.RAG": {"tf": 1.4142135623730951}, "monoai.rag.RAG.query": {"tf": 1.4142135623730951}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}}, "df": 3}, "c": {"docs": {}, "df": 0, "e": {"docs": {"monoai.rag.RAG.query": {"tf": 1}}, "df": 1}}}}}}}, "n": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"monoai.tools.scrape_web_with_requests": {"tf": 1}}, "df": 1}}}}}}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "t": {"docs": {"monoai": {"tf": 1}, "monoai.observability": {"tf": 1}}, "df": 2}}}, "u": {"docs": {}, "df": 0, "n": {"docs": {"monoai.tools.scrape_web_with_selenium": {"tf": 1}}, "df": 1, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"monoai": {"tf": 1}}, "df": 1}}}}}}, "a": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1}, "monoai.agents.Agent.enable_streaming": {"tf": 1}, "monoai.agents.Agent.disable_streaming": {"tf": 1}, "monoai.chat.Chat.__init__": {"tf": 1}, "monoai.chat.Chat.ask": {"tf": 1}, "monoai.chat.Chat.ask_stream": {"tf": 1}, "monoai.chat.Chat.ask_async": {"tf": 1}, "monoai.chat.Chat.clear_history": {"tf": 1}, "monoai.prompts.Prompt.__init__": {"tf": 1}, "monoai.prompts.PromptChain.__init__": {"tf": 1}, "monoai.prompts.IterativePrompt.__init__": {"tf": 1}, "monoai.rag.RAG.__init__": {"tf": 1}, "monoai.rag.ChromaVectorDB.add": {"tf": 1}, "monoai.tools.scrape_web_with_requests": {"tf": 1}, "monoai.tools.scrape_web_with_selenium": {"tf": 1}, "monoai.tools.scrape_web_with_tavily": {"tf": 1}, "monoai.tools.scrape_web": {"tf": 1}}, "df": 17}}}}, "g": {"docs": {"monoai.rag": {"tf": 1}, "monoai.rag.RAG": {"tf": 3.872983346207417}, "monoai.rag.RAG.__init__": {"tf": 2.6457513110645907}, "monoai.rag.RAG.query": {"tf": 1.4142135623730951}, "monoai.rag.DocumentsBuilder": {"tf": 1}}, "df": 5}, "w": {"docs": {"monoai.tools.scrape_web_with_tavily": {"tf": 1}}, "df": 1}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "k": {"docs": {"monoai": {"tf": 1}}, "df": 1}}}, "o": {"docs": {}, "df": 0, "t": {"docs": {"monoai": {"tf": 7.211102550927978}, "monoai.observability": {"tf": 4.69041575982343}, "monoai.rag.RAG": {"tf": 5.291502622129181}, "monoai.rag.RAG.__init__": {"tf": 3.7416573867739413}, "monoai.rag.RAG.query": {"tf": 3.7416573867739413}, "monoai.rag.ChromaVectorDB": {"tf": 5.0990195135927845}, "monoai.rag.ChromaVectorDB.__init__": {"tf": 2.8284271247461903}, "monoai.rag.ChromaVectorDB.add": {"tf": 5.291502622129181}, "monoai.rag.ChromaVectorDB.query": {"tf": 3.4641016151377544}, "monoai.tools": {"tf": 2.8284271247461903}}, "df": 10}}, "e": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"monoai.chat.Chat.ask": {"tf": 1.4142135623730951}, "monoai.chat.Chat.ask_stream": {"tf": 1.4142135623730951}, "monoai.chat.Chat.ask_async": {"tf": 1.4142135623730951}, "monoai.prompts.Prompt": {"tf": 1.4142135623730951}}, "df": 4, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"monoai.agents.Agent": {"tf": 1}}, "df": 1}}}, "s": {"docs": {"monoai.rag.RAG": {"tf": 1}}, "df": 1}}}}}}, "r": {"docs": {}, "df": 0, "y": {"docs": {"monoai.agents.Agent.run": {"tf": 1.4142135623730951}, "monoai.rag.RAG": {"tf": 1.4142135623730951}, "monoai.rag.RAG.query": {"tf": 3}, "monoai.rag.ChromaVectorDB": {"tf": 1.4142135623730951}, "monoai.rag.ChromaVectorDB.query": {"tf": 2.23606797749979}}, "df": 5}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "s": {"docs": {"monoai.rag": {"tf": 1}, "monoai.rag.RAG": {"tf": 1.4142135623730951}, "monoai.rag.ChromaVectorDB.add": {"tf": 1}}, "df": 3}}}}}}}, "y": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {"monoai": {"tf": 1.7320508075688772}, "monoai.observability": {"tf": 1.4142135623730951}, "monoai.prompts.Prompt": {"tf": 1}, "monoai.tools": {"tf": 1.4142135623730951}}, "df": 4, "r": {"docs": {"monoai": {"tf": 1.4142135623730951}, "monoai.chat.Chat": {"tf": 1.4142135623730951}, "monoai.observability": {"tf": 2.449489742783178}, "monoai.tools": {"tf": 1}}, "df": 4}}}, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"monoai": {"tf": 1.4142135623730951}, "monoai.conf.Conf": {"tf": 1}, "monoai.observability": {"tf": 1}}, "df": 3}}}, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "s": {"docs": {"monoai.chat.Chat.ask_stream": {"tf": 1}, "monoai.chat.Chat.ask_async": {"tf": 1}}, "df": 2}}}}}, "e": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "r": {"docs": {"monoai.rag.ChromaVectorDB.add": {"tf": 1.4142135623730951}}, "df": 1}}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"monoai": {"tf": 1.7320508075688772}, "monoai.agents.Agent": {"tf": 1}, "monoai.agents.Agent.__init__": {"tf": 1.4142135623730951}, "monoai.agents.Agent.disable_streaming": {"tf": 1}, "monoai.chat.Chat.__init__": {"tf": 1.4142135623730951}, "monoai.prompts.Prompt": {"tf": 1}, "monoai.rag.RAG": {"tf": 1}, "monoai.rag.RAG.__init__": {"tf": 2.449489742783178}, "monoai.rag.ChromaVectorDB.__init__": {"tf": 1.4142135623730951}, "monoai.rag.DocumentsBuilder": {"tf": 1}, "monoai.tools": {"tf": 1}, "monoai.tools.scrape_web_with_tavily": {"tf": 1}, "monoai.tools.scrape_web": {"tf": 1.4142135623730951}}, "df": 13, "s": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1.4142135623730951}, "monoai.agents.Agent.enable_streaming": {"tf": 1}, "monoai.models": {"tf": 1}, "monoai.rag.ChromaVectorDB.add": {"tf": 1}, "monoai.tools.scrape_web_with_requests": {"tf": 1}, "monoai.tools.scrape_web_with_selenium": {"tf": 1}, "monoai.tools.scrape_web_with_tavily": {"tf": 1}}, "df": 7}, "r": {"docs": {"monoai.agents.Agent.run": {"tf": 1.7320508075688772}, "monoai.chat.Chat": {"tf": 1.4142135623730951}, "monoai.observability": {"tf": 1}}, "df": 3}, "d": {"docs": {"monoai.chat.Chat.__init__": {"tf": 1}, "monoai.observability": {"tf": 1}, "monoai.prompts.PromptChain": {"tf": 1}, "monoai.rag.RAG": {"tf": 1}, "monoai.rag.RAG.__init__": {"tf": 1}, "monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB.add": {"tf": 1}, "monoai.rag.DocumentsBuilder": {"tf": 1}, "monoai.tools": {"tf": 1}}, "df": 9}, "f": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "l": {"docs": {"monoai.tools.scrape_web_with_selenium": {"tf": 1}}, "df": 1}}}}, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"monoai": {"tf": 1.4142135623730951}, "monoai.agents.Agent": {"tf": 1}, "monoai.rag.RAG": {"tf": 1}, "monoai.rag.ChromaVectorDB": {"tf": 1.4142135623730951}, "monoai.rag.ChromaVectorDB.add": {"tf": 1.4142135623730951}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}, "monoai.tools.scrape_web_with_requests": {"tf": 1}, "monoai.tools.scrape_web_with_selenium": {"tf": 1}, "monoai.tools.scrape_web_with_tavily": {"tf": 1}, "monoai.tools.scrape_web": {"tf": 1.7320508075688772}}, "df": 10}}}, "a": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "e": {"docs": {"monoai.chat.Chat": {"tf": 1}, "monoai.rag.RAG": {"tf": 1}, "monoai.rag.ChromaVectorDB": {"tf": 1}}, "df": 3}}}}, "n": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"monoai.agents.Agent": {"tf": 1}}, "df": 1}}}}, "q": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"monoai.rag.ChromaVectorDB.add": {"tf": 1.7320508075688772}, "monoai.rag.DocumentsBuilder": {"tf": 1}}, "df": 2}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "g": {"docs": {"monoai.agents.Agent": {"tf": 1}}, "df": 1}}}}}}}}, "s": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"monoai.rag.RAG.__init__": {"tf": 1}}, "df": 1}}}}}}}}}}, "p": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1}}, "df": 1}, "r": {"docs": {}, "df": 0, "l": {"docs": {"monoai.chat.Chat.ask": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_url": {"tf": 1}, "monoai.tools.scrape_web_with_requests": {"tf": 1.4142135623730951}, "monoai.tools.scrape_web_with_selenium": {"tf": 1.4142135623730951}, "monoai.tools.scrape_web_with_tavily": {"tf": 1.4142135623730951}, "monoai.tools.scrape_web": {"tf": 1.4142135623730951}}, "df": 6}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"monoai.rag.DocumentsBuilder": {"tf": 1}}, "df": 1}}}}}, "f": {"docs": {"monoai.rag.DocumentsBuilder": {"tf": 1}}, "df": 1}}}, "x": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "l": {"docs": {"monoai": {"tf": 1}, "monoai.prompts": {"tf": 1}}, "df": 2}}}, "g": {"docs": {"monoai.rag.RAG.__init__": {"tf": 1}}, "df": 1, "t": {"docs": {"monoai": {"tf": 1.4142135623730951}, "monoai.prompts.Prompt": {"tf": 2.8284271247461903}, "monoai.prompts.PromptChain": {"tf": 2.449489742783178}, "monoai.prompts.IterativePrompt": {"tf": 2.449489742783178}}, "df": 4}, "e": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"monoai": {"tf": 1}, "monoai.agents.Agent": {"tf": 1}, "monoai.chat.Chat": {"tf": 1}, "monoai.prompts.IterativePrompt": {"tf": 1.4142135623730951}, "monoai.rag.RAG": {"tf": 1}, "monoai.rag.DocumentsBuilder": {"tf": 1.4142135623730951}}, "df": 6}}}, "e": {"docs": {"monoai.prompts.IterativePrompt": {"tf": 2}}, "df": 1, "d": {"docs": {"monoai.agents.Agent.enable_streaming": {"tf": 1}}, "df": 1}}}}}}}, "t": {"docs": {"monoai.chat.Chat.get_chat_info": {"tf": 1}, "monoai.tools": {"tf": 1.7320508075688772}, "monoai.tools.domain_whois": {"tf": 1}, "monoai.tools.domain_whois.domain_whois": {"tf": 1}}, "df": 4}}, "p": {"docs": {}, "df": 0, "t": {"docs": {"monoai": {"tf": 2}, "monoai.chat.Chat": {"tf": 2.6457513110645907}, "monoai.conf.Conf": {"tf": 1}, "monoai.rag.RAG": {"tf": 1}}, "df": 4}}, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"monoai": {"tf": 1}, "monoai.tools": {"tf": 1.4142135623730951}, "monoai.tools.domain_whois": {"tf": 1}, "monoai.tools.domain_whois.domain_whois": {"tf": 1}}, "df": 4}}}, "u": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "e": {"docs": {"monoai.chat.Chat": {"tf": 2.449489742783178}}, "df": 1}}}}}}}, "l": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "y": {"docs": {"monoai": {"tf": 1}}, "df": 1}}}}}}}, "h": {"docs": {}, "df": 0, "i": {"docs": {"monoai.chat.Chat": {"tf": 1}, "monoai.observability": {"tf": 1}}, "df": 2}}, "o": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"monoai.tools": {"tf": 1}}, "df": 1}}}}}}, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"monoai.observability": {"tf": 1}}, "df": 1, "p": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "t": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1}, "monoai.prompts.PromptChain": {"tf": 1}, "monoai.rag.DocumentsBuilder": {"tf": 1}}, "df": 3, "s": {"docs": {"monoai": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "p": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "n": {"docs": {"monoai.observability": {"tf": 1.4142135623730951}, "monoai.rag.ChromaVectorDB": {"tf": 1}}, "df": 2, "a": {"docs": {}, "df": 0, "i": {"docs": {"monoai": {"tf": 2.23606797749979}, "monoai.agents.Agent": {"tf": 1}, "monoai.agents.Agent.__init__": {"tf": 1}, "monoai.chat.Chat": {"tf": 2.6457513110645907}, "monoai.conf.Conf": {"tf": 1}, "monoai.rag.RAG": {"tf": 2}, "monoai.rag.RAG.__init__": {"tf": 1.7320508075688772}, "monoai.rag.ChromaVectorDB": {"tf": 1.4142135623730951}, "monoai.rag.ChromaVectorDB.__init__": {"tf": 1.4142135623730951}}, "df": 9}}, "t": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "y": {"docs": {"monoai.observability": {"tf": 1.4142135623730951}}, "df": 1}}}}}}}}}}, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "s": {"docs": {"monoai.rag.ChromaVectorDB": {"tf": 1}, "monoai.rag.DocumentsBuilder": {"tf": 1}}, "df": 2}}}}}}}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"monoai.agents.Agent.__init__": {"tf": 2.449489742783178}, "monoai.agents.Agent.enable_streaming": {"tf": 1}, "monoai.chat.Chat.__init__": {"tf": 3}, "monoai.chat.Chat.ask": {"tf": 2}, "monoai.chat.Chat.ask_stream": {"tf": 1.7320508075688772}, "monoai.chat.Chat.ask_async": {"tf": 1.7320508075688772}, "monoai.models": {"tf": 1}, "monoai.prompts.Prompt": {"tf": 1}, "monoai.prompts.Prompt.__init__": {"tf": 2}, "monoai.prompts.PromptChain.__init__": {"tf": 1.7320508075688772}, "monoai.prompts.IterativePrompt": {"tf": 1}, "monoai.prompts.IterativePrompt.__init__": {"tf": 2.449489742783178}, "monoai.rag.RAG.__init__": {"tf": 1.4142135623730951}, "monoai.rag.ChromaVectorDB.__init__": {"tf": 1.7320508075688772}}, "df": 14}}, "s": {"docs": {"monoai.chat.Chat.__init__": {"tf": 1}, "monoai.rag.DocumentsBuilder": {"tf": 1}}, "df": 2}}}}}, "p": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "e": {"docs": {"monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}}, "df": 2}}}}}}}, "f": {"docs": {"monoai": {"tf": 1.7320508075688772}, "monoai.agents.Agent": {"tf": 1}, "monoai.agents.Agent.__init__": {"tf": 2}, "monoai.agents.Agent.run": {"tf": 1}, "monoai.agents.Agent.enable_streaming": {"tf": 1}, "monoai.chat.Chat.__init__": {"tf": 2.449489742783178}, "monoai.chat.Chat.ask": {"tf": 1.4142135623730951}, "monoai.chat.Chat.ask_stream": {"tf": 1}, "monoai.chat.Chat.ask_async": {"tf": 1}, "monoai.models": {"tf": 1}, "monoai.observability": {"tf": 1}, "monoai.prompts": {"tf": 1}, "monoai.prompts.Prompt": {"tf": 1}, "monoai.prompts.Prompt.__init__": {"tf": 1.4142135623730951}, "monoai.prompts.PromptChain": {"tf": 2.23606797749979}, "monoai.prompts.PromptChain.__init__": {"tf": 1.4142135623730951}, "monoai.prompts.IterativePrompt": {"tf": 3}, "monoai.prompts.IterativePrompt.__init__": {"tf": 1.7320508075688772}, "monoai.rag.RAG": {"tf": 1}, "monoai.rag.RAG.__init__": {"tf": 1}, "monoai.rag.RAG.query": {"tf": 1.7320508075688772}, "monoai.rag.ChromaVectorDB": {"tf": 1.7320508075688772}, "monoai.rag.ChromaVectorDB.__init__": {"tf": 1}, "monoai.rag.ChromaVectorDB.add": {"tf": 2.23606797749979}, "monoai.rag.ChromaVectorDB.query": {"tf": 1.7320508075688772}, "monoai.rag.DocumentsBuilder": {"tf": 1.4142135623730951}, "monoai.tools": {"tf": 1}, "monoai.tools.scrape_web_with_requests": {"tf": 1}, "monoai.tools.scrape_web_with_selenium": {"tf": 1}, "monoai.tools.scrape_web": {"tf": 1.4142135623730951}}, "df": 30}, "n": {"docs": {"monoai": {"tf": 1}, "monoai.agents.Agent.run": {"tf": 1.4142135623730951}, "monoai.observability": {"tf": 1}, "monoai.rag.RAG": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_url": {"tf": 1}, "monoai.tools.scrape_web": {"tf": 1}}, "df": 6, "e": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1}, "monoai.prompts.PromptChain": {"tf": 1.4142135623730951}}, "df": 2}, "l": {"docs": {}, "df": 0, "y": {"docs": {"monoai.chat.Chat.ask": {"tf": 1}, "monoai.models": {"tf": 1}, "monoai.prompts.IterativePrompt.__init__": {"tf": 1}}, "df": 3}}}, "r": {"docs": {"monoai": {"tf": 1}, "monoai.agents.Agent": {"tf": 1}, "monoai.agents.Agent.__init__": {"tf": 1.7320508075688772}, "monoai.agents.Agent.run": {"tf": 2}, "monoai.chat.Chat.__init__": {"tf": 1.4142135623730951}, "monoai.chat.Chat.ask": {"tf": 2}, "monoai.chat.Chat.ask_stream": {"tf": 1}, "monoai.chat.Chat.ask_async": {"tf": 1}, "monoai.conf.Conf.__init__": {"tf": 1}, "monoai.prompts": {"tf": 1}, "monoai.prompts.Prompt": {"tf": 1}, "monoai.prompts.Prompt.__init__": {"tf": 1}, "monoai.rag.ChromaVectorDB.__init__": {"tf": 1}}, "df": 13, "i": {"docs": {}, "df": 0, "g": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "n": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"monoai.agents.Agent.run": {"tf": 1}}, "df": 1}}}}}}, "d": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"monoai.agents.Agent": {"tf": 1}, "monoai.agents.Agent.run": {"tf": 1}, "monoai.observability": {"tf": 1}}, "df": 3, "w": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "e": {"docs": {"monoai.prompts.IterativePrompt.__init__": {"tf": 1}}, "df": 1}}}}}}}}, "b": {"docs": {}, "df": 0, "j": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1.4142135623730951}, "monoai.agents.Agent.run": {"tf": 1}, "monoai.chat.Chat.__init__": {"tf": 1}}, "df": 3, "s": {"docs": {"monoai.prompts.PromptChain.__init__": {"tf": 1}}, "df": 1}}}}}, "s": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"monoai.agents.Agent.run": {"tf": 1}}, "df": 1}}}}, "b": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "y": {"docs": {"monoai.chat.Chat": {"tf": 1}, "monoai.chat.Chat.ask": {"tf": 1}, "monoai.chat.Chat.ask_stream": {"tf": 1}, "monoai.chat.Chat.ask_async": {"tf": 1}, "monoai.observability": {"tf": 2.8284271247461903}}, "df": 5}}}}}}}}}}}}, "v": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"monoai.prompts.IterativePrompt": {"tf": 1}, "monoai.prompts.IterativePrompt.__init__": {"tf": 1}}, "df": 2, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "d": {"docs": {}, "df": 0, "e": {"docs": {"monoai.conf.Conf": {"tf": 1}}, "df": 1, "s": {"docs": {"monoai.conf.Conf": {"tf": 1}}, "df": 1}}}}}, "l": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "p": {"docs": {"monoai.rag.DocumentsBuilder": {"tf": 2}, "monoai.rag.DocumentsBuilder.from_file": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_str": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_url": {"tf": 1}}, "df": 4}}}}}}, "w": {"docs": {}, "df": 0, "n": {"docs": {"monoai.tools": {"tf": 1}}, "df": 1}}}, "k": {"docs": {"monoai.rag.RAG": {"tf": 1.4142135623730951}, "monoai.rag.RAG.query": {"tf": 1.7320508075688772}, "monoai.rag.ChromaVectorDB": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1.7320508075688772}}, "df": 4, "e": {"docs": {}, "df": 0, "y": {"docs": {"monoai": {"tf": 1.7320508075688772}, "monoai.observability": {"tf": 2}, "monoai.rag.RAG.__init__": {"tf": 1}, "monoai.rag.ChromaVectorDB.add": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_url": {"tf": 1}}, "df": 5, "s": {"docs": {"monoai": {"tf": 2.449489742783178}, "monoai.observability": {"tf": 1.7320508075688772}}, "df": 2, "f": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "e": {"docs": {"monoai": {"tf": 1.4142135623730951}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "p": {"docs": {"monoai.chat.Chat.__init__": {"tf": 1}}, "df": 1}}}, "n": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "w": {"docs": {"monoai.tools": {"tf": 1}}, "df": 1}}}}, "n": {"docs": {"monoai.chat.Chat.__init__": {"tf": 1.4142135623730951}}, "df": 1, "a": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "e": {"docs": {"monoai": {"tf": 1}, "monoai.chat.Chat": {"tf": 2}, "monoai.prompts.Prompt": {"tf": 1}, "monoai.prompts.Prompt.__init__": {"tf": 1}, "monoai.prompts.PromptChain.__init__": {"tf": 1}, "monoai.prompts.IterativePrompt.__init__": {"tf": 1}, "monoai.rag.RAG": {"tf": 1.4142135623730951}, "monoai.rag.RAG.__init__": {"tf": 1}, "monoai.rag.ChromaVectorDB": {"tf": 1.4142135623730951}, "monoai.rag.ChromaVectorDB.__init__": {"tf": 1.7320508075688772}}, "df": 10}}, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "e": {"docs": {"monoai.agents.Agent": {"tf": 1}, "monoai.agents.Agent.__init__": {"tf": 1.7320508075688772}}, "df": 2}}}}}, "o": {"docs": {"monoai": {"tf": 1.4142135623730951}, "monoai.agents.Agent.__init__": {"tf": 1}}, "df": 2, "n": {"docs": {"monoai.agents.Agent.disable_streaming": {"tf": 1}}, "df": 1, "e": {"docs": {"monoai": {"tf": 1}, "monoai.agents.Agent.__init__": {"tf": 2.449489742783178}, "monoai.agents.Agent.enable_streaming": {"tf": 1}, "monoai.rag.RAG.__init__": {"tf": 1.4142135623730951}, "monoai.tools.scrape_web_with_tavily": {"tf": 1}}, "df": 5}}, "t": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1}, "monoai.chat.Chat.__init__": {"tf": 1.4142135623730951}, "monoai.prompts.Prompt.__init__": {"tf": 1}, "monoai.prompts.PromptChain.__init__": {"tf": 1}, "monoai.prompts.IterativePrompt.__init__": {"tf": 1}, "monoai.tools.scrape_web_with_tavily": {"tf": 1}, "monoai.tools.scrape_web": {"tf": 1}}, "df": 7, "e": {"docs": {}, "df": 0, "s": {"docs": {"monoai.agents.Agent.run": {"tf": 1}, "monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB.add": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}, "monoai.rag.DocumentsBuilder.from_url": {"tf": 1}}, "df": 5}}}, "r": {"docs": {"monoai.prompts.Prompt.__init__": {"tf": 1}, "monoai.prompts.PromptChain.__init__": {"tf": 1}, "monoai.prompts.IterativePrompt.__init__": {"tf": 1}}, "df": 3}}, "e": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "d": {"docs": {"monoai.tools": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "d": {"docs": {"monoai": {"tf": 1}}, "df": 1}}}}, "w": {"docs": {"monoai.chat.Chat": {"tf": 1.4142135623730951}, "monoai.chat.Chat.__init__": {"tf": 1.4142135623730951}, "monoai.prompts.Prompt.__init__": {"tf": 1}, "monoai.prompts.PromptChain.__init__": {"tf": 1}, "monoai.prompts.IterativePrompt.__init__": {"tf": 1}, "monoai.rag.ChromaVectorDB": {"tf": 1}, "monoai.rag.ChromaVectorDB.__init__": {"tf": 1}}, "df": 7}, "i": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "h": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"monoai.prompts.Prompt.__init__": {"tf": 1}, "monoai.prompts.PromptChain.__init__": {"tf": 1}, "monoai.prompts.IterativePrompt.__init__": {"tf": 1}}, "df": 3}}}}}, "x": {"docs": {}, "df": 0, "t": {"docs": {"monoai.prompts.PromptChain": {"tf": 1}}, "df": 1}}, "u": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "l": {"docs": {"monoai.rag.RAG": {"tf": 1}, "monoai.rag.ChromaVectorDB.add": {"tf": 1}}, "df": 2}}}}, "t": {"docs": {}, "df": 0, "w": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "k": {"docs": {}, "df": 0, "s": {"docs": {"monoai.rag.RAG": {"tf": 1}, "monoai.rag.ChromaVectorDB.add": {"tf": 1}}, "df": 2}}}}}}}, "u": {"docs": {}, "df": 0, "m": {"docs": {}, "df": 0, "b": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1}, "monoai.chat.Chat.__init__": {"tf": 1.4142135623730951}, "monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}, "monoai.rag.DocumentsBuilder": {"tf": 1}}, "df": 5}}}}}}, "v": {"3": {"docs": {"monoai.rag.RAG.__init__": {"tf": 1}}, "df": 1}, "docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "a": {"docs": {"monoai": {"tf": 1}, "monoai.rag.ChromaVectorDB": {"tf": 1}}, "df": 2}}, "a": {"docs": {}, "df": 0, "l": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "e": {"docs": {"monoai.rag.ChromaVectorDB.add": {"tf": 1}}, "df": 1, "e": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"monoai.agents.Agent.__init__": {"tf": 1}, "monoai.prompts.Prompt.__init__": {"tf": 1}, "monoai.prompts.PromptChain.__init__": {"tf": 1}, "monoai.prompts.IterativePrompt.__init__": {"tf": 1}, "monoai.rag.RAG.__init__": {"tf": 1}, "monoai.rag.ChromaVectorDB.add": {"tf": 1}, "monoai.tools.scrape_web": {"tf": 1}}, "df": 7}}}}}, "s": {"docs": {"monoai.prompts.Prompt.__init__": {"tf": 1}, "monoai.prompts.IterativePrompt.__init__": {"tf": 1}, "monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}}, "df": 4}}}}, "r": {"docs": {}, "df": 0, "y": {"docs": {"monoai.agents.Agent.run": {"tf": 1}}, "df": 1}, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "u": {"docs": {}, "df": 0, "s": {"docs": {"monoai.rag.DocumentsBuilder": {"tf": 1}}, "df": 1}}}}}}, "e": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "r": {"docs": {"monoai.rag": {"tf": 1.4142135623730951}, "monoai.rag.RAG": {"tf": 3.1622776601683795}, "monoai.rag.RAG.__init__": {"tf": 2}, "monoai.rag.RAG.query": {"tf": 1.7320508075688772}, "monoai.rag.ChromaVectorDB": {"tf": 2.449489742783178}, "monoai.rag.ChromaVectorDB.__init__": {"tf": 1.7320508075688772}, "monoai.rag.ChromaVectorDB.add": {"tf": 1.4142135623730951}, "monoai.rag.ChromaVectorDB.query": {"tf": 1.4142135623730951}, "monoai.rag.DocumentsBuilder": {"tf": 1.4142135623730951}}, "df": 9, "i": {"docs": {}, "df": 0, "z": {"docs": {}, "df": 0, "e": {"docs": {}, "df": 0, "r": {"docs": {"monoai.rag.RAG": {"tf": 1.7320508075688772}, "monoai.rag.RAG.__init__": {"tf": 1.7320508075688772}, "monoai.rag.ChromaVectorDB": {"tf": 1.4142135623730951}, "monoai.rag.ChromaVectorDB.__init__": {"tf": 2}}, "df": 4}}, "a": {"docs": {}, "df": 0, "t": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"monoai.rag.RAG": {"tf": 1}, "monoai.rag.RAG.__init__": {"tf": 1}, "monoai.rag.ChromaVectorDB.__init__": {"tf": 1}}, "df": 3}}}}}}}}}}}}}, "j": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "o": {"docs": {}, "df": 0, "n": {"docs": {"monoai.chat.Chat": {"tf": 2.23606797749979}, "monoai.chat.Chat.__init__": {"tf": 1}, "monoai.chat.Chat.ask_stream": {"tf": 1}, "monoai.prompts.Prompt.__init__": {"tf": 1}}, "df": 4}}}, "a": {"docs": {}, "df": 0, "v": {"docs": {}, "df": 0, "a": {"docs": {}, "df": 0, "s": {"docs": {}, "df": 0, "c": {"docs": {}, "df": 0, "r": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {}, "df": 0, "t": {"docs": {"monoai.tools.scrape_web_with_requests": {"tf": 1}, "monoai.tools.scrape_web_with_selenium": {"tf": 1.7320508075688772}}, "df": 2}}}}}}}}}}, "z": {"docs": {}, "df": 0, "i": {"docs": {}, "df": 0, "p": {"docs": {"monoai.rag.RAG.query": {"tf": 1}, "monoai.rag.ChromaVectorDB.query": {"tf": 1}}, "df": 2}}}}}}, "pipeline": ["trimmer"], "_isPrebuiltIndex": true};

    // mirrored in build-search-index.js (part 1)
    // Also split on html tags. this is a cheap heuristic, but good enough.
    elasticlunr.tokenizer.setSeperator(/[\s\-.;&_'"=,()]+|<[^>]*>/);

    let searchIndex;
    if (docs._isPrebuiltIndex) {
        console.info("using precompiled search index");
        searchIndex = elasticlunr.Index.load(docs);
    } else {
        console.time("building search index");
        // mirrored in build-search-index.js (part 2)
        searchIndex = elasticlunr(function () {
            this.pipeline.remove(elasticlunr.stemmer);
            this.pipeline.remove(elasticlunr.stopWordFilter);
            this.addField("qualname");
            this.addField("fullname");
            this.addField("annotation");
            this.addField("default_value");
            this.addField("signature");
            this.addField("bases");
            this.addField("doc");
            this.setRef("fullname");
        });
        for (let doc of docs) {
            searchIndex.addDoc(doc);
        }
        console.timeEnd("building search index");
    }

    return (term) => searchIndex.search(term, {
        fields: {
            qualname: {boost: 4},
            fullname: {boost: 2},
            annotation: {boost: 2},
            default_value: {boost: 2},
            signature: {boost: 2},
            bases: {boost: 2},
            doc: {boost: 1},
        },
        expand: true
    });
})();